// <auto-generated/>

//#region BattleHotkeysPreset
declare namespace HordeResurrection.Game.HordeInput {
	abstract class BattleHotkeysPreset extends System.EnumFlags {
		/** BattleHotkeysPreset.None = 0 */ static readonly None: BattleHotkeysPreset;
		/** BattleHotkeysPreset.ServiceKeys = 1 */ static readonly ServiceKeys: BattleHotkeysPreset;
		/** BattleHotkeysPreset.CommonKeys = 2 */ static readonly CommonKeys: BattleHotkeysPreset;
		/** BattleHotkeysPreset.ChatKeys = 4 */ static readonly ChatKeys: BattleHotkeysPreset;
		/** BattleHotkeysPreset.UnitListKeys = 8 */ static readonly UnitListKeys: BattleHotkeysPreset;
		/** BattleHotkeysPreset.UnitCommandKeys = 16 */ static readonly UnitCommandKeys: BattleHotkeysPreset;
	}
}
//#endregion

//#region KeyEventType
declare namespace HordeResurrection.Game.HordeInput.KeyboardEvents {
	abstract class KeyEventType extends System.Enum {
		/** KeyEventType.Down = 0 */ static readonly Down: KeyEventType;
		/** KeyEventType.Pressed = 1 */ static readonly Pressed: KeyEventType;
		/** KeyEventType.Released = 2 */ static readonly Released: KeyEventType;
	}
}
//#endregion

//#region KeyModifierFlag
declare namespace HordeResurrection.Game.HordeInput {
	abstract class KeyModifierFlag extends System.EnumFlags {
		/** KeyModifierFlag.None = 0 */ static readonly None: KeyModifierFlag;
		/** KeyModifierFlag.Control = 2 */ static readonly Control: KeyModifierFlag;
		/** KeyModifierFlag.Shift = 4 */ static readonly Shift: KeyModifierFlag;
		/** KeyModifierFlag.ShiftControl = 6 */ static readonly ShiftControl: KeyModifierFlag;
		/** KeyModifierFlag.Alt = 16 */ static readonly Alt: KeyModifierFlag;
		/** KeyModifierFlag.ControlAlt = 18 */ static readonly ControlAlt: KeyModifierFlag;
		/** KeyModifierFlag.AltShift = 20 */ static readonly AltShift: KeyModifierFlag;
		/** KeyModifierFlag.All = 22 */ static readonly All: KeyModifierFlag;
	}
}
//#endregion

//#region BattleUiColors
declare namespace HordeResurrection.Game.Render.Constants {
	abstract class BattleUiColors {

		// Fields:
		static readonly UnitsFrameColor: Stride.Core.Mathematics.Color;
		static readonly SelectedUnitsFrameColor: Stride.Core.Mathematics.Color;
		static readonly SelectedUnitsMediumHealthFrameColor: Stride.Core.Mathematics.Color;
		static readonly SelectedDeadUnitsColor: Stride.Core.Mathematics.Color;
		static readonly UnitInForestColor: Stride.Core.Mathematics.Color;
		static readonly UnitInForestMediumHealthColor: Stride.Core.Mathematics.Color;
		static readonly DeadUnitInForestColor: Stride.Core.Mathematics.Color;
		static readonly EnemyUnitInForestColor: Stride.Core.Mathematics.Color;
		static readonly DeadEnemyUnitInForestColor: Stride.Core.Mathematics.Color;
		static readonly UnknownUnitInForestColor: Stride.Core.Mathematics.Color;
		static readonly DeadUnknownUnitInForestColor: Stride.Core.Mathematics.Color;
		static readonly ProductOkCursorColor: Stride.Core.Mathematics.Color;
		static readonly ProductNoCursorColor: Stride.Core.Mathematics.Color;
		static readonly ProductOkCurrentTargetColor: Stride.Core.Mathematics.Color;
		static readonly ProductNoCurrentTargetColor: Stride.Core.Mathematics.Color;
		static readonly ProductOkNextTargetColor: Stride.Core.Mathematics.Color;
		static readonly ProductNoNextTargetColor: Stride.Core.Mathematics.Color;
		static readonly ProductTerritory: Stride.Core.Mathematics.Color;
		static readonly ProductTerritoryFill: Stride.Core.Mathematics.Color;
		static readonly PopulationTerritoryFill: Stride.Core.Mathematics.Color;
		static readonly ProductTerritoryBorder: Stride.Core.Mathematics.Color;
		static readonly ProductCastleTerritoryBorder: Stride.Core.Mathematics.Color;
		static readonly TerritoryResourceGold: Stride.Core.Mathematics.Color;
		static readonly TerritoryResourceMetal: Stride.Core.Mathematics.Color;
		static readonly TerritoryResourceUnknown: Stride.Core.Mathematics.Color;
		static readonly DebugCursorColor: Stride.Core.Mathematics.Color;
		static readonly DebugUnitMoveTargetColor: Stride.Core.Mathematics.Color;
		static readonly DebugUnitMoveMultiTargetColor: Stride.Core.Mathematics.Color;
		static readonly DebugUnitMoveLineColor: Stride.Core.Mathematics.Color;
		static readonly DebugUnitWaitLineColor: Stride.Core.Mathematics.Color;
		static readonly DebugUnitAttackColor: Stride.Core.Mathematics.Color;
		static readonly DebugUnitAttackLineColor: Stride.Core.Mathematics.Color;
		static readonly DebugUnitPathColor: Stride.Core.Mathematics.Color;
		static readonly DebugAreaColors: System.Collections.Generic.List<Stride.Core.Mathematics.Color>;
		static readonly DebugBlockColor: Stride.Core.Mathematics.Color;
		static readonly DebugGridColor: Stride.Core.Mathematics.Color;
		static readonly DebugTileColor: System.Collections.Generic.Dictionary<HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType, Stride.Core.Mathematics.Color>;
		static readonly DebugFallbackTileColor: Stride.Core.Mathematics.Color;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region GeometryCanvas
declare namespace HordeResurrection.Game.Render.GeometryCanvas {
	class GeometryCanvas extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly IsEmpty: boolean;

		// Methods:
		GetBuffers(): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		Clear(): void;

		DrawLine(
			a: Stride.Core.Mathematics.Vector2,
			b: Stride.Core.Mathematics.Vector2,
			color: Stride.Core.Mathematics.Color,
			thickness?: number /* = 1 */,
			antiAliased?: boolean /* = true */
		): void;

		DrawPolyLine(
			points: Stride.Core.Mathematics.Vector2[] | null,
			color: Stride.Core.Mathematics.Color,
			thickness?: number /* = 1 */,
			antiAliased?: boolean /* = true */
		): void;

		DrawTriangle(
			a: Stride.Core.Mathematics.Vector2,
			b: Stride.Core.Mathematics.Vector2,
			c: Stride.Core.Mathematics.Vector2,
			color: Stride.Core.Mathematics.Color,
			thickness?: number /* = 1 */,
			antiAliased?: boolean /* = true */
		): void;

		DrawTriangleFilled(
			a: Stride.Core.Mathematics.Vector2,
			b: Stride.Core.Mathematics.Vector2,
			c: Stride.Core.Mathematics.Vector2,
			color: Stride.Core.Mathematics.Color,
			antiAliased?: boolean /* = true */
		): void;

		DrawCircle(
			centre: Stride.Core.Mathematics.Vector2,
			radius: number,
			color: Stride.Core.Mathematics.Color,
			numSegments: number,
			thickness: number,
			antiAliased?: boolean /* = true */
		): void;

		DrawCircleFast(
			centre: Stride.Core.Mathematics.Vector2,
			radius: number,
			color: Stride.Core.Mathematics.Color,
			thickness: number,
			antiAliased?: boolean /* = true */
		): void;

		DrawCircleFilled(
			centre: Stride.Core.Mathematics.Vector2,
			radius: number,
			color: Stride.Core.Mathematics.Color,
			numSegments: number,
			antiAliased?: boolean /* = true */
		): void;

		DrawRect(
			a: Stride.Core.Mathematics.Vector2,
			b: Stride.Core.Mathematics.Vector2,
			color: Stride.Core.Mathematics.Color,
			thickness: number,
			rounding?: number /* = 0 */,
			roundingCornersFlags?: HordeResurrection.Game.Render.GeometryCanvas.Internal.CornerFlags /* = CornerFlags.None */,
			antiAliased?: boolean /* = true */
		): void;

		DrawRectFilled(
			a: Stride.Core.Mathematics.Vector2,
			b: Stride.Core.Mathematics.Vector2,
			color: Stride.Core.Mathematics.Color,
			rounding?: number /* = 0 */,
			roundingCornersFlags?: HordeResurrection.Game.Render.GeometryCanvas.Internal.CornerFlags /* = CornerFlags.None */,
			antiAliased?: boolean /* = true */
		): void;

		DrawQuad(
			a: Stride.Core.Mathematics.Vector2,
			b: Stride.Core.Mathematics.Vector2,
			c: Stride.Core.Mathematics.Vector2,
			d: Stride.Core.Mathematics.Vector2,
			color: Stride.Core.Mathematics.Color,
			thickness: number,
			antiAliased?: boolean /* = true */
		): void;

		DrawQuadFilled(
			a: Stride.Core.Mathematics.Vector2,
			b: Stride.Core.Mathematics.Vector2,
			c: Stride.Core.Mathematics.Vector2,
			d: Stride.Core.Mathematics.Vector2,
			color: Stride.Core.Mathematics.Color,
			antiAliased?: boolean /* = true */
		): void;

		AppendBuffers(
			drawBuffer: HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer | null
		): void;

		PlaceTemplateAt(
			template: HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer | null,
			position: Stride.Core.Mathematics.Vector2
		): void;
	}
}
//#endregion

//#region GeometryCanvasRenderHelper
declare namespace HordeResurrection.Game.Render.GeometryCanvas {
	abstract class GeometryCanvasRenderHelper {

		// Properties:
		static readonly SharedCanvas: HordeResurrection.Game.Render.GeometryCanvas.GeometryCanvas;

		// Methods:
		static SimpleRenderCanvas(
			canvas: HordeResurrection.Game.Render.GeometryCanvas.GeometryCanvas | null,
			drawRegion: Stride.Core.Mathematics.Rectangle,
			clearCanvas?: boolean /* = true */
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region GeometryCanvasTemplates
declare namespace HordeResurrection.Game.Render.GeometryCanvas {
	abstract class GeometryCanvasTemplates {

		// Properties:
		static readonly MovePathPoint: HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;
		static readonly MoveOrderTarget: HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;
		static readonly MoveOrderMultiTarget: HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;
		static readonly AttackOrderTarget: HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;
		static readonly DebugCursorCell: HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		// Methods:
		static Initialize(): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region CornerFlags
declare namespace HordeResurrection.Game.Render.GeometryCanvas.Internal {
	abstract class CornerFlags extends System.EnumFlags {
		/** CornerFlags.None = 0 */ static readonly None: CornerFlags;
		/** CornerFlags.TopLeft = 1 */ static readonly TopLeft: CornerFlags;
		/** CornerFlags.TopRight = 2 */ static readonly TopRight: CornerFlags;
		/** CornerFlags.Top = 3 */ static readonly Top: CornerFlags;
		/** CornerFlags.BottomLeft = 4 */ static readonly BottomLeft: CornerFlags;
		/** CornerFlags.Left = 5 */ static readonly Left: CornerFlags;
		/** CornerFlags.BottomRight = 8 */ static readonly BottomRight: CornerFlags;
		/** CornerFlags.Right = 10 */ static readonly Right: CornerFlags;
		/** CornerFlags.Bottom = 12 */ static readonly Bottom: CornerFlags;
		/** CornerFlags.All = 15 */ static readonly All: CornerFlags;
	}
}
//#endregion

//#region DrawBuffer
declare namespace HordeResurrection.Game.Render.GeometryCanvas.Internal {
	class DrawBuffer extends System.Object {

		// Constructors:
		constructor(
			initialVertexCount: number,
			initialIndexCount: number
		);

		constructor(
			vertexBuffer: HordeResurrection.Game.Render.GeometryCanvas.Internal.VertexData[] | null,
			indexBuffer: number[] | null
		);

		// Fields:
		VertexBuffer: HordeResurrection.Game.Render.GeometryCanvas.Internal.VertexData[];
		IndexBuffer: number[];

		// Properties:
		readonly VertexCount: number;
		readonly IndexCount: number;

		// Methods:
		Append(
			otherBuffer: HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer | null
		): void;

		SetBuffersSize(
			vertexCount: number,
			indexCount: number,
			keepData: boolean
		): void;

		ExtendBufferSize(
			additionalVertexCount: number,
			additionalIndexCount: number
		): void;

		Reset(): void;
	}
}
//#endregion

//#region VertexData
declare namespace HordeResurrection.Game.Render.GeometryCanvas.Internal {
	class /* struct */ VertexData extends System.ValueType {

		// Constructors:
		constructor(
			position: Stride.Core.Mathematics.Vector2,
			color: number
		);

		// Fields:
		Position: Stride.Core.Mathematics.Vector2;
		Color: number;

		// Properties:
		static readonly StructSize: number;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region UnitBuildFrameTemplates
declare namespace HordeResurrection.Game.Render.GeometryCanvas {
	abstract class UnitBuildFrameTemplates {

		// Methods:
		static GetCanBuildCursorFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetCanNotBuildCursorFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetCanBuildCurrentTargetFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetCanNotBuildCurrentTargetFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetCanBuildNextTargetFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetCanNotBuildNextTargetFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UnitFrameTemplates
declare namespace HordeResurrection.Game.Render.GeometryCanvas {
	abstract class UnitFrameTemplates {

		// Methods:
		static GetUnitFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			healthLevel: HordeClassLibrary.UnitComponents.Enumerations.UnitHealthLevel
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetAlliedUnitFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			color: Stride.Core.Mathematics.Color
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetUncontrollableUnitFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			healthLevel: HordeClassLibrary.UnitComponents.Enumerations.UnitHealthLevel
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetUncontrollableAlliedUnitFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			color: Stride.Core.Mathematics.Color
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetEnemyUnitFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			healthLevel: HordeClassLibrary.UnitComponents.Enumerations.UnitHealthLevel
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetEnemyAlliedUnitFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			color: Stride.Core.Mathematics.Color
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetUnknownUnitFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			healthLevel: HordeClassLibrary.UnitComponents.Enumerations.UnitHealthLevel
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetUnknownAlliedUnitFrame(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			color: Stride.Core.Mathematics.Color
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UnitInForestTemplates
declare namespace HordeResurrection.Game.Render.GeometryCanvas {
	abstract class UnitInForestTemplates {

		// Methods:
		static GetFigure(
			healthLevel: HordeClassLibrary.UnitComponents.Enumerations.UnitHealthLevel
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetAlliesFigure(
			healthLevel: HordeClassLibrary.UnitComponents.Enumerations.UnitHealthLevel
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetEnemyFigure(
			healthLevel: HordeClassLibrary.UnitComponents.Enumerations.UnitHealthLevel
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		static GetUnknownFigure(
			healthLevel: HordeClassLibrary.UnitComponents.Enumerations.UnitHealthLevel
		): HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region SpriteBatchPrimitivesMy.LineStyles
declare namespace HordeResurrection.Game.Render.SpriteBatchPrimitives.SpriteBatchPrimitivesMy {
	abstract class LineStyles extends System.Enum {
		/** LineStyles.Solid = 0 */ static readonly Solid: LineStyles;
		/** LineStyles.Dotted = 1 */ static readonly Dotted: LineStyles;
	}
}
//#endregion

//#region TextCharacterAppearedEventHandler
declare namespace HordeResurrection.Game.ThirdParty.DialogueTextControl.Controls {
	interface /* delegate */ TextCharacterAppearedEventHandler {
		// Can't process delegate: 'HordeResurrection.Game.ThirdParty.DialogueTextControl.Controls.TextCharacterAppearedEventHandler'
	}
}
//#endregion

//#region WaveTextEffect.WaveDirection
declare namespace HordeResurrection.Game.ThirdParty.DialogueTextControl.Dialogue.TextEffects.WaveTextEffect {
	abstract class WaveDirection extends System.Enum {
		/** WaveDirection.Right = 0 */ static readonly Right: WaveDirection;
		/** WaveDirection.Left = 1 */ static readonly Left: WaveDirection;
	}
}
//#endregion

//#region ShaderTextEffectType
declare namespace HordeResurrection.Game.ThirdParty.DialogueTextControl.Renderers {
	abstract class ShaderTextEffectType extends System.Enum {
		/** ShaderTextEffectType.NotSet = 0 */ static readonly NotSet: ShaderTextEffectType;
		/** ShaderTextEffectType.HeatWave = 1 */ static readonly HeatWave: ShaderTextEffectType;
	}
}
//#endregion

//#region UIFontBatch.PrimitiveType
declare namespace HordeResurrection.Game.ThirdParty.DialogueTextControl.UIFontBatch {
	abstract class PrimitiveType extends System.Enum {
		/** PrimitiveType.Rectangle = 0 */ static readonly Rectangle: PrimitiveType;
		/** PrimitiveType.BorderRectangle = 1 */ static readonly BorderRectangle: PrimitiveType;
	}
}
//#endregion

//#region CursorAnchorType
declare namespace HordeResurrection.Game.UI.MouseCursor.Enums {
	abstract class CursorAnchorType extends System.Enum {
		/** CursorAnchorType.TopLeft = 0 */ static readonly TopLeft: CursorAnchorType;
		/** CursorAnchorType.Center = 1 */ static readonly Center: CursorAnchorType;
		/** CursorAnchorType.Top = 2 */ static readonly Top: CursorAnchorType;
		/** CursorAnchorType.Right = 3 */ static readonly Right: CursorAnchorType;
		/** CursorAnchorType.Bottom = 4 */ static readonly Bottom: CursorAnchorType;
		/** CursorAnchorType.Left = 5 */ static readonly Left: CursorAnchorType;
	}
}
//#endregion

//#region MouseCursorMode
declare namespace HordeResurrection.Game.UI.MouseCursor.Enums {
	abstract class MouseCursorMode extends System.Enum {
		/** MouseCursorMode.SpriteBatch = 0 */ static readonly SpriteBatch: MouseCursorMode;
		/** MouseCursorMode.System = 1 */ static readonly System: MouseCursorMode;
	}
}
//#endregion

//#region MouseCursorType
declare namespace HordeResurrection.Game.UI.MouseCursor.Enums {
	abstract class MouseCursorType extends System.Enum {
		/** MouseCursorType.Common = 0 */ static readonly Common: MouseCursorType;
		/** MouseCursorType.Move = 1 */ static readonly Move: MouseCursorType;
		/** MouseCursorType.FellTree = 2 */ static readonly FellTree: MouseCursorType;
		/** MouseCursorType.Select = 3 */ static readonly Select: MouseCursorType;
		/** MouseCursorType.SelectEnemy = 4 */ static readonly SelectEnemy: MouseCursorType;
		/** MouseCursorType.SelectAlly = 5 */ static readonly SelectAlly: MouseCursorType;
		/** MouseCursorType.AttackDisabled = 6 */ static readonly AttackDisabled: MouseCursorType;
		/** MouseCursorType.AttackEnemy = 7 */ static readonly AttackEnemy: MouseCursorType;
		/** MouseCursorType.AttackAlly = 8 */ static readonly AttackAlly: MouseCursorType;
		/** MouseCursorType.CaptureDisabled = 9 */ static readonly CaptureDisabled: MouseCursorType;
		/** MouseCursorType.CaptureEnemy = 10 */ static readonly CaptureEnemy: MouseCursorType;
		/** MouseCursorType.CaptureAlly = 11 */ static readonly CaptureAlly: MouseCursorType;
		/** MouseCursorType.ScrollUp = 12 */ static readonly ScrollUp: MouseCursorType;
		/** MouseCursorType.ScrollRight = 13 */ static readonly ScrollRight: MouseCursorType;
		/** MouseCursorType.ScrollDown = 14 */ static readonly ScrollDown: MouseCursorType;
		/** MouseCursorType.ScrollLeft = 15 */ static readonly ScrollLeft: MouseCursorType;
	}
}
//#endregion

//#region ButtonClickSound
declare namespace HordeResurrection.Game.UI.MultiuseControls {
	abstract class ButtonClickSound extends System.Enum {
		/** ButtonClickSound.Click = 0 */ static readonly Click: ButtonClickSound;
		/** ButtonClickSound.ClickLoud = 1 */ static readonly ClickLoud: ButtonClickSound;
	}
}
//#endregion

//#region ProgressBarOrientation
declare namespace HordeResurrection.Game.UI.MultiuseControls {
	abstract class ProgressBarOrientation extends System.Enum {
		/** ProgressBarOrientation.Vertical = 0 */ static readonly Vertical: ProgressBarOrientation;
		/** ProgressBarOrientation.Horizontal = 1 */ static readonly Horizontal: ProgressBarOrientation;
	}
}
//#endregion

//#region FontUtils
declare namespace HordeResurrection.Game.UI.Utils {
	abstract class FontUtils {

		// Properties:
		static readonly DefaultFontColor: Stride.Core.Mathematics.Color;
		static readonly IncreaseFontColor: Stride.Core.Mathematics.Color;
		static readonly DecreaseFontColor: Stride.Core.Mathematics.Color;
		static readonly InsufficientFontColor: Stride.Core.Mathematics.Color;
		static readonly RequirementsFontColor: Stride.Core.Mathematics.Color;
		static readonly DefaultFontErrorColor: Stride.Core.Mathematics.Color;
		static readonly DefaultFontWarningColor: Stride.Core.Mathematics.Color;
		static readonly DefaultVectorFontColor: Stride.Core.Mathematics.Color;
		static readonly TitleVectorFontColor: Stride.Core.Mathematics.Color;

		// Methods:
		static InitializeFonts(
			defaultFontName: string | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UiUtils.GetLayoutingContextFieldDelegate
declare namespace HordeResurrection.Game.UI.Utils.UiUtils {
	interface /* delegate */ GetLayoutingContextFieldDelegate {
		// Can't process delegate: 'HordeResurrection.Game.UI.Utils.UiUtils.GetLayoutingContextFieldDelegate'
	}
}
//#endregion

//#region Types shorthand
// ----------------------------------------------------- //
// ---------========= Types shorthand =========--------- //
// ----------------------------------------------------- //
/*
export const BattleHotkeysPreset = HordeResurrection.Game.HordeInput.BattleHotkeysPreset;
export type BattleHotkeysPreset = HordeResurrection.Game.HordeInput.BattleHotkeysPreset;
export const KeyEventType = HordeResurrection.Game.HordeInput.KeyboardEvents.KeyEventType;
export type KeyEventType = HordeResurrection.Game.HordeInput.KeyboardEvents.KeyEventType;
export const KeyModifierFlag = HordeResurrection.Game.HordeInput.KeyModifierFlag;
export type KeyModifierFlag = HordeResurrection.Game.HordeInput.KeyModifierFlag;
export const BattleUiColors = HordeResurrection.Game.Render.Constants.BattleUiColors;
export type BattleUiColors = HordeResurrection.Game.Render.Constants.BattleUiColors;
export const GeometryCanvas = HordeResurrection.Game.Render.GeometryCanvas.GeometryCanvas;
export type GeometryCanvas = HordeResurrection.Game.Render.GeometryCanvas.GeometryCanvas;
export const GeometryCanvasRenderHelper = HordeResurrection.Game.Render.GeometryCanvas.GeometryCanvasRenderHelper;
export type GeometryCanvasRenderHelper = HordeResurrection.Game.Render.GeometryCanvas.GeometryCanvasRenderHelper;
export const GeometryCanvasTemplates = HordeResurrection.Game.Render.GeometryCanvas.GeometryCanvasTemplates;
export type GeometryCanvasTemplates = HordeResurrection.Game.Render.GeometryCanvas.GeometryCanvasTemplates;
export const CornerFlags = HordeResurrection.Game.Render.GeometryCanvas.Internal.CornerFlags;
export type CornerFlags = HordeResurrection.Game.Render.GeometryCanvas.Internal.CornerFlags;
export const DrawBuffer = HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;
export type DrawBuffer = HordeResurrection.Game.Render.GeometryCanvas.Internal.DrawBuffer;
export const VertexData = HordeResurrection.Game.Render.GeometryCanvas.Internal.VertexData;
export type VertexData = HordeResurrection.Game.Render.GeometryCanvas.Internal.VertexData;
export const UnitBuildFrameTemplates = HordeResurrection.Game.Render.GeometryCanvas.UnitBuildFrameTemplates;
export type UnitBuildFrameTemplates = HordeResurrection.Game.Render.GeometryCanvas.UnitBuildFrameTemplates;
export const UnitFrameTemplates = HordeResurrection.Game.Render.GeometryCanvas.UnitFrameTemplates;
export type UnitFrameTemplates = HordeResurrection.Game.Render.GeometryCanvas.UnitFrameTemplates;
export const UnitInForestTemplates = HordeResurrection.Game.Render.GeometryCanvas.UnitInForestTemplates;
export type UnitInForestTemplates = HordeResurrection.Game.Render.GeometryCanvas.UnitInForestTemplates;
export const LineStyles = HordeResurrection.Game.Render.SpriteBatchPrimitives.SpriteBatchPrimitivesMy.LineStyles;
export type LineStyles = HordeResurrection.Game.Render.SpriteBatchPrimitives.SpriteBatchPrimitivesMy.LineStyles;
export const TextCharacterAppearedEventHandler = HordeResurrection.Game.ThirdParty.DialogueTextControl.Controls.TextCharacterAppearedEventHandler;
export type TextCharacterAppearedEventHandler = HordeResurrection.Game.ThirdParty.DialogueTextControl.Controls.TextCharacterAppearedEventHandler;
export const WaveDirection = HordeResurrection.Game.ThirdParty.DialogueTextControl.Dialogue.TextEffects.WaveTextEffect.WaveDirection;
export type WaveDirection = HordeResurrection.Game.ThirdParty.DialogueTextControl.Dialogue.TextEffects.WaveTextEffect.WaveDirection;
export const ShaderTextEffectType = HordeResurrection.Game.ThirdParty.DialogueTextControl.Renderers.ShaderTextEffectType;
export type ShaderTextEffectType = HordeResurrection.Game.ThirdParty.DialogueTextControl.Renderers.ShaderTextEffectType;
export const PrimitiveType = HordeResurrection.Game.ThirdParty.DialogueTextControl.UIFontBatch.PrimitiveType;
export type PrimitiveType = HordeResurrection.Game.ThirdParty.DialogueTextControl.UIFontBatch.PrimitiveType;
export const CursorAnchorType = HordeResurrection.Game.UI.MouseCursor.Enums.CursorAnchorType;
export type CursorAnchorType = HordeResurrection.Game.UI.MouseCursor.Enums.CursorAnchorType;
export const MouseCursorMode = HordeResurrection.Game.UI.MouseCursor.Enums.MouseCursorMode;
export type MouseCursorMode = HordeResurrection.Game.UI.MouseCursor.Enums.MouseCursorMode;
export const MouseCursorType = HordeResurrection.Game.UI.MouseCursor.Enums.MouseCursorType;
export type MouseCursorType = HordeResurrection.Game.UI.MouseCursor.Enums.MouseCursorType;
export const ButtonClickSound = HordeResurrection.Game.UI.MultiuseControls.ButtonClickSound;
export type ButtonClickSound = HordeResurrection.Game.UI.MultiuseControls.ButtonClickSound;
export const ProgressBarOrientation = HordeResurrection.Game.UI.MultiuseControls.ProgressBarOrientation;
export type ProgressBarOrientation = HordeResurrection.Game.UI.MultiuseControls.ProgressBarOrientation;
export const FontUtils = HordeResurrection.Game.UI.Utils.FontUtils;
export type FontUtils = HordeResurrection.Game.UI.Utils.FontUtils;
export const GetLayoutingContextFieldDelegate = HordeResurrection.Game.UI.Utils.UiUtils.GetLayoutingContextFieldDelegate;
export type GetLayoutingContextFieldDelegate = HordeResurrection.Game.UI.Utils.UiUtils.GetLayoutingContextFieldDelegate;
*/
//#endregion
