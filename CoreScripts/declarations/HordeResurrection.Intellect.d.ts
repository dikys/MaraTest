// <auto-generated/>

//#region AAction
declare namespace HordeResurrection.Intellect.Actions {
	abstract class AAction extends System.Object {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ProduceBuildingAction
declare namespace HordeResurrection.Intellect.Actions {
	class ProduceBuildingAction
		extends HordeResurrection.Intellect.Actions.AAction
	{
		// Constructors:
		constructor(
			producerUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			productConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D | null
		);

		// Properties:
		readonly ProducerUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly ProductConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly CellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly CellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
	}
}
//#endregion

//#region ProduceUnitAction
declare namespace HordeResurrection.Intellect.Actions {
	class ProduceUnitAction
		extends HordeResurrection.Intellect.Actions.AAction
	{
		// Constructors:
		constructor(
			producerUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			productConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			count: number
		);

		// Properties:
		readonly ProducerUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly ProductConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly Count: number;
	}
}
//#endregion

//#region ActionsCollection
declare namespace HordeResurrection.Intellect.Collections {
	class ActionsCollection
		extends System.Collections.ObjectModel.Collection<HordeResurrection.Intellect.Actions.AAction>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region DepartmentsCollection
declare namespace HordeResurrection.Intellect.Collections {
	class DepartmentsCollection extends System.Object
		implements
			System.Collections.Generic.ICollection<HordeResurrection.Intellect.Departments.ADepartment>,
			System.Collections.Generic.IEnumerable<HordeResurrection.Intellect.Departments.ADepartment>,
			System.Collections.IEnumerable
	{
		// Constructors:
		constructor();

		// Properties:
		readonly Count: number;
		readonly IsReadOnly: boolean;

		// Methods:
		GetDepartment<T extends HordeResurrection.Intellect.Departments.ADepartment>(
			$T: typeof HordeResurrection.Intellect.Departments.ADepartment
		): HordeResurrection.Intellect.Departments.ADepartment;

		GetEnumerator(): System.Collections.Generic.IEnumerator<HordeResurrection.Intellect.Departments.ADepartment>;

		Add(
			item: HordeResurrection.Intellect.Departments.ADepartment | null
		): void;

		Clear(): void;

		Contains(
			item: HordeResurrection.Intellect.Departments.ADepartment | null
		): boolean;

		CopyTo(
			array: HordeResurrection.Intellect.Departments.ADepartment[],
			arrayIndex: number
		): void;

		Remove(
			item: HordeResurrection.Intellect.Departments.ADepartment | null
		): boolean;

		GetEnumerator(): System.Collections.IEnumerator;
	}
}
//#endregion

//#region IntelligenceModulesCollection
declare namespace HordeResurrection.Intellect.Collections {
	class IntelligenceModulesCollection extends System.Object
		implements
			System.Collections.Generic.ICollection<HordeResurrection.Intellect.Intelligence.AIntelligenceModule>,
			System.Collections.Generic.IEnumerable<HordeResurrection.Intellect.Intelligence.AIntelligenceModule>,
			System.Collections.IEnumerable
	{
		// Constructors:
		constructor();

		// Properties:
		readonly Count: number;
		readonly IsReadOnly: boolean;

		// Methods:
		GetSituationalHelper<T extends HordeResurrection.Intellect.Intelligence.AIntelligenceModule>(
			$T: typeof HordeResurrection.Intellect.Intelligence.AIntelligenceModule
		): HordeResurrection.Intellect.Intelligence.AIntelligenceModule;

		GetEnumerator(): System.Collections.Generic.IEnumerator<HordeResurrection.Intellect.Intelligence.AIntelligenceModule>;

		Add(
			item: HordeResurrection.Intellect.Intelligence.AIntelligenceModule | null
		): void;

		Clear(): void;

		Contains(
			item: HordeResurrection.Intellect.Intelligence.AIntelligenceModule | null
		): boolean;

		CopyTo(
			array: HordeResurrection.Intellect.Intelligence.AIntelligenceModule[],
			arrayIndex: number
		): void;

		Remove(
			item: HordeResurrection.Intellect.Intelligence.AIntelligenceModule | null
		): boolean;

		GetEnumerator(): System.Collections.IEnumerator;
	}
}
//#endregion

//#region OperatorsCollection
declare namespace HordeResurrection.Intellect.Collections {
	class OperatorsCollection extends System.Object
		implements
			System.Collections.Generic.ICollection<HordeResurrection.Intellect.Operators.AOperator>,
			System.Collections.Generic.IEnumerable<HordeResurrection.Intellect.Operators.AOperator>,
			System.Collections.IEnumerable
	{
		// Constructors:
		constructor();

		// Properties:
		readonly Count: number;
		readonly IsReadOnly: boolean;

		// Methods:
		GetOperator<T extends HordeResurrection.Intellect.Operators.AOperator>(
			$T: typeof HordeResurrection.Intellect.Operators.AOperator
		): HordeResurrection.Intellect.Operators.AOperator;

		GetEnumerator(): System.Collections.Generic.IEnumerator<HordeResurrection.Intellect.Operators.AOperator>;

		Add(
			item: HordeResurrection.Intellect.Operators.AOperator | null
		): void;

		Clear(): void;

		Contains(
			item: HordeResurrection.Intellect.Operators.AOperator | null
		): boolean;

		CopyTo(
			array: HordeResurrection.Intellect.Operators.AOperator[],
			arrayIndex: number
		): void;

		Remove(
			item: HordeResurrection.Intellect.Operators.AOperator | null
		): boolean;

		GetEnumerator(): System.Collections.IEnumerator;
	}
}
//#endregion

//#region RequestsCollection
declare namespace HordeResurrection.Intellect.Collections {
	class RequestsCollection extends System.Object
		implements
			System.Collections.Generic.IEnumerable<HordeResurrection.Intellect.Requests.ARequest>,
			System.Collections.IEnumerable
	{
		// Constructors:
		constructor();

		// Properties:
		readonly Count: number;

		// Methods:
		EnqueueIfNotExists(
			newRequest: HordeResurrection.Intellect.Requests.ARequest | null,
			/*out*/ existsRequest: HordeResurrection.Intellect.Requests.ARequest | null
		): boolean;

		Dequeue(): HordeResurrection.Intellect.Requests.ARequest;

		Enqueue(
			request: HordeResurrection.Intellect.Requests.ARequest | null
		): void;

		Clear(): void;

		GetEnumerator(): System.Collections.Generic.IEnumerator<HordeResurrection.Intellect.Requests.ARequest>;

		GetEnumerator(): System.Collections.IEnumerator;
	}
}
//#endregion

//#region TrackersCollection
declare namespace HordeResurrection.Intellect.Collections {
	class TrackersCollection extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly Count: number;

		// Methods:
		Dequeue(): HordeResurrection.Intellect.Requests.Trackers.ARequestTracker;

		Enqueue(
			tracker: HordeResurrection.Intellect.Requests.Trackers.ARequestTracker | null
		): void;

		Clear(): void;
	}
}
//#endregion

//#region ADepartment
declare namespace HordeResurrection.Intellect.Departments {
	abstract class ADepartment extends System.Object {

		// Methods:
		UpdateOnGameTick(
			gameTick: number
		): void;

		Deinitialize(): void;

		InspectRequest(
			request: HordeResurrection.Intellect.Requests.ARequest | null
		): HordeResurrection.Intellect.Requests.Stuff.RequestPerformPossibility;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ArmyDepartment
declare namespace HordeResurrection.Intellect.Departments {
	class ArmyDepartment
		extends HordeResurrection.Intellect.Departments.ADepartment
	{
		// Constructors:
		constructor(
			masterMind: HordeResurrection.Intellect.MasterMind | null
		);
	}
}
//#endregion

//#region DiplomacyDepartment
declare namespace HordeResurrection.Intellect.Departments {
	class DiplomacyDepartment
		extends HordeResurrection.Intellect.Departments.ADepartment
	{
		// Constructors:
		constructor(
			masterMind: HordeResurrection.Intellect.MasterMind | null
		);
	}
}
//#endregion

//#region ProductionDepartment
declare namespace HordeResurrection.Intellect.Departments {
	class ProductionDepartment
		extends HordeResurrection.Intellect.Departments.ADepartment
	{
		// Constructors:
		constructor(
			masterMind: HordeResurrection.Intellect.MasterMind | null
		);

		// Fields:
		static readonly NewTaskPeriod: number;

		// Methods:
		InspectPossibilityOfUnitCreation(
			request: HordeResurrection.Intellect.Requests.ProduceRequest | null
		): HordeResurrection.Intellect.Requests.Stuff.RequestPerformPossibility;

		AddRequestToProduce(
			parameters: HordeResurrection.Intellect.Requests.CreationArgs.ProduceRequestParameters | null,
			/*out*/ requestInQueue: HordeResurrection.Intellect.Requests.ProduceRequest | null
		): boolean;

		AddRequestToProduce(
			parameters: HordeResurrection.Intellect.Requests.CreationArgs.ProduceRequestParameters | null
		): boolean;

		AddRequestToProduce(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			count?: number /* = 1 */,
			dependentRequest?: HordeResurrection.Intellect.Requests.ARequest | null /* = null */,
			checkExists?: boolean /* = true */
		): boolean;
	}
}
//#endregion

//#region ResourcesDepartment
declare namespace HordeResurrection.Intellect.Departments {
	class ResourcesDepartment
		extends HordeResurrection.Intellect.Departments.ADepartment
	{
		// Constructors:
		constructor(
			masterMind: HordeResurrection.Intellect.MasterMind | null
		);
	}
}
//#endregion

//#region TechnologyDepartment
declare namespace HordeResurrection.Intellect.Departments {
	class TechnologyDepartment
		extends HordeResurrection.Intellect.Departments.ADepartment
	{
		// Constructors:
		constructor(
			masterMind: HordeResurrection.Intellect.MasterMind | null
		);
	}
}
//#endregion

//#region AMindHelper
declare namespace HordeResurrection.Intellect.Helpers {
	class AMindHelper extends System.Object {
		// Nothing to declare
	}
}
//#endregion

//#region AIntelligenceModule
declare namespace HordeResurrection.Intellect.Intelligence {
	class AIntelligenceModule extends System.Object {

		// Methods:
		Initialize(): void;

		Deinitialize(): void;

		UpdateOnGameTick(): void;
	}
}
//#endregion

//#region MainBuildingHelper
declare namespace HordeResurrection.Intellect.Intelligence {
	class MainBuildingHelper
		extends HordeResurrection.Intellect.Intelligence.AIntelligenceModule
	{
		// Constructors:
		constructor(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		readonly MainBuildingUnit: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region RoadsModule
declare namespace HordeResurrection.Intellect.Intelligence {
	class RoadsModule
		extends HordeResurrection.Intellect.Intelligence.AIntelligenceModule
	{
		// Constructors:
		constructor(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		EntranceReserveRadius: number;
		EntranceReservationPoints: number;

		// Methods:
		GetReservationPointsAt(
			i: number,
			j: number
		): number;

		GetReservationPointsAt(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): number;

		IncreaseReservationPointsAt(
			i: number,
			j: number,
			points: number
		): void;

		IncreaseReservationPointsAt(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			points: number
		): void;

		DecreaseReservationPointsAt(
			i: number,
			j: number,
			points: number
		): void;

		DecreaseReservationPointsAt(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			points: number
		): void;
	}
}
//#endregion

//#region SituationalCenter
declare namespace HordeResurrection.Intellect.Intelligence {
	class SituationalCenter extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly IntelligenceModules: HordeResurrection.Intellect.Collections.IntelligenceModulesCollection;
		readonly MainBuildingHelper: HordeResurrection.Intellect.Intelligence.MainBuildingHelper;
		readonly TechTree: HordeResurrection.Intellect.Intelligence.TechTreeIntelligenceModule;
		readonly Roads: HordeResurrection.Intellect.Intelligence.RoadsModule;

		// Methods:
		Initialize(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): void;

		Deinitialize(): void;

		UpdateOnGameTick(): void;
	}
}
//#endregion

//#region TechTreeIntelligenceModule
declare namespace HordeResurrection.Intellect.Intelligence {
	class TechTreeIntelligenceModule
		extends HordeResurrection.Intellect.Intelligence.AIntelligenceModule
	{
		// Constructors:
		constructor(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		readonly TechTree: HordeClassLibrary.World.Settlements.Modules.SettlementTechTree;
	}
}
//#endregion

//#region MasterMind
declare namespace HordeResurrection.Intellect {
	class MasterMind extends System.Object {

		// Constructors:
		constructor(
			name: string | null,
			character: HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig | null
		);

		// Properties:
		readonly UpdatePeriodTicks: number;
		readonly Name: string;
		readonly Settlement: HordeClassLibrary.World.Settlements.Settlement;
		readonly Character: HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig;
		readonly TerritoryPlanner: HordeClassLibrary.World.Settlements.Territory.TerritoryPlanner;
		readonly Randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer;
		readonly SituationalCenter: HordeResurrection.Intellect.Intelligence.SituationalCenter;
		readonly TrackersManager: HordeResurrection.Intellect.Requests.Trackers.Manager.TrackersManager;
		readonly Requests: HordeResurrection.Intellect.Collections.RequestsCollection;
		readonly Actions: HordeResurrection.Intellect.Collections.ActionsCollection;
		IsWorkMode: boolean;
		readonly Departments: HordeResurrection.Intellect.Collections.DepartmentsCollection;
		readonly ArmyDepartment: HordeResurrection.Intellect.Departments.ArmyDepartment;
		readonly ProductionDepartment: HordeResurrection.Intellect.Departments.ProductionDepartment;
		readonly DiplomacyDepartment: HordeResurrection.Intellect.Departments.DiplomacyDepartment;
		readonly ResourcesDepartment: HordeResurrection.Intellect.Departments.ResourcesDepartment;
		readonly TechnologyDepartment: HordeResurrection.Intellect.Departments.TechnologyDepartment;
		readonly Operators: HordeResurrection.Intellect.Collections.OperatorsCollection;
		readonly ConstructionOperator: HordeResurrection.Intellect.Operators.ConstructionOperator;
		readonly HarvestOperator: HordeResurrection.Intellect.Operators.HarvestOperator;
		readonly RepairOperator: HordeResurrection.Intellect.Operators.RepairOperator;
		readonly WarOperator: HordeResurrection.Intellect.Operators.WarOperator;

		// Methods:
		ChangeCharacter(
			character: HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig | null
		): void;

		Initialize(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): void;

		Deinitialize(): void;

		UpdateOnGameTick(
			gameTick: number
		): void;
	}
}
//#endregion

//#region AOperator
declare namespace HordeResurrection.Intellect.Operators {
	abstract class AOperator extends System.Object {

		// Methods:
		UpdateOnGameTick(
			gameTick: number
		): void;

		Deinitialize(): void;

		PerformRequest(
			request: HordeResurrection.Intellect.Requests.ARequest | null,
			gameTick: number
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ConstructionOperator
declare namespace HordeResurrection.Intellect.Operators {
	class ConstructionOperator
		extends HordeResurrection.Intellect.Operators.AOperator
	{
		// Constructors:
		constructor(
			masterMind: HordeResurrection.Intellect.MasterMind | null
		);
	}
}
//#endregion

//#region HarvestOperator
declare namespace HordeResurrection.Intellect.Operators {
	class HarvestOperator
		extends HordeResurrection.Intellect.Operators.AOperator
	{
		// Constructors:
		constructor(
			masterMind: HordeResurrection.Intellect.MasterMind | null
		);
	}
}
//#endregion

//#region RepairOperator
declare namespace HordeResurrection.Intellect.Operators {
	class RepairOperator
		extends HordeResurrection.Intellect.Operators.AOperator
	{
		// Constructors:
		constructor(
			masterMind: HordeResurrection.Intellect.MasterMind | null
		);
	}
}
//#endregion

//#region WarOperator
declare namespace HordeResurrection.Intellect.Operators {
	class WarOperator
		extends HordeResurrection.Intellect.Operators.AOperator
	{
		// Constructors:
		constructor(
			masterMind: HordeResurrection.Intellect.MasterMind | null
		);
	}
}
//#endregion

//#region ARequest
declare namespace HordeResurrection.Intellect.Requests {
	abstract class ARequest extends System.Object {

		// Properties:
		readonly Id: number;
		readonly ReferencedRequest: HordeResurrection.Intellect.Requests.ARequest;
		readonly Tracker: HordeResurrection.Intellect.Requests.Trackers.ARequestTracker;
		readonly State: HordeResurrection.Intellect.Requests.State.RequestStateMachine;
		readonly LastHandledGameFrame: number;

		// Methods:
		CheckProcessPeriod(
			gameTick: number
		): boolean;

		IsAttemptsIsOver(): boolean;

		IsIdenticalTo(
			other: HordeResurrection.Intellect.Requests.ARequest | null
		): boolean;

		// Events:
		TrackerChanged: EventSource<System.EventHandler<HordeResurrection.Intellect.Requests.ARequest.TrackerChangedEventArgs>>;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ARequest.TrackerChangedEventArgs
declare namespace HordeResurrection.Intellect.Requests.ARequest {
	class TrackerChangedEventArgs extends System.Object
		implements System.IEquatable<HordeResurrection.Intellect.Requests.ARequest.TrackerChangedEventArgs>
	{
		// Constructors:
		constructor(
			NewTracker: HordeResurrection.Intellect.Requests.Trackers.ARequestTracker | null
		);

		// Properties:
		NewTracker: HordeResurrection.Intellect.Requests.Trackers.ARequestTracker;
	}
}
//#endregion

//#region ARequestCreationParameters
declare namespace HordeResurrection.Intellect.Requests.CreationArgs {
	abstract class ARequestCreationParameters extends System.Object {

		// Properties:
		DependentRequest: HordeResurrection.Intellect.Requests.ARequest;
		CheckExistsRequest: boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ProduceRequestParameters
declare namespace HordeResurrection.Intellect.Requests.CreationArgs {
	class ProduceRequestParameters
		extends HordeResurrection.Intellect.Requests.CreationArgs.ARequestCreationParameters
	{
		// Constructors:
		constructor(
			productConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			count?: number /* = 1 */
		);

		// Properties:
		static readonly DefaultAllowedEntranceTypes: System.Collections.Immutable.ImmutableArray<HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType>;
		static readonly DefaultEntranceCheckRadius: number;
		Producer: HordeClassLibrary.World.Objects.Units.Unit;
		ProductConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		Count: number;
		AllowAuxiliaryProduceRequests: boolean;
		TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		TargetEndCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		DisableBuildPlaceChecking: boolean;
		MaxRetargetAttempts: number | null;
		ProductEntranceCheckRadius: number;
		AllowedEntranceTypes: System.Collections.Generic.List<HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType>;
		ReservationIgnoreLevel: number;
	}
}
//#endregion

//#region ProduceRequest
declare namespace HordeResurrection.Intellect.Requests {
	class ProduceRequest
		extends HordeResurrection.Intellect.Requests.ARequest
	{
		// Constructors:
		constructor(
			parameters: HordeResurrection.Intellect.Requests.CreationArgs.ProduceRequestParameters | null
		);

		// Fields:
		static readonly /* const */ MaxSearchBuildingPlaceAttempts: number; // = 80

		// Properties:
		Producer: HordeClassLibrary.World.Objects.Units.Unit;
		readonly RequestedCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		Count: number;
		AllowAuxiliaryProduceRequests: boolean;
		TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		TargetEndCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		DisableBuildPlaceChecking: boolean;
		SearchBuildingPlaceAttempts: number;
		ProductEntranceCheckRadius: number;
		AllowedEntranceTypes: System.Collections.Generic.HashSet<HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType>;
		ReservationIgnoreLevel: number;
	}
}
//#endregion

//#region RequestState
declare namespace HordeResurrection.Intellect.Requests.State {
	abstract class RequestState extends System.Enum {
		/** RequestState.Initial = 0 */ static readonly Initial: RequestState;
		/** RequestState.Started = 1 */ static readonly Started: RequestState;
		/** RequestState.Suspend = 2 */ static readonly Suspend: RequestState;
		/** RequestState.WorkStarted = 3 */ static readonly WorkStarted: RequestState;
		/** RequestState.Completed = 4 */ static readonly Completed: RequestState;
		/** RequestState.Unsuccessful = 5 */ static readonly Unsuccessful: RequestState;
		/** RequestState.CantBeCompleted = 6 */ static readonly CantBeCompleted: RequestState;
		/** RequestState.AttemptsIsOver = 7 */ static readonly AttemptsIsOver: RequestState;
	}
}
//#endregion

//#region RequestStateMachine
declare namespace HordeResurrection.Intellect.Requests.State {
	class RequestStateMachine extends System.Object {

		// Methods:
		IsInitial(): boolean;

		IsUnfinished(): boolean;

		IsSuccessfullyCompleted(): boolean;

		IsUnsuccessfullyCompleted(): boolean;

		IsWorkStarted(): boolean;

		IsSuspended(): boolean;

		IsUnsuccessful(): boolean;
	}
}
//#endregion

//#region StateProcessResult
declare namespace HordeResurrection.Intellect.Requests.State {
	abstract class StateProcessResult extends System.Enum {
		/** StateProcessResult.Skipped = 0 */ static readonly Skipped: StateProcessResult;
		/** StateProcessResult.Processed = 1 */ static readonly Processed: StateProcessResult;
	}
}
//#endregion

//#region RequestPerformPossibility
declare namespace HordeResurrection.Intellect.Requests.Stuff {
	abstract class RequestPerformPossibility extends System.Enum {
		/** RequestPerformPossibility.Possible = 0 */ static readonly Possible: RequestPerformPossibility;
		/** RequestPerformPossibility.TemporaryImpossible = 1 */ static readonly TemporaryImpossible: RequestPerformPossibility;
		/** RequestPerformPossibility.Impossible = 2 */ static readonly Impossible: RequestPerformPossibility;
	}
}
//#endregion

//#region ARequestTracker
declare namespace HordeResurrection.Intellect.Requests.Trackers {
	abstract class ARequestTracker extends System.Object {

		// Fields:
		static readonly BaseExpirationTicks: number;
		static readonly ReducedExpirationTicks: number;
		static readonly BaseNextTrackerExpirationAddition: number;

		// Properties:
		readonly CompletionState: HordeResurrection.Intellect.Requests.Trackers.ARequestTracker.TrackerCompletionState;
		readonly TrackRequest: HordeResurrection.Intellect.Requests.ARequest;
		readonly ExpirationTick: number;
		readonly NextTracker: HordeResurrection.Intellect.Requests.Trackers.ARequestTracker;
		readonly TrackCompleted: boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ARequestTracker.TrackerCompletionState
declare namespace HordeResurrection.Intellect.Requests.Trackers.ARequestTracker {
	abstract class TrackerCompletionState extends System.Enum {
		/** TrackerCompletionState.None = 0 */ static readonly None: TrackerCompletionState;
		/** TrackerCompletionState.Successful = 1 */ static readonly Successful: TrackerCompletionState;
		/** TrackerCompletionState.Unsuccessful = 2 */ static readonly Unsuccessful: TrackerCompletionState;
	}
}
//#endregion

//#region TrackersManager
declare namespace HordeResurrection.Intellect.Requests.Trackers.Manager {
	class TrackersManager extends System.Object {

		// Constructors:
		constructor();

		// Methods:
		RegisterTracker(
			tracker: HordeResurrection.Intellect.Requests.Trackers.ARequestTracker | null
		): void;
	}
}
//#endregion

//#region OrderTracker
declare namespace HordeResurrection.Intellect.Requests.Trackers {
	abstract class OrderTracker
		extends HordeResurrection.Intellect.Requests.Trackers.ARequestTracker
	{
		// Properties:
		readonly TrackUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly OrderChangedToDoNothing: boolean;
		readonly FastExpirationTick: number;

		// Methods:
		HandleOrder(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BeginBuildTracker
declare namespace HordeResurrection.Intellect.Requests.Trackers.UnitProducing {
	class BeginBuildTracker
		extends HordeResurrection.Intellect.Requests.Trackers.OrderTracker
	{
		// Constructors:
		constructor(
			trackRequest: HordeResurrection.Intellect.Requests.ARequest | null,
			trackOrder: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null,
			expirationTick: number,
			fastExpirationTick: number
		);

		// Properties:
		readonly RequiredUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
	}
}
//#endregion

//#region BuildTracker
declare namespace HordeResurrection.Intellect.Requests.Trackers.UnitProducing {
	class BuildTracker
		extends HordeResurrection.Intellect.Requests.Trackers.ARequestTracker
	{
		// Constructors:
		constructor(
			trackRequest: HordeResurrection.Intellect.Requests.ARequest | null,
			expirationTick: number,
			trackUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly TrackUnit: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region ProducingOrdersTracker
declare namespace HordeResurrection.Intellect.Requests.Trackers.UnitProducing {
	class ProducingOrdersTracker
		extends HordeResurrection.Intellect.Requests.Trackers.OrderTracker
	{
		// Constructors:
		constructor(
			trackRequest: HordeResurrection.Intellect.Requests.ARequest | null,
			trackUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			requiredProductCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			expirationTick: number,
			fastExpirationTick: number
		);

		// Properties:
		readonly RequiredProductCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
	}
}
//#endregion

//#region TrainingTracker
declare namespace HordeResurrection.Intellect.Requests.Trackers.UnitProducing {
	class TrainingTracker
		extends HordeResurrection.Intellect.Requests.Trackers.ARequestTracker
	{
		// Constructors:
		constructor(
			trackRequest: HordeResurrection.Intellect.Requests.ARequest | null,
			expirationTick: number,
			trackUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetCount: number
		);

		// Properties:
		readonly TrackUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly TargetCount: number;
	}
}
//#endregion

//#region Types shorthand
// ----------------------------------------------------- //
// ---------========= Types shorthand =========--------- //
// ----------------------------------------------------- //
/*
export const AAction = HordeResurrection.Intellect.Actions.AAction;
export type AAction = HordeResurrection.Intellect.Actions.AAction;
export const ProduceBuildingAction = HordeResurrection.Intellect.Actions.ProduceBuildingAction;
export type ProduceBuildingAction = HordeResurrection.Intellect.Actions.ProduceBuildingAction;
export const ProduceUnitAction = HordeResurrection.Intellect.Actions.ProduceUnitAction;
export type ProduceUnitAction = HordeResurrection.Intellect.Actions.ProduceUnitAction;
export const ActionsCollection = HordeResurrection.Intellect.Collections.ActionsCollection;
export type ActionsCollection = HordeResurrection.Intellect.Collections.ActionsCollection;
export const DepartmentsCollection = HordeResurrection.Intellect.Collections.DepartmentsCollection;
export type DepartmentsCollection = HordeResurrection.Intellect.Collections.DepartmentsCollection;
export const IntelligenceModulesCollection = HordeResurrection.Intellect.Collections.IntelligenceModulesCollection;
export type IntelligenceModulesCollection = HordeResurrection.Intellect.Collections.IntelligenceModulesCollection;
export const OperatorsCollection = HordeResurrection.Intellect.Collections.OperatorsCollection;
export type OperatorsCollection = HordeResurrection.Intellect.Collections.OperatorsCollection;
export const RequestsCollection = HordeResurrection.Intellect.Collections.RequestsCollection;
export type RequestsCollection = HordeResurrection.Intellect.Collections.RequestsCollection;
export const TrackersCollection = HordeResurrection.Intellect.Collections.TrackersCollection;
export type TrackersCollection = HordeResurrection.Intellect.Collections.TrackersCollection;
export const ADepartment = HordeResurrection.Intellect.Departments.ADepartment;
export type ADepartment = HordeResurrection.Intellect.Departments.ADepartment;
export const ArmyDepartment = HordeResurrection.Intellect.Departments.ArmyDepartment;
export type ArmyDepartment = HordeResurrection.Intellect.Departments.ArmyDepartment;
export const DiplomacyDepartment = HordeResurrection.Intellect.Departments.DiplomacyDepartment;
export type DiplomacyDepartment = HordeResurrection.Intellect.Departments.DiplomacyDepartment;
export const ProductionDepartment = HordeResurrection.Intellect.Departments.ProductionDepartment;
export type ProductionDepartment = HordeResurrection.Intellect.Departments.ProductionDepartment;
export const ResourcesDepartment = HordeResurrection.Intellect.Departments.ResourcesDepartment;
export type ResourcesDepartment = HordeResurrection.Intellect.Departments.ResourcesDepartment;
export const TechnologyDepartment = HordeResurrection.Intellect.Departments.TechnologyDepartment;
export type TechnologyDepartment = HordeResurrection.Intellect.Departments.TechnologyDepartment;
export const AMindHelper = HordeResurrection.Intellect.Helpers.AMindHelper;
export type AMindHelper = HordeResurrection.Intellect.Helpers.AMindHelper;
export const AIntelligenceModule = HordeResurrection.Intellect.Intelligence.AIntelligenceModule;
export type AIntelligenceModule = HordeResurrection.Intellect.Intelligence.AIntelligenceModule;
export const MainBuildingHelper = HordeResurrection.Intellect.Intelligence.MainBuildingHelper;
export type MainBuildingHelper = HordeResurrection.Intellect.Intelligence.MainBuildingHelper;
export const RoadsModule = HordeResurrection.Intellect.Intelligence.RoadsModule;
export type RoadsModule = HordeResurrection.Intellect.Intelligence.RoadsModule;
export const SituationalCenter = HordeResurrection.Intellect.Intelligence.SituationalCenter;
export type SituationalCenter = HordeResurrection.Intellect.Intelligence.SituationalCenter;
export const TechTreeIntelligenceModule = HordeResurrection.Intellect.Intelligence.TechTreeIntelligenceModule;
export type TechTreeIntelligenceModule = HordeResurrection.Intellect.Intelligence.TechTreeIntelligenceModule;
export const MasterMind = HordeResurrection.Intellect.MasterMind;
export type MasterMind = HordeResurrection.Intellect.MasterMind;
export const AOperator = HordeResurrection.Intellect.Operators.AOperator;
export type AOperator = HordeResurrection.Intellect.Operators.AOperator;
export const ConstructionOperator = HordeResurrection.Intellect.Operators.ConstructionOperator;
export type ConstructionOperator = HordeResurrection.Intellect.Operators.ConstructionOperator;
export const HarvestOperator = HordeResurrection.Intellect.Operators.HarvestOperator;
export type HarvestOperator = HordeResurrection.Intellect.Operators.HarvestOperator;
export const RepairOperator = HordeResurrection.Intellect.Operators.RepairOperator;
export type RepairOperator = HordeResurrection.Intellect.Operators.RepairOperator;
export const WarOperator = HordeResurrection.Intellect.Operators.WarOperator;
export type WarOperator = HordeResurrection.Intellect.Operators.WarOperator;
export const ARequest = HordeResurrection.Intellect.Requests.ARequest;
export type ARequest = HordeResurrection.Intellect.Requests.ARequest;
export const TrackerChangedEventArgs = HordeResurrection.Intellect.Requests.ARequest.TrackerChangedEventArgs;
export type TrackerChangedEventArgs = HordeResurrection.Intellect.Requests.ARequest.TrackerChangedEventArgs;
export const ARequestCreationParameters = HordeResurrection.Intellect.Requests.CreationArgs.ARequestCreationParameters;
export type ARequestCreationParameters = HordeResurrection.Intellect.Requests.CreationArgs.ARequestCreationParameters;
export const ProduceRequestParameters = HordeResurrection.Intellect.Requests.CreationArgs.ProduceRequestParameters;
export type ProduceRequestParameters = HordeResurrection.Intellect.Requests.CreationArgs.ProduceRequestParameters;
export const ProduceRequest = HordeResurrection.Intellect.Requests.ProduceRequest;
export type ProduceRequest = HordeResurrection.Intellect.Requests.ProduceRequest;
export const RequestState = HordeResurrection.Intellect.Requests.State.RequestState;
export type RequestState = HordeResurrection.Intellect.Requests.State.RequestState;
export const RequestStateMachine = HordeResurrection.Intellect.Requests.State.RequestStateMachine;
export type RequestStateMachine = HordeResurrection.Intellect.Requests.State.RequestStateMachine;
export const StateProcessResult = HordeResurrection.Intellect.Requests.State.StateProcessResult;
export type StateProcessResult = HordeResurrection.Intellect.Requests.State.StateProcessResult;
export const RequestPerformPossibility = HordeResurrection.Intellect.Requests.Stuff.RequestPerformPossibility;
export type RequestPerformPossibility = HordeResurrection.Intellect.Requests.Stuff.RequestPerformPossibility;
export const ARequestTracker = HordeResurrection.Intellect.Requests.Trackers.ARequestTracker;
export type ARequestTracker = HordeResurrection.Intellect.Requests.Trackers.ARequestTracker;
export const TrackerCompletionState = HordeResurrection.Intellect.Requests.Trackers.ARequestTracker.TrackerCompletionState;
export type TrackerCompletionState = HordeResurrection.Intellect.Requests.Trackers.ARequestTracker.TrackerCompletionState;
export const TrackersManager = HordeResurrection.Intellect.Requests.Trackers.Manager.TrackersManager;
export type TrackersManager = HordeResurrection.Intellect.Requests.Trackers.Manager.TrackersManager;
export const OrderTracker = HordeResurrection.Intellect.Requests.Trackers.OrderTracker;
export type OrderTracker = HordeResurrection.Intellect.Requests.Trackers.OrderTracker;
export const BeginBuildTracker = HordeResurrection.Intellect.Requests.Trackers.UnitProducing.BeginBuildTracker;
export type BeginBuildTracker = HordeResurrection.Intellect.Requests.Trackers.UnitProducing.BeginBuildTracker;
export const BuildTracker = HordeResurrection.Intellect.Requests.Trackers.UnitProducing.BuildTracker;
export type BuildTracker = HordeResurrection.Intellect.Requests.Trackers.UnitProducing.BuildTracker;
export const ProducingOrdersTracker = HordeResurrection.Intellect.Requests.Trackers.UnitProducing.ProducingOrdersTracker;
export type ProducingOrdersTracker = HordeResurrection.Intellect.Requests.Trackers.UnitProducing.ProducingOrdersTracker;
export const TrainingTracker = HordeResurrection.Intellect.Requests.Trackers.UnitProducing.TrainingTracker;
export type TrainingTracker = HordeResurrection.Intellect.Requests.Trackers.UnitProducing.TrainingTracker;
*/
//#endregion
