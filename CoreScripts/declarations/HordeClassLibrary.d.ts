// <auto-generated/>

//#region HordeVersion
declare namespace HordeClassLibrary.Basic.GameVersion {
	class HordeVersion extends System.Object
		implements System.IEquatable<HordeClassLibrary.Basic.GameVersion.HordeVersion>
	{
		// Constructors:
		constructor(
			version: System.Version | null,
			postfix: string | null
		);

		// Fields:
		static readonly Zero: HordeClassLibrary.Basic.GameVersion.HordeVersion;
		static readonly /* const */ ZeroVersion: string; // = "v0.00"

		// Properties:
		readonly Version: System.Version;
		readonly Postfix: string;

		// Methods:
		static Parse(
			rawVersion: string | null
		): HordeClassLibrary.Basic.GameVersion.HordeVersion;

		static SafeParse(
			rawVersion: string | null
		): HordeClassLibrary.Basic.GameVersion.HordeVersion;

		Equals(
			other: HordeClassLibrary.Basic.GameVersion.HordeVersion | null
		): boolean;
	}
}
//#endregion

//#region IHasId
declare namespace HordeClassLibrary.Basic.Interfaces {
	interface IHasId {

		// Properties:
		readonly Id: number;
	}
	/** TypeScript type stub for .Net interface */
	abstract class IHasId {}
}
//#endregion

//#region AllContent
declare namespace HordeClassLibrary.HordeContent {
	abstract class AllContent {

		// Properties:
		static readonly Forces: HordeClassLibrary.HordeContent.ConfigBooks.ForcesBook;
		static readonly UnitConfigs: HordeClassLibrary.HordeContent.ConfigBooks.UnitConfigsBook;
		static readonly CitadelArmies: HordeClassLibrary.HordeContent.ConfigBooks.CitadelArmiesBook;
		static readonly UnitCommands: HordeClassLibrary.HordeContent.ConfigBooks.UnitCommandsBook;
		static readonly Bullets: HordeClassLibrary.HordeContent.ConfigBooks.BulletsBook;
		static readonly VisualEffects: HordeClassLibrary.HordeContent.ConfigBooks.VisualEffectsBook;
		static readonly SoundEffects: HordeClassLibrary.HordeContent.ConfigBooks.SoundEffectsBook;
		static readonly Fonts: HordeClassLibrary.HordeContent.ConfigBooks.FontsBook;
		static readonly Strings: HordeClassLibrary.HordeContent.ConfigBooks.StringsBook;
		static readonly Animations: HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Graphics.AnimationCatalogsBook;
		static readonly AnimationAtlases: HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Graphics.AnimationAtlasesBook;
		static readonly Sounds: HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Audio.SoundCatalogsBook;
		static readonly SoundResources: HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Audio.SoundResourcesBook;
		static readonly GuiParams: HordeClassLibrary.HordeContent.ConfigBooks.GuiParamsBook;
		static readonly Rules: HordeClassLibrary.HordeContent.ConfigBooks.RulesBook;
		static readonly MindCharacters: HordeClassLibrary.HordeContent.ConfigBooks.MindCharactersBook;
		static readonly ContentStamps: HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStampsCollection;
		static readonly CoreContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BulletFactoriesLibrary
declare namespace HordeClassLibrary.HordeContent {
	abstract class BulletFactoriesLibrary {

		// Methods:
		static Initialize(): void;

		static GetFactoryByType<T extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory>(
			$T: typeof HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
		): T;

		static GetWorker(
			workerName: string | null
		): HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory;

		static GetWorkerFunc(
			workerName: string | null
		): HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory.CreateInstanceDelegate;

		static GetAllWorkers(): System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory>;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AConfigsBookAny
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	abstract class AConfigsBookAny extends System.Object {

		// Methods:
		MergeWith(
			otherBook: HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBookAny | null
		): void;

		SetupAllConfigs(
			generalContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null
		): void;

		AfterSetup(
			generalContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null
		): void;

		GetConfigUngeneric(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.AConfig;

		GetBookHash(): string;

		AddConfig(
			cfg: HordeClassLibrary.HordeContent.Configs.AConfig | null
		): void;

		RemoveConfig(
			cfg: HordeClassLibrary.HordeContent.Configs.AConfig | null
		): void;

		RemoveConfigByUid(
			uid: string | null
		): void;

		HasConfig(
			uid: string | null
		): boolean;

		MakeUniqueUid(
			uid: string | null
		): string;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AConfigsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	abstract class AConfigsBook<TConfig extends HordeClassLibrary.HordeContent.Configs.AConfig>
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBookAny
	{
		// Properties:
		readonly HolderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack;
		readonly Configs: System.Collections.Generic.IReadOnlyDictionary<string, TConfig>;

		// Indexer:
		readonly Item: $Indexer_AConfigsBook<TConfig>;

		// Methods:
		GetConfig(
			uid: string | null
		): TConfig;

		AddConfig(
			config: TConfig | null
		): void;

		RemoveConfig(
			config: TConfig | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);

		// Some generics magic for TypeScript:
		private $AConfigsBook_TConfig: TConfig;
	}

	/** This service type explains ClearScript access to .Net indexers. */
	abstract class $Indexer_AConfigsBook<TConfig extends HordeClassLibrary.HordeContent.Configs.AConfig> {
		/** [ uid: string ] -> TConfig */
		public get(
			uid: string | null
		): TConfig;
	}
}
//#endregion

//#region BulletsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class BulletsBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);

		// Properties:
		readonly BuildingBeam: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
		readonly BuildingFlag: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
		readonly Fire: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
	}
}
//#endregion

//#region CitadelArmiesBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class CitadelArmiesBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.Citadel.CitadelArmy>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);

		// Methods:
		GetForceByArmyType(
			armyType: HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelArmyType
		): HordeClassLibrary.HordeContent.Configs.Citadel.CitadelArmy;
	}
}
//#endregion

//#region FontsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class FontsBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.Fonts.FontConfig>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			fontsDir: string | null
		);
	}
}
//#endregion

//#region ForcesBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class ForcesBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.Army.Force>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);

		// Methods:
		GetUnitConfigByUid(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;

		GetForceByArmyType(
			army: HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelArmyType
		): HordeClassLibrary.HordeContent.Configs.Army.Force;
	}
}
//#endregion

//#region GuiParamsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class GuiParamsBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.Interface.GuiParams>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			dirPath: string | null
		);

		// Methods:
		GetByResolution(
			resolution: HordeResurrection.Basic.Primitives.Geometry.Size2D
		): HordeClassLibrary.HordeContent.Configs.Interface.GuiParams;
	}
}
//#endregion

//#region MindCharactersBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class MindCharactersBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);

		// Methods:
		GetDefaultCharacter(): HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig;

		GetCharacterByUidOrDefault(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig;

		GetCharacterByName(
			name: string | null
		): HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig;

		GetAllSelectableCharacters(): System.Collections.Generic.IEnumerable<HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig>;

		GetDefaultLobbyCharacter(): HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig;
	}
}
//#endregion

//#region RulesBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class RulesBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.Rules.RuleConfig>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);
	}
}
//#endregion

//#region SoundEffectsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class SoundEffectsBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);

		// Properties:
		readonly EarthBackground: HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
		readonly MenuBackground: HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
		readonly WorkerChopDown: HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
		readonly WorkerBuild: HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
		readonly SelectUnits: HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
		readonly InputBuilderSounds: HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
		readonly InputItemSounds: HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
		readonly InterfaceFromSettlementSounds: HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
		readonly InterfaceChatSounds: HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
	}
}
//#endregion

//#region StringsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class StringsBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.StringConfig>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);
	}
}
//#endregion

//#region UnitCommandsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class UnitCommandsBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.UnitCommandConfig>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);

		// Properties:
		readonly CancelCommandConfig: HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;

		// Methods:
		GetByCommand(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		): HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;
	}
}
//#endregion

//#region UnitConfigsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class UnitConfigsBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);
	}
}
//#endregion

//#region IConfigurableCatalogsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract {
	interface IConfigurableCatalogsBook {

		// Methods:
		AddCatalog(
			catalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.AViewResourcesCatalog | null
		): boolean;

		RemoveCatalog(
			catalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.AViewResourcesCatalog | null
		): boolean;

		GetSourcePathForNewConfig(
			suggestedPath: string | null
		): string;
	}
	/** TypeScript type stub for .Net interface */
	abstract class IConfigurableCatalogsBook {}
}
//#endregion

//#region ACatalogsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract {
	abstract class ACatalogsBook<TConfig extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.AViewResourcesCatalog>
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<TConfig>
		implements HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract.IConfigurableCatalogsBook
	{
		// Methods:
		GetCatalog(
			uid: string | null
		): TConfig;

		GetCatalog<TCatalogType extends TConfig>(
			$TCatalogType: typeof HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.AViewResourcesCatalog,
			uid: string | null
		): TCatalogType;

		GetAllCatalogs(): System.Collections.Generic.Dictionary<string, TConfig>;

		GetCatalogByResourcePath(
			resourcePath: string | null
		): TConfig;

		AddCatalog(
			catalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.AViewResourcesCatalog | null
		): boolean;

		RemoveCatalog(
			catalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.AViewResourcesCatalog | null
		): boolean;

		GetSourcePathForNewConfig(
			suggestedPath: string | null
		): string;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);

		// Some generics magic for TypeScript:
		private $ACatalogsBook_TConfig: TConfig;
	}
}
//#endregion

//#region AExternalResourcesInfoBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract {
	abstract class AExternalResourcesInfoBook<TConfig extends HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Abstract.AExternalResourceInfo>
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<TConfig>
	{
		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);

		// Some generics magic for TypeScript:
		private $AExternalResourcesInfoBook_TConfig: TConfig;
	}
}
//#endregion

//#region SoundCatalogsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Audio {
	class SoundCatalogsBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract.ACatalogsBook<HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);
	}
}
//#endregion

//#region SoundResourcesBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Audio {
	class SoundResourcesBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract.AExternalResourcesInfoBook<HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.SoundResourceInfo>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);

		// Properties:
		readonly NoSound: HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.SoundResourceInfo;
	}
}
//#endregion

//#region AnimationAtlasesBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Graphics {
	class AnimationAtlasesBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract.AExternalResourcesInfoBook<HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlasItem>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);

		// Properties:
		readonly Atlases: System.Collections.Generic.IReadOnlyDictionary<string, HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlas>;

		// Methods:
		DebugConvertAtlasToCanvas(
			atlas: HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlas | null
		): void;
	}
}
//#endregion

//#region AnimationCatalogsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Graphics {
	class AnimationCatalogsBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract.ACatalogsBook<HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.BaseAnimationsCatalog>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);
	}
}
//#endregion

//#region VisualEffectsBook
declare namespace HordeClassLibrary.HordeContent.ConfigBooks {
	class VisualEffectsBook
		extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig>
	{
		// Constructors:
		constructor(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			filePath: string | null
		);

		// Properties:
		readonly Blood: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly Dust: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly Sparks: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly BloodPool: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly BuildingFlag: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly RallypointFlag: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly AttentionMark: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly StickyTemplate: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly SingleAnimTemplate: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly SingleFrameTemplate: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly UnitDecayTemplate: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly BuildingRuinsTemplate: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
	}
}
//#endregion

//#region ConfigsContainerData
declare namespace HordeClassLibrary.HordeContent.ConfigBoxes {
	class ConfigsContainerData extends System.Object {

		// Constructors:
		constructor(
			sourcePath?: string | null /* = null */,
			description?: string | null /* = null */
		);

		// Properties:
		readonly FormatVersion: string;
		readonly Description: string;
		readonly SourcePath: string;
	}
}
//#endregion

//#region AnimationAtlasData
declare namespace HordeClassLibrary.HordeContent.ConfigBoxes.Implementation {
	class AnimationAtlasData
		extends HordeClassLibrary.HordeContent.ConfigBoxes.ConfigsContainerData
	{
		// Constructors:
		constructor(
			sourcePath?: string | null /* = null */,
			description?: string | null /* = null */
		);

		constructor();
	}
}
//#endregion

//#region UnitConfigsContainerData
declare namespace HordeClassLibrary.HordeContent.ConfigBoxes.Implementation {
	class UnitConfigsContainerData
		extends HordeClassLibrary.HordeContent.ConfigBoxes.ConfigsContainerData
	{
		// Constructors:
		constructor(
			forceUid: string | null,
			sourcePath?: string | null /* = null */,
			description?: string | null /* = null */
		);

		// Properties:
		readonly ForceUid: string;
	}
}
//#endregion

//#region PreConfigContentType
declare namespace HordeClassLibrary.HordeContent.ConfigBoxes {
	abstract class PreConfigContentType extends System.Enum {
		/** PreConfigContentType.Config = 0 */ static readonly Config: PreConfigContentType;
		/** PreConfigContentType.PrimaryPatch = 1 */ static readonly PrimaryPatch: PreConfigContentType;
		/** PreConfigContentType.SecondaryPatch = 2 */ static readonly SecondaryPatch: PreConfigContentType;
		/** PreConfigContentType.InvalidData = 3 */ static readonly InvalidData: PreConfigContentType;
	}
}
//#endregion

//#region AConfig
declare namespace HordeClassLibrary.HordeContent.Configs {
	abstract class AConfig extends System.Object {

		// Properties:
		readonly Uid: string;
		readonly Description: string;
		readonly HolderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack;
		readonly SourcePath: string;
		readonly Archetype: HordeClassLibrary.HordeContent.Configs.AConfig;
		readonly ContentPackRequirements: System.Collections.Generic.List<string>;
		readonly InheritedConfigs: HordeResurrection.Basic.Collections.OrderedSet<HordeClassLibrary.HordeContent.Configs.AConfig>;

		// Methods:
		Initialize(
			holderContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null,
			containerData: HordeClassLibrary.HordeContent.ConfigBoxes.ConfigsContainerData | null,
			contentPackRequirements: System.Collections.Generic.List<string> | null
		): void;

		GetPatchVariant(): HordeClassLibrary.HordeContent.PatchSystem.ConfigPatchVariant;

		Setup(
			generalContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region Force
declare namespace HordeClassLibrary.HordeContent.Configs.Army {
	class Force
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Constructors:
		constructor(
			uid: string | null,
			name: string | null
		);

		// Properties:
		readonly Name: string;
		readonly UnitConfigsFileName: string;
		readonly DefaultCharacter: HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig;
		readonly UnitConfigs: System.Collections.Generic.IReadOnlyDictionary<string, HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>;
		readonly TechnologyMap: HordeClassLibrary.HordeContent.Configs.Army.ForceTechnologyMap;
		readonly CitadelArmyType: HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelArmyType;

		// Methods:
		UpdateTechTree(): void;

		AddUnitConfig(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): void;

		RemoveUnitConfig(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): void;

		FindUnitConfigByNumber(
			id: number
		): HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
	}
}
//#endregion

//#region ForceTechnologyMap
declare namespace HordeClassLibrary.HordeContent.Configs.Army {
	class ForceTechnologyMap extends System.Object {

		// Constructors:
		constructor();

		// Methods:
		GetDependentConfigs(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): System.Collections.Generic.HashSet<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>;

		GetProducers(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): System.Collections.Generic.HashSet<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>;

		AddConfig(
			cfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): void;
	}
}
//#endregion

//#region BulletConfig
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets {
	class BulletConfig
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Properties:
		readonly Name: string;
		readonly DisallowedTargets: HordeClassLibrary.UnitComponents.Enumerations.UnitQueryFlag;
		readonly UnitHurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType;
		readonly BaseBulletSpeed: HordeResurrection.Basic.Primitives.PreciseFraction;
		readonly CanDamageAllied: boolean;
		readonly SpecialParams: HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams;
		readonly IsBallistic: boolean;
		readonly BulletAnimationsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;
		readonly LoopAnimation: boolean;
		readonly BulletSoundsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog;
		readonly DirectionsCount: number;
		readonly DefaultDrawLayer: HordeClassLibrary.World.Simple.DrawLayer;

		// Methods:
		CanAttackTargetExt(
			target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): HordeClassLibrary.UnitComponents.Enumerations.CanNotAttackCause;

		CanAttackTarget(
			target: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		CanDiplomacyDamageUnit(
			sourceUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		CreateInstance(
			/*in*/ emittingArgs: HordeClassLibrary.World.Objects.Bullets.BulletEmittingArgs
		): HordeClassLibrary.World.Objects.Bullets.BaseBullet;

		static CreateConfigInstance(
			uid: string | null,
			name: string | null
		): HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
	}
}
//#endregion

//#region ABulletSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams {
	abstract class ABulletSpecialParams extends System.Object {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BallistaArrowSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams {
	class BallistaArrowSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams
	{
		// Properties:
		readonly DustEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly FragmentBulletConfig: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
		readonly FragmentShotParams: HordeClassLibrary.World.Objects.Bullets.ShotParams;
		readonly FragmentsCount: number;
		readonly FragmentsFlyRadius: number;
		readonly ExplodeRadius: number;

		// Methods:
		static CreateParamsInstance(): HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.BallistaArrowSpecialParams;
	}
}
//#endregion

//#region BrokenFragmentSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams {
	class BrokenFragmentSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams
	{
		// Properties:
		readonly MaxFlyDistance: number;
		readonly MaxBounceDistance: number;
		readonly BounceSpeed: HordeResurrection.Basic.Primitives.PreciseFraction;
		readonly Damage: number;
		readonly TimeToDecay: number;

		// Methods:
		static CreateParamsInstance(): HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.BrokenFragmentSpecialParams;
	}
}
//#endregion

//#region CatapultBombSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams {
	class CatapultBombSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams
	{
		// Properties:
		readonly ExplodeRadius: number;
		readonly ExplosionEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly ChipsEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;

		// Methods:
		static CreateParamsInstance(): HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.CatapultBombSpecialParams;
	}
}
//#endregion

//#region FireArrowSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams {
	class FireArrowSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams
	{
		// Properties:
		readonly TraceSmokeEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly SparksEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly BrokenArrowCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;
		IgnoreObstacles: boolean;

		// Methods:
		static CreateParamsInstance(): HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.FireArrowSpecialParams;
	}
}
//#endregion

//#region FireballSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams {
	class FireballSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams
	{
		// Properties:
		readonly LittleSmokeEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly SmokeEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly FireConfig: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
		readonly BurningFlyDistance: number;
		readonly BurningDelay: number;

		// Methods:
		static CreateParamsInstance(): HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.FireballSpecialParams;
	}
}
//#endregion

//#region FireSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams {
	class FireSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams
	{
		// Properties:
		readonly IgnitingSmokeEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly FadingSmokeEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly SparksEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly FireLittleCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;
		readonly FireMediumCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;
		readonly FireBigCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;
		readonly BurningPhaseChangePeriod: number;
		readonly FireDamage: number;
		readonly CanBurnDownForest: boolean;
		readonly UnitInForestDamage: number;
		readonly InitialZ: number;
		readonly InitialBurningValue: number;
		readonly WindThresholdForFireSpreading: HordeResurrection.Basic.Primitives.PreciseFraction;
		readonly DamagePeriod: number[];
		readonly BuildingDamagePeriod: number[];
		readonly CheckFireAtBuildingPeriod: number;
		readonly MaxNoDamageTicks: number;
		readonly DamagePercentToFade: number;
		readonly MinDamageToFade: number;
		readonly MaxDamageToFade: number;

		// Methods:
		static CreateParamsInstance(): HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.FireSpecialParams;
	}
}
//#endregion

//#region LightningSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams {
	class LightningSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams
	{
		// Properties:
		readonly ShotAnimationCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;

		// Methods:
		static CreateParamsInstance(): HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.LightningSpecialParams;
	}
}
//#endregion

//#region LightningStormSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams {
	class LightningStormSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams
	{
		// Properties:
		readonly WorkBulletConfig: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
		readonly ShotParams: HordeClassLibrary.World.Objects.Bullets.ShotParams;
		readonly BulletsCount: number;
		readonly StormRadius: number;
		readonly EmmitingDelay: number;
		readonly EmitNumberAtOnce: number;

		// Methods:
		static CreateParamsInstance(): HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.LightningStormSpecialParams;
	}
}
//#endregion

//#region ScriptBulletSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams {
	class ScriptBulletSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams
	{
		// Properties:
		readonly InitializeFuncName: string;
		readonly ProcessFuncName: string;

		// Methods:
		static CreateParamsInstance(): HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ScriptBulletSpecialParams;
	}
}
//#endregion

//#region SimpleArrowSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams {
	class SimpleArrowSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams
	{
		// Properties:
		readonly BrokenArrowCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;
		readonly RotatingArrowEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		IgnoreObstacles: boolean;

		// Methods:
		static CreateParamsInstance(): HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.SimpleArrowSpecialParams;
	}
}
//#endregion

//#region CitadelArmy
declare namespace HordeClassLibrary.HordeContent.Configs.Citadel {
	class CitadelArmy
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Constructors:
		constructor(
			armyType: HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelArmyType
		);

		// Properties:
		readonly ArmyType: HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelArmyType;
		readonly UnitConfigs: System.Collections.Generic.IReadOnlyDictionary<string, HordeClassLibrary.HordeContent.Configs.Citadel.CitadelUnitConfig>;

		// Methods:
		FindUnitConfigById(
			id: number
		): HordeClassLibrary.HordeContent.Configs.Citadel.CitadelUnitConfig;

		ReadFromBinArray(
			armyBuff: number[] | null,
			unitConfigsCount: number
		): void;
	}
}
//#endregion

//#region CitadelUnitConfig
declare namespace HordeClassLibrary.HordeContent.Configs.Citadel {
	class CitadelUnitConfig
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Constructors:
		constructor(
			army: HordeClassLibrary.HordeContent.Configs.Citadel.CitadelArmy | null,
			id: number,
			nameStringIndex: number
		);

		// Fields:
		static readonly /* const */ OBJ_DAT_struct_size: number; // = 171

		// Properties:
		readonly LENGHT: number;
		readonly WIDTH: number;
		readonly HIGH: number;
		readonly P_WIDTH: number;
		readonly P_HIGH: number;
		readonly PICTURE: number;
		readonly NAME_ADD: number;
		readonly COMMAND_ARRAY: number[];
		readonly WORKER: number;
		readonly WEIGHT: number;
		readonly MTYPE: number;
		readonly SHIELD: number;
		readonly MAX_HEALTH: number;
		readonly MIN_HEALTH: number;
		readonly SIGHT: number;
		readonly FIRST_SPR: number;
		readonly MOVE_PHASES: number;
		readonly ATTACK_PHASES: number;
		readonly ATTACK_ANI: number[];
		readonly SHOT_PHASE: number;
		readonly DEATH_PHASES: number[];
		readonly AFTER_DEATH: number[];
		readonly STEP_SIZE: number;
		readonly SPEEDS: number[];
		readonly GUN_KOOR: number[];
		readonly ARMAMENT: number;
		readonly ARM_DAMAGE: number;
		readonly ARM_RANGE: number;
		readonly ARM_RANGE_MIN: number;
		readonly ARM_LEVELS: number;
		readonly LOAD_TIME: number;
		readonly RATING: number;
		readonly Z_LEVEL: number;
		readonly SPECIAL_VAR: number[];
		readonly N_RESOURS: number[];
		readonly RECOVERY_COST: number[];
		readonly DESCRIPTION: number[];
		readonly TRACK: number;
		readonly SOUNDS: number[];
		readonly BUILD_PHASES: number;
		readonly STAY_PHASES: number;
		readonly BUILD_SPEED: number;
		readonly EMERGE_KOOR1: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly EMERGE_KOOR2: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly PRODUCT_SIDE: number;
		readonly LIFE_DISTANCE: number;
		readonly DESTRUCT_DUST: number;
		readonly AFTER_DESTRUCT: number;
		readonly HIT_PHASES: number;
		readonly HIT_PHASE: number;
		readonly DIG_RADIUS: number;
		readonly BUILD_TYPE: number;
		readonly STORAGE_SIZE: number;
		readonly SAW_SPEED: number;
		readonly FLIT_PHASESRADIUS: number;
		readonly ROTATE_PHASES: number;
		readonly HIT_TO_FELL: number;
		readonly MAKE_SPEED: number;
		readonly Name: string;
		readonly CitadelId: number;
		readonly Army: HordeClassLibrary.HordeContent.Configs.Citadel.CitadelArmy;
		readonly NameStringIndex: number;
		readonly SpeedsDict: System.Collections.Generic.Dictionary<HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType, number>;
		readonly GunCoord: System.Collections.Generic.Dictionary<HordeClassLibrary.UnitComponents.Enumerations.UnitDirection, HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		readonly CostResources: HordeClassLibrary.Miscellaneous.Citadel.Structures.Other.CitadelResourcesAmount;
		readonly RecoveryCost: HordeClassLibrary.Miscellaneous.Citadel.Structures.Other.CitadelResourcesAmount;
		readonly MoveType: HordeClassLibrary.UnitComponents.Enumerations.UnitMoveType;
		readonly Flags: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.CitadelUnitFlags;
		readonly IsBuilding: boolean;
		readonly CitadelSpecification: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.CitadelUnitSpecification;
		readonly CitadelFirstSprite: number;
		readonly CitadelAnimPhases: System.Collections.Generic.Dictionary<HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState, number>;
		readonly CitadelDrawSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;

		// Methods:
		ReadFromOldArray(
			cfgBuff: number[] | null
		): void;
	}
}
//#endregion

//#region AConfigsFactory
declare namespace HordeClassLibrary.HordeContent.Configs.ConfigFactories {
	abstract class AConfigsFactory extends System.Object {

		// Properties:
		readonly Name: string;
		readonly Description: string;
		readonly DefaultConfigName: string;
		readonly DefaultConfigDescription: string;
		readonly ConfigUidPrefix: string;

		// Methods:
		CreateInstance(
			name: string | null,
			internalEditorDirectory: string | null,
			containerPathProvider: System.Func_1<string, string> | System.Func | null
		): HordeClassLibrary.HordeContent.Configs.AConfig;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ConfigCreationParams
declare namespace HordeClassLibrary.HordeContent.Configs.ConfigFactories {
	class ConfigCreationParams extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		Uid: string;
		Description: string;
		InternalEditorPath: string;
		SourcePath: string;
	}
}
//#endregion

//#region FontConfig
declare namespace HordeClassLibrary.HordeContent.Configs.Fonts {
	class FontConfig
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Properties:
		readonly InternalEditorPath: string;
		readonly BaseGap: number;
		readonly BaseHeight: number;
		readonly ImageCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.FontCatalog;
		readonly SymbolConfigs: System.Collections.Generic.Dictionary<string, HordeClassLibrary.HordeContent.Configs.Fonts.SymbolConfig>;
	}
}
//#endregion

//#region SymbolConfig
declare namespace HordeClassLibrary.HordeContent.Configs.Fonts {
	class SymbolConfig extends System.Object {

		// Constructors:
		constructor(
			c: string,
			pageNumber: number,
			location: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D
		);

		// Properties:
		readonly Char: string;
		readonly PageNumber: number;
		readonly Location: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly Size: HordeResurrection.Basic.Primitives.Geometry.Size2D;
	}
}
//#endregion

//#region ControlHorizontalAlignment
declare namespace HordeClassLibrary.HordeContent.Configs.Interface.Controls.Enums {
	abstract class ControlHorizontalAlignment extends System.Enum {
		/** ControlHorizontalAlignment.Left = 0 */ static readonly Left: ControlHorizontalAlignment;
		/** ControlHorizontalAlignment.Center = 1 */ static readonly Center: ControlHorizontalAlignment;
		/** ControlHorizontalAlignment.Right = 2 */ static readonly Right: ControlHorizontalAlignment;
		/** ControlHorizontalAlignment.Stretch = 3 */ static readonly Stretch: ControlHorizontalAlignment;
	}
}
//#endregion

//#region ControlVerticalAlignment
declare namespace HordeClassLibrary.HordeContent.Configs.Interface.Controls.Enums {
	abstract class ControlVerticalAlignment extends System.Enum {
		/** ControlVerticalAlignment.Bottom = 0 */ static readonly Bottom: ControlVerticalAlignment;
		/** ControlVerticalAlignment.Center = 1 */ static readonly Center: ControlVerticalAlignment;
		/** ControlVerticalAlignment.Top = 2 */ static readonly Top: ControlVerticalAlignment;
		/** ControlVerticalAlignment.Stretch = 3 */ static readonly Stretch: ControlVerticalAlignment;
	}
}
//#endregion

//#region ControlOrientation
declare namespace HordeClassLibrary.HordeContent.Configs.Interface.Controls.Enums {
	abstract class ControlOrientation extends System.Enum {
		/** ControlOrientation.Horizontal = 0 */ static readonly Horizontal: ControlOrientation;
		/** ControlOrientation.Vertical = 1 */ static readonly Vertical: ControlOrientation;
	}
}
//#endregion

//#region GuiParams
declare namespace HordeClassLibrary.HordeContent.Configs.Interface {
	class GuiParams
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Constructors:
		constructor();

		// Properties:
		readonly VirtualUiResolution: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly DefaultTextHeight: number;
		readonly DefaultFontUid: string;
		readonly DefaultVectorFontName: string;
		readonly ResolutionSuffix: string;
	}
}
//#endregion

//#region MindCharacterConfig
declare namespace HordeClassLibrary.HordeContent.Configs.MasterMind {
	class MindCharacterConfig
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Constructors:
		constructor();

		// Properties:
		DisplayName: string;
		DisplayNicknameMask: string;
		ForInternalUsingOnly: boolean;
		readonly ProductionScript: System.Collections.Generic.List<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>;
	}
}
//#endregion

//#region ARuleInstruction
declare namespace HordeClassLibrary.HordeContent.Configs.Rules.Instructions {
	abstract class ARuleInstruction extends System.Object {

		// Methods:
		Setup(
			generalContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null
		): void;

		MakeContextInstance(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): HordeClassLibrary.World.Objects.Rules.ARuleContext;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ExistenceRuleInstruction
declare namespace HordeClassLibrary.HordeContent.Configs.Rules.Instructions {
	class ExistenceRuleInstruction
		extends HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction
	{
		// Constructors:
		constructor();

		// Properties:
		AlmostDefeatCondition: HordeClassLibrary.World.Settlements.Existence.AlmostDefeatCondition;
		TotalDefeatCondition: HordeClassLibrary.World.Settlements.Existence.TotalDefeatCondition;
		VictoryCondition: HordeClassLibrary.World.Settlements.Existence.VictoryCondition;
	}
}
//#endregion

//#region PopulationRuleInstruction
declare namespace HordeClassLibrary.HordeContent.Configs.Rules.Instructions {
	class PopulationRuleInstruction
		extends HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction
	{
		// Properties:
		readonly FreePeopleLimit: number | null;

		// Methods:
		static CreateInstance(): HordeClassLibrary.HordeContent.Configs.Rules.Instructions.PopulationRuleInstruction;
	}
}
//#endregion

//#region ProductionLimitInstruction
declare namespace HordeClassLibrary.HordeContent.Configs.Rules.Instructions {
	class ProductionLimitInstruction
		extends HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction
	{
		// Properties:
		readonly UnitLimits: System.Collections.Generic.Dictionary<string, number>;

		// Methods:
		static CreateInstance(): HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ProductionLimitInstruction;
	}
}
//#endregion

//#region UnitsAtSameTimeLimitInstruction
declare namespace HordeClassLibrary.HordeContent.Configs.Rules.Instructions {
	class UnitsAtSameTimeLimitInstruction
		extends HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction
	{
		// Properties:
		readonly UnitLimits: System.Collections.Generic.Dictionary<string, number>;

		// Methods:
		static CreateInstance(): HordeClassLibrary.HordeContent.Configs.Rules.Instructions.UnitsAtSameTimeLimitInstruction;
	}
}
//#endregion

//#region RuleConfig
declare namespace HordeClassLibrary.HordeContent.Configs.Rules {
	class RuleConfig
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Properties:
		readonly Name: string;
		readonly Instruction: HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction;
		readonly Settlements: System.Collections.Generic.List<string>;
	}
}
//#endregion

//#region SoundEffectConfig
declare namespace HordeClassLibrary.HordeContent.Configs.SoundEffects {
	class SoundEffectConfig
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Properties:
		PlayMode: HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundPlayMode;
		readonly SoundsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog;

		// Methods:
		static CreateVisualEffectConfig(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
	}
}
//#endregion

//#region SoundPlayMode
declare namespace HordeClassLibrary.HordeContent.Configs.SoundEffects {
	abstract class SoundPlayMode extends System.Enum {
		/** SoundPlayMode.OneOff = 0 */ static readonly OneOff: SoundPlayMode;
		/** SoundPlayMode.InfiniteLoop = 1 */ static readonly InfiniteLoop: SoundPlayMode;
	}
}
//#endregion

//#region StringConfig
declare namespace HordeClassLibrary.HordeContent.Configs {
	class StringConfig
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Properties:
		readonly Text: string;

		// Methods:
		CreateNewInstance(): HordeClassLibrary.HordeContent.Configs.StringConfig;
	}
}
//#endregion

//#region UnitConfigsCounter
declare namespace HordeClassLibrary.HordeContent.Configs.Stuff {
	class UnitConfigsCounter
		extends HordeResurrection.Basic.Collections.ObjectsCounter<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ForcesCounter
declare namespace HordeClassLibrary.HordeContent.Configs.Stuff {
	class ForcesCounter
		extends HordeResurrection.Basic.Collections.ObjectsCounter<HordeClassLibrary.HordeContent.Configs.Army.Force>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ConfigTypeInfo
declare namespace HordeClassLibrary.HordeContent.Configs.Stuff {
	class ConfigTypeInfo<TConfig extends HordeClassLibrary.HordeContent.Configs.AConfig> extends System.Object {

		// Constructors:
		constructor(
			$TConfig: typeof HordeClassLibrary.HordeContent.Configs.AConfig
		);

		// Properties:
		readonly ConfigReferencesHelper: HordeClassLibrary.HordeContent.Configs.Stuff.References.ConfigReferencesHelper;

		// Some generics magic for TypeScript:
		private $ConfigTypeInfo_TConfig: TConfig;
	}
}
//#endregion

//#region ConfigReferenceBase
declare namespace HordeClassLibrary.HordeContent.Configs.Stuff.References {
	abstract class ConfigReferenceBase extends System.Object {

		// Properties:
		readonly Uid: string;

		// Methods:
		IsValid(): boolean;

		SetConfig(
			config: HordeClassLibrary.HordeContent.Configs.AConfig | null
		): void;

		GetConfig(): HordeClassLibrary.HordeContent.Configs.AConfig;

		static CreateReference(
			cfg: HordeClassLibrary.HordeContent.Configs.AConfig | null
		): HordeClassLibrary.HordeContent.Configs.Stuff.References.ConfigReferenceBase;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ConfigReference
declare namespace HordeClassLibrary.HordeContent.Configs.Stuff.References {
	class ConfigReference<TConfig extends HordeClassLibrary.HordeContent.Configs.AConfig>
		extends HordeClassLibrary.HordeContent.Configs.Stuff.References.ConfigReferenceBase
	{
		// Constructors:
		constructor(
			$TConfig: typeof HordeClassLibrary.HordeContent.Configs.AConfig,
			config: TConfig | null
		);

		constructor(
			$TConfig: typeof HordeClassLibrary.HordeContent.Configs.AConfig,
			uid: string | null
		);

		// Properties:
		Config: TConfig;

		// Some generics magic for TypeScript:
		private $ConfigReference_TConfig: TConfig;
	}
}
//#endregion

//#region ConfigReferencesHelper
declare namespace HordeClassLibrary.HordeContent.Configs.Stuff.References {
	class ConfigReferencesHelper extends System.Object {

		// Fields:
		static readonly /* const */ ReferencePropertyNameSuffix: string; // = "Ref"

		// Methods:
		ResolveReferences(
			targetObj: any | null,
			generalContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null
		): void;

		RestoreReferences(
			targetObj: any | null,
			generalContentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null
		): void;
	}
}
//#endregion

//#region ViewResourceReferenceBase
declare namespace HordeClassLibrary.HordeContent.Configs.Stuff.References {
	abstract class ViewResourceReferenceBase extends System.Object {

		// Properties:
		readonly Uid: string;

		// Methods:
		IsValid(): boolean;

		SetResource(
			resource: any | null
		): void;

		GetResource(): any;

		static CreateReference(
			res: HordeClassLibrary.HordeContent.ViewResources.Abstract.AViewResource | null
		): HordeClassLibrary.HordeContent.Configs.Stuff.References.ViewResourceReferenceBase;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ViewResourceReference
declare namespace HordeClassLibrary.HordeContent.Configs.Stuff.References {
	class ViewResourceReference<TViewResource extends HordeClassLibrary.HordeContent.ViewResources.Abstract.AViewResource>
		extends HordeClassLibrary.HordeContent.Configs.Stuff.References.ViewResourceReferenceBase
	{
		// Constructors:
		constructor(
			$TViewResource: typeof HordeClassLibrary.HordeContent.ViewResources.Abstract.AViewResource,
			viewResource: TViewResource | null
		);

		constructor(
			$TViewResource: typeof HordeClassLibrary.HordeContent.ViewResources.Abstract.AViewResource,
			uid: string | null
		);

		// Properties:
		ViewResource: TViewResource;

		// Some generics magic for TypeScript:
		private $ViewResourceReference_TViewResource: TViewResource;
	}
}
//#endregion

//#region WorkerReferenceBase
declare namespace HordeClassLibrary.HordeContent.Configs.Stuff.References {
	abstract class WorkerReferenceBase extends System.Object {

		// Properties:
		readonly Name: string;

		// Methods:
		IsValid(): boolean;

		SetWorker(
			worker: System.Delegate | null
		): void;

		GetWorker(): System.Delegate;

		static CreateReference(
			wrk: System.Delegate | null
		): HordeClassLibrary.HordeContent.Configs.Stuff.References.WorkerReferenceBase;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region WorkerReference
declare namespace HordeClassLibrary.HordeContent.Configs.Stuff.References {
	class WorkerReference<TWorker extends System.Delegate>
		extends HordeClassLibrary.HordeContent.Configs.Stuff.References.WorkerReferenceBase
	{
		// Constructors:
		constructor(
			$TWorker: typeof System.Delegate,
			worker: TWorker | null
		);

		constructor(
			$TWorker: typeof System.Delegate,
			workerName: string | null
		);

		// Properties:
		Worker: TWorker;

		// Some generics magic for TypeScript:
		private $WorkerReference_TWorker: TWorker;
	}
}
//#endregion

//#region TilePayload
declare namespace HordeClassLibrary.HordeContent.Configs.Tiles.Stuff {
	abstract class TilePayload extends System.Enum {
		/** TilePayload.None = 0 */ static readonly None: TilePayload;
		/** TilePayload.Scorched = 1 */ static readonly Scorched: TilePayload;
		/** TilePayload.Chopped = 2 */ static readonly Chopped: TilePayload;
		/** TilePayload.Exploded = 3 */ static readonly Exploded: TilePayload;
		/** TilePayload.ContainsGold = 4 */ static readonly ContainsGold: TilePayload;
		/** TilePayload.ContainsMetal = 5 */ static readonly ContainsMetal: TilePayload;
		/** TilePayload.ContainsColoredMetal = 6 */ static readonly ContainsColoredMetal: TilePayload;
		/** TilePayload.Payload1 = 7 */ static readonly Payload1: TilePayload;
		/** TilePayload.Payload2 = 8 */ static readonly Payload2: TilePayload;
		/** TilePayload.Payload3 = 9 */ static readonly Payload3: TilePayload;
		/** TilePayload.Payload4 = 10 */ static readonly Payload4: TilePayload;
		/** TilePayload.Payload5 = 11 */ static readonly Payload5: TilePayload;
		/** TilePayload.Payload6 = 12 */ static readonly Payload6: TilePayload;
		/** TilePayload.Payload7 = 13 */ static readonly Payload7: TilePayload;
		/** TilePayload.Payload8 = 14 */ static readonly Payload8: TilePayload;
		/** TilePayload.Payload9 = 15 */ static readonly Payload9: TilePayload;
		/** TilePayload.Unknown = 255 */ static readonly Unknown: TilePayload;
	}
}
//#endregion

//#region TileQuadType
declare namespace HordeClassLibrary.HordeContent.Configs.Tiles.Stuff {
	abstract class TileQuadType extends System.Enum {
		/** TileQuadType.Water = 0 */ static readonly Water: TileQuadType;
		/** TileQuadType.Water1 = 1 */ static readonly Water1: TileQuadType;
		/** TileQuadType.Sand = 2 */ static readonly Sand: TileQuadType;
		/** TileQuadType.Sand1 = 3 */ static readonly Sand1: TileQuadType;
		/** TileQuadType.Grass = 4 */ static readonly Grass: TileQuadType;
		/** TileQuadType.Grass1 = 5 */ static readonly Grass1: TileQuadType;
		/** TileQuadType.Forest = 6 */ static readonly Forest: TileQuadType;
		/** TileQuadType.Forest1 = 7 */ static readonly Forest1: TileQuadType;
		/** TileQuadType.Mounts = 8 */ static readonly Mounts: TileQuadType;
		/** TileQuadType.Mounts1 = 9 */ static readonly Mounts1: TileQuadType;
		/** TileQuadType.Marsh = 10 */ static readonly Marsh: TileQuadType;
		/** TileQuadType.Marsh1 = 11 */ static readonly Marsh1: TileQuadType;
		/** TileQuadType.Road = 12 */ static readonly Road: TileQuadType;
		/** TileQuadType.Road1 = 13 */ static readonly Road1: TileQuadType;
		/** TileQuadType.Ice = 14 */ static readonly Ice: TileQuadType;
		/** TileQuadType.Ice1 = 15 */ static readonly Ice1: TileQuadType;
		/** TileQuadType.Other = 16 */ static readonly Other: TileQuadType;
		/** TileQuadType.Unknown = 255 */ static readonly Unknown: TileQuadType;
	}
}
//#endregion

//#region TileSound
declare namespace HordeClassLibrary.HordeContent.Configs.Tiles.Stuff {
	abstract class TileSound extends System.Enum {
		/** TileSound.NoSound = 0 */ static readonly NoSound: TileSound;
		/** TileSound.Grass = 1 */ static readonly Grass: TileSound;
		/** TileSound.Forest = 2 */ static readonly Forest: TileSound;
		/** TileSound.Water = 3 */ static readonly Water: TileSound;
		/** TileSound.Marsh = 4 */ static readonly Marsh: TileSound;
		/** TileSound.Sand = 5 */ static readonly Sand: TileSound;
		/** TileSound.Mountains = 6 */ static readonly Mountains: TileSound;
	}
}
//#endregion

//#region TileType
declare namespace HordeClassLibrary.HordeContent.Configs.Tiles.Stuff {
	abstract class TileType extends System.Enum {
		/** TileType.Grass = 0 */ static readonly Grass: TileType;
		/** TileType.Forest = 1 */ static readonly Forest: TileType;
		/** TileType.Water = 2 */ static readonly Water: TileType;
		/** TileType.Marsh = 3 */ static readonly Marsh: TileType;
		/** TileType.Sand = 4 */ static readonly Sand: TileType;
		/** TileType.Mounts = 5 */ static readonly Mounts: TileType;
		/** TileType.Road = 6 */ static readonly Road: TileType;
		/** TileType.Ice = 7 */ static readonly Ice: TileType;
		/** TileType.Unknown = -1 */ static readonly Unknown: TileType;
	}
}
//#endregion

//#region TileConfig
declare namespace HordeClassLibrary.HordeContent.Configs.Tiles {
	class TileConfig extends System.Object {

		// Constructors:
		constructor(
			citadelSegmentsSequence: System.Collections.Generic.IList<HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentData> | null
		);

		// Properties:
		readonly Type: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType;
		readonly ChoppedType: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType;
		readonly Slowing: number;
		readonly Payload: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TilePayload;
		readonly Sounds: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileSound;
		readonly LeftUp: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileQuadType;
		readonly RightUp: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileQuadType;
		readonly LeftDown: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileQuadType;
		readonly RightDown: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileQuadType;
		readonly MinimapColor: number;
		readonly IsAutotile: boolean;
		readonly Animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.Tiles.TileAnimation;

		// Methods:
		MaskIsEqualTo(
			other: HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig | null
		): boolean;
	}
}
//#endregion

//#region UnitCommandConfig
declare namespace HordeClassLibrary.HordeContent.Configs {
	class UnitCommandConfig
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Constructors:
		constructor(
			uid: string | null
		);

		// Properties:
		readonly Name: string;
		readonly Tip: string;
		readonly UnitCommand: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		readonly AnimationsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationsCatalog;
		readonly Hotkey: string;
		readonly ShowButton: boolean;
		readonly PreferredPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		readonly AutomaticMode: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommandAutomaticModeParams;
		readonly AutomaticModeAllowed: boolean;

		// Methods:
		static CreateUnitCommandConfig(): HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;
	}
}
//#endregion

//#region BuildingConfig
declare namespace HordeClassLibrary.HordeContent.Configs.Units {
	class BuildingConfig extends System.Object {

		// Constructors:
		constructor();

		// Fields:
		static readonly /* const */ MaxCastleAllowedDistance: number; // = 25

		// Properties:
		readonly EmergePoint: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		readonly EmergePoint2: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		readonly LifeDistance: number | null;
		readonly DestructionDustEffectConfig: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly DestructionBeamsNumber: number;

		// Methods:
		CheckLifeDistance(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			targetRect: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): boolean;

		CheckDistanceToCastle(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			targetRect: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): boolean;

		GetEntranceCellOf(
			u: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		GetEntranceCell(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		static InitFromCitadelCfg(
			citadelCfg: HordeClassLibrary.HordeContent.Configs.Citadel.CitadelUnitConfig | null
		): HordeClassLibrary.HordeContent.Configs.Units.BuildingConfig;
	}
}
//#endregion

//#region AUnitProfessionParams
declare namespace HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams {
	abstract class AUnitProfessionParams extends System.Object {

		// Methods:
		CreateData(): HordeClassLibrary.UnitComponents.ProfessionData.IUnitProfessionData;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region CapturableProfessionParams
declare namespace HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams {
	class CapturableProfessionParams
		extends HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams
	{
		// Constructors:
		constructor();

		// Properties:
		readonly HealthThreshold: number;
		readonly CaptureConditions: HordeClassLibrary.UnitComponents.Enumerations.CaptureCondition;
		readonly DefaultOperatorConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;

		// Methods:
		HasCondition(
			condition: HordeClassLibrary.UnitComponents.Enumerations.CaptureCondition
		): boolean;
	}
}
//#endregion

//#region CompoundProfessionParams
declare namespace HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams {
	class CompoundProfessionParams
		extends HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams
	{
		// Constructors:
		constructor();

		// Properties:
		readonly DefaultPart: HordeClassLibrary.UnitComponents.Enumerations.CompoundPart;
		readonly PartsMap: System.Collections.Generic.Dictionary<HordeClassLibrary.UnitComponents.Enumerations.CompoundPart, HordeClassLibrary.UnitComponents.Enumerations.CompoundPart>;
	}
}
//#endregion

//#region HarvesterProfessionParams
declare namespace HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams {
	class HarvesterProfessionParams
		extends HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams
	{
		// Constructors:
		constructor();

		// Properties:
		readonly GoldBagMaxSize: number;
		readonly MetalBagMaxSize: number;
		readonly LogsMaxCount: number;
		readonly MoveWithBagCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.UnitAnimationsCatalog;
		readonly MoveWithBagPortraitCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationsCatalog;
		readonly MoveWithBeamCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.UnitAnimationsCatalog;
		readonly MoveWithBeamPortraitCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationsCatalog;
		readonly DropBagAnimation: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;
		readonly DropBeamAnimation: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;
		readonly HarvestLumberCommandConfig: HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;
		readonly MineCommandConfig: HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;
		readonly MoveToStockCommandConfig: HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;
		readonly CanMineGoldOrMetal: boolean;
		readonly CanHarvestLumber: boolean;
	}
}
//#endregion

//#region MetalStockProfessionParams
declare namespace HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams {
	class MetalStockProfessionParams
		extends HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region MineProfessionParams
declare namespace HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams {
	class MineProfessionParams
		extends HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region MovableProfessionParams
declare namespace HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams {
	class MovableProfessionParams
		extends HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams
	{
		// Constructors:
		constructor();

		// Properties:
		readonly StepSize: HordeResurrection.Basic.Primitives.PreciseFraction;
	}
}
//#endregion

//#region ReparableProfessionParams
declare namespace HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams {
	class ReparableProfessionParams
		extends HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams
	{
		// Constructors:
		constructor();

		// Properties:
		readonly AllowRepairSelf: boolean;
		readonly RecoverCost: HordeClassLibrary.World.Simple.ResourcesAmount;
		readonly RecoverTime: number;
		readonly RepairCommandConfig: HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;
	}
}
//#endregion

//#region SawmillProfessionParams
declare namespace HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams {
	class SawmillProfessionParams
		extends HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams
	{
		// Constructors:
		constructor();

		// Properties:
		readonly SawTotalTime: number;
		readonly LogsMaxCount: number;
	}
}
//#endregion

//#region UnitProducerProfessionParams
declare namespace HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams {
	class UnitProducerProfessionParams
		extends HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams
	{
		// Constructors:
		constructor();

		// Properties:
		readonly CanProduceList: System.Collections.Generic.List<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>;
		readonly ProductDirection: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection | null;
		readonly ProduceCommandConfig: HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;
		readonly OverrideSetRallyPointCommandConfig: HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;
		readonly IgnoreLifeDistance: boolean;
	}
}
//#endregion

//#region UnitConfig
declare namespace HordeClassLibrary.HordeContent.Configs.Units {
	class UnitConfig
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Constructors:
		constructor(
			uid: string | null,
			description: string | null,
			name: string | null
		);

		// Properties:
		readonly Name: string;
		readonly Hotkey: string;
		readonly PreferredProductListPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly Size: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly MainAnimationsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.UnitAnimationsCatalog;
		readonly InForestAnimationsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.SimpleAnimationsCatalog;
		readonly PortraitCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationsCatalog;
		readonly DecayCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.DecayAnimationsCatalog;
		readonly SoundsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog;
		readonly TintColor: HordeResurrection.Basic.Primitives.HordeColor;
		readonly Weight: number;
		readonly PressureResist: number;
		readonly Flags: HordeClassLibrary.UnitComponents.Enumerations.UnitFlags;
		readonly Specification: HordeClassLibrary.UnitComponents.Enumerations.UnitSpecification;
		readonly Shield: number;
		readonly MaxHealth: number;
		readonly MinHealth: number;
		readonly Sight: number;
		readonly ForestVision: number;
		readonly OrderDistance: number;
		readonly ChaseDistance: number;
		readonly RevengeAttackDistance: number;
		readonly Speeds: System.Collections.Generic.Dictionary<HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType, number>;
		readonly MoveType: HordeClassLibrary.UnitComponents.Enumerations.UnitMoveType;
		readonly ReloadTime: number;
		readonly Rating: number;
		readonly MapLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
		readonly DefaultDrawLayer: HordeClassLibrary.World.Simple.DrawLayer;
		readonly GrayFogBehavior: HordeClassLibrary.UnitComponents.Enumerations.UnitGrayFogBehavior;
		readonly GrayFogObservable: boolean;
		readonly CostResources: HordeClassLibrary.World.Simple.ResourcesAmount;
		readonly ProductionTime: number;
		readonly SalarySlots: number;
		readonly ProducedPeople: number;
		readonly AllowedCommands: System.Collections.Generic.Dictionary<HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand, HordeClassLibrary.HordeContent.Configs.UnitCommandConfig>;
		readonly Force: HordeClassLibrary.HordeContent.Configs.Army.Force;
		readonly BuildingConfig: HordeClassLibrary.HordeContent.Configs.Units.BuildingConfig;
		readonly TechConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitTechConfig;
		readonly ProfessionParams: System.Collections.Generic.Dictionary<HordeClassLibrary.UnitComponents.Enumerations.UnitProfession, HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams>;
		readonly MainArmament: HordeClassLibrary.UnitComponents.BattleSystem.UnitArmament;
		readonly ExtraArmament: System.Collections.Generic.List<HordeClassLibrary.UnitComponents.BattleSystem.UnitArmament>;
		readonly IsBuilding: boolean;
		readonly IsActiveBuilding: boolean;
		readonly HasCompoundFlag: boolean;
		readonly IsUnarmed: boolean;
		readonly HasMainBuildingSpecification: boolean;
		readonly HasBarracksSpecification: boolean;
		readonly HasFactorySpecification: boolean;
		readonly HasStablesSpecification: boolean;
		readonly HasObstacleSpecification: boolean;
		readonly HasDefensiveStructureSpecification: boolean;
		readonly HasSawmillSpecification: boolean;
		readonly HasMetalStockSpecification: boolean;
		readonly HasWorkerSpecification: boolean;
		readonly HasInfantrySpecification: boolean;
		readonly HasArcherSpecification: boolean;
		readonly HasRiderSpecification: boolean;
		readonly HasMechanicSpecification: boolean;
		readonly HasMageSpecification: boolean;
		readonly HasBirdSpecification: boolean;
		readonly ProducersList: System.Collections.Generic.IReadOnlyList<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>;
		readonly GetCommandTypeDelegate: HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetCommandType.DelegateGetCommandType;
		readonly GetOrderWorker: HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetOrder;
		readonly GetOrderDelegate: HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetOrder.DelegateGetOrder;
		readonly GetSpeedAtCellByRealMapDelegate: HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell.DelegateGetSpeedAtCellByRealMap;
		readonly GetSpeedAtCellByKnownMapDelegate: HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell.DelegateGetSpeedAtCellByKnownMap;
		readonly CanBePlacedByRealMapDelegate: HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced.DelegateCanBePlacedByRealMap;
		readonly CanBePlacedByKnownMapDelegate: HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced.DelegateCanBePlacedByKnownMap;
		readonly CancelDelegate: HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCancel.DelegateCancel;
		readonly AnalyzeSituationDelegate: HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerAnalyzeSituation.DelegateAnalyzeSituation;
		readonly EveryTickDelegate: HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick.DelegateProcessTick;
		readonly CitadelId: number;
		readonly CitadelConfig: HordeClassLibrary.HordeContent.Configs.Citadel.CitadelUnitConfig;
		readonly CitadelAnimPhases: System.Collections.Generic.Dictionary<HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState, number>;

		// Methods:
		BelongForce(
			force: HordeClassLibrary.HordeContent.Configs.Army.Force | null
		): boolean;

		HasFlags(
			flags: HordeClassLibrary.UnitComponents.Enumerations.UnitFlags
		): boolean;

		HasOneOfFlags(
			flags: HordeClassLibrary.UnitComponents.Enumerations.UnitFlags
		): boolean;

		HasNotFlags(
			flags: HordeClassLibrary.UnitComponents.Enumerations.UnitFlags
		): boolean;

		HasSpecifications(
			specifications: HordeClassLibrary.UnitComponents.Enumerations.UnitSpecification
		): boolean;

		HasOneOfSpecifications(
			specifications: HordeClassLibrary.UnitComponents.Enumerations.UnitSpecification
		): boolean;

		HasNotSpecifications(
			specifications: HordeClassLibrary.UnitComponents.Enumerations.UnitSpecification
		): boolean;

		IsEnoughResources(
			settlementResources: HordeClassLibrary.World.Settlements.Modules.SettlementResources | null
		): boolean;

		IsDiscovered(
			techTree: HordeClassLibrary.World.Settlements.Modules.SettlementTechTree | null
		): boolean;

		HasProductInList(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		IsProducingUnit(): boolean;

		IsProducingUnit(
			/*out*/ producerParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.UnitProducerProfessionParams | null
		): boolean;

		HasProfession(
			profession: HordeClassLibrary.UnitComponents.Enumerations.UnitProfession
		): boolean;

		GetProfessionParams(
			profession: HordeClassLibrary.UnitComponents.Enumerations.UnitProfession,
			silent?: boolean /* = false */
		): HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams;

		GetProfessionParams<TProfessionParams extends HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams>(
			$TProfessionParams: typeof HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams,
			profession: HordeClassLibrary.UnitComponents.Enumerations.UnitProfession,
			silent?: boolean /* = false */
		): TProfessionParams;

		AddProfession(
			profession: HordeClassLibrary.UnitComponents.Enumerations.UnitProfession,
			profParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams | null
		): void;

		CanBePlacedByRealMap(
			scn: HordeClassLibrary.World.ScenaComponents.Scena | null,
			x: number,
			y: number,
			checkForTerritory?: boolean /* = false */,
			considerUnits?: boolean /* = true */
		): boolean;

		CanBePlacedByRealMap(
			scn: HordeClassLibrary.World.ScenaComponents.Scena | null,
			x: number,
			y: number,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		CanBePlacedByKnownMap(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			x: number,
			y: number,
			checkForTerritory?: boolean /* = false */,
			considerUnits?: boolean /* = true */
		): boolean;

		CanBePlacedByKnownMap(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			x: number,
			y: number,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		): boolean;

		CanBeBuiltByRealMapAtExt(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			checkDistances: boolean
		): HordeClassLibrary.UnitComponents.Enumerations.CanNotBuildReason;

		CanBeBuiltByRealMapAt(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			checkDistances: boolean
		): boolean;

		CanBeBuiltByKnownMapAtExt(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			checkDistances: boolean
		): HordeClassLibrary.UnitComponents.Enumerations.CanNotBuildReason;

		AddEveryTickWorker(
			worker: HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick | null
		): void;

		GetStateDelegate(
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitState
		): HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon.DelegateWork;
	}
}
//#endregion

//#region UnitConfigDefaultValues
declare namespace HordeClassLibrary.HordeContent.Configs.Units {
	abstract class UnitConfigDefaultValues {

		// Fields:
		static readonly /* const */ CommonForestSight: number; // = 2

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UnitTechConfig
declare namespace HordeClassLibrary.HordeContent.Configs.Units {
	class UnitTechConfig extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly Requirements: System.Collections.Generic.List<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>;
	}
}
//#endregion

//#region AViewResourcesCatalog
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract {
	abstract class AViewResourcesCatalog
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Properties:
		readonly InternalEditorPath: string;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ISectionItem
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.CatalogSections {
	interface ISectionItem {

		// Properties:
		readonly Key: any;
	}
	/** TypeScript type stub for .Net interface */
	abstract class ISectionItem {}
}
//#endregion

//#region ACatalogsFactory
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.Factory {
	abstract class ACatalogsFactory
		extends HordeClassLibrary.HordeContent.Configs.ConfigFactories.AConfigsFactory
	{
		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AllCatalogFactories
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs {
	abstract class AllCatalogFactories {

		// Properties:
		static readonly AnimationCatalogFactories: System.Collections.Generic.IReadOnlyList<HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.Factory.ACatalogsFactory>;
		static readonly SoundCatalogFactories: System.Collections.Generic.IReadOnlyList<HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.Factory.ACatalogsFactory>;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BuildingSoundsCatalogFactory
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.Factory {
	class BuildingSoundsCatalogFactory
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.Factory.ACatalogsFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region SimpleSoundsCatalogFactory
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.Factory {
	class SimpleSoundsCatalogFactory
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.Factory.ACatalogsFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region UnitSoundsCatalogFactory
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.Factory {
	class UnitSoundsCatalogFactory
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.Factory.ACatalogsFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BuildingSoundSections
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums {
	abstract class BuildingSoundSections extends System.Enum {
		/** BuildingSoundSections.Building = 0 */ static readonly Building: BuildingSoundSections;
		/** BuildingSoundSections.Destruction = 1 */ static readonly Destruction: BuildingSoundSections;
	}
}
//#endregion

//#region ChatSoundSections
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums {
	abstract class ChatSoundSections extends System.Enum {
		/** ChatSoundSections.Metronome = 0 */ static readonly Metronome: ChatSoundSections;
		/** ChatSoundSections.Attention = 1 */ static readonly Attention: ChatSoundSections;
		/** ChatSoundSections.Message = 2 */ static readonly Message: ChatSoundSections;
	}
}
//#endregion

//#region UncategorizedSoundSections
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums {
	abstract class UncategorizedSoundSections extends System.Enum {
		/** UncategorizedSoundSections.BuildingNoise = 0 */ static readonly BuildingNoise: UncategorizedSoundSections;
	}
}
//#endregion

//#region UnitSoundSections
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums {
	abstract class UnitSoundSections extends System.Enum {
		/** UnitSoundSections.Scream = 0 */ static readonly Scream: UnitSoundSections;
		/** UnitSoundSections.Death = 1 */ static readonly Death: UnitSoundSections;
	}
}
//#endregion

//#region UnitTraceSoundSections
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums {
	abstract class UnitTraceSoundSections extends System.Enum {
		/** UnitTraceSoundSections.Common = 0 */ static readonly Common: UnitTraceSoundSections;
	}
}
//#endregion

//#region SoundsCatalog
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio {
	class SoundsCatalog
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.AViewResourcesCatalog
	{
		// Constructors:
		constructor(
			creationParams: HordeClassLibrary.HordeContent.Configs.ConfigFactories.ConfigCreationParams | null
		);

		// Methods:
		CategoriesCount(): number;

		VariationsCount(
			category: string | null
		): number;

		GetRandomVariation(
			randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer | null,
			category: string | null
		): HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView;

		GetSound(
			category: string | null,
			variation: number
		): HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView;

		GetSounds(
			category: string | null
		): System.Collections.Generic.IEnumerable<HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView>;

		GetRandom(
			randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer | null
		): HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView;

		GetFirst(): HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView;

		AddItem(
			category: string | null,
			sound: HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView | null
		): void;

		RemoveItem(
			sound: HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView | null
		): void;
	}
}
//#endregion

//#region BaseAnimationsCatalog
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics {
	abstract class BaseAnimationsCatalog
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.AViewResourcesCatalog
	{
		// Methods:
		GetFirst(): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ButtonAnimationsCatalogFactory
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Factory {
	class ButtonAnimationsCatalogFactory
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.Factory.ACatalogsFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region SimpleAnimationsCatalogFactory
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Factory {
	class SimpleAnimationsCatalogFactory
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.Factory.ACatalogsFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BackgroundAnimationsCatalog
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization {
	class BackgroundAnimationsCatalog
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.BaseAnimationsCatalog
	{
		// Constructors:
		constructor(
			creationParams: HordeClassLibrary.HordeContent.Configs.ConfigFactories.ConfigCreationParams | null
		);

		// Methods:
		GetAnimation(
			resolution: string | null
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		AddItem(
			resolution: string | null,
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;

		RemoveItem(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;
	}
}
//#endregion

//#region BulletAnimationsCatalog
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization {
	class BulletAnimationsCatalog
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.BaseAnimationsCatalog
	{
		// Constructors:
		constructor(
			creationParams: HordeClassLibrary.HordeContent.Configs.ConfigFactories.ConfigCreationParams | null
		);

		// Methods:
		DirectionsCount(): number;

		VariationsCount(
			direction: number
		): number;

		GetRandomVariation(
			randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer | null,
			direction: number
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		GetAnimation(
			direction: number,
			variation: number
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		AddItem(
			direction: number,
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;

		RemoveItem(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;
	}
}
//#endregion

//#region ButtonAnimationState
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization {
	abstract class ButtonAnimationState extends System.Enum {
		/** ButtonAnimationState.Regular = 0 */ static readonly Regular: ButtonAnimationState;
		/** ButtonAnimationState.Focused = 1 */ static readonly Focused: ButtonAnimationState;
		/** ButtonAnimationState.Pressed = 2 */ static readonly Pressed: ButtonAnimationState;
		/** ButtonAnimationState.Disabled = 3 */ static readonly Disabled: ButtonAnimationState;
	}
}
//#endregion

//#region ButtonAnimationsCatalog
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization {
	class ButtonAnimationsCatalog
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.BaseAnimationsCatalog
	{
		// Constructors:
		constructor(
			creationParams: HordeClassLibrary.HordeContent.Configs.ConfigFactories.ConfigCreationParams | null
		);

		// Methods:
		GetAnimation(
			state: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationState
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		AddItem(
			state: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationState,
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;

		RemoveItem(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;
	}
}
//#endregion

//#region DecayAnimationsCatalog
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization {
	class DecayAnimationsCatalog
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.BaseAnimationsCatalog
	{
		// Constructors:
		constructor(
			creationParams: HordeClassLibrary.HordeContent.Configs.ConfigFactories.ConfigCreationParams | null
		);

		// Methods:
		DirectionsCount(): number;

		VariationsCount(
			deathType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection
		): number;

		IsAnimationExist(
			deathType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection
		): boolean;

		GetRandomVariation(
			randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer | null,
			deathType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		GetAnimation(
			deathType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			variation: number
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		AddItem(
			deathType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;

		RemoveItem(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;
	}
}
//#endregion

//#region FontCatalog
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization {
	class FontCatalog
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.BaseAnimationsCatalog
	{
		// Constructors:
		constructor(
			creationParams: HordeClassLibrary.HordeContent.Configs.ConfigFactories.ConfigCreationParams | null
		);

		// Methods:
		GetPagesCount(): number;

		GetPageImage(
			pageNumber: number
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		AddItem(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;

		RemoveItem(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;
	}
}
//#endregion

//#region SimpleAnimationsCatalog
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization {
	class SimpleAnimationsCatalog
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.BaseAnimationsCatalog
	{
		// Constructors:
		constructor(
			creationParams: HordeClassLibrary.HordeContent.Configs.ConfigFactories.ConfigCreationParams | null
		);

		// Methods:
		VariationsCount(): number;

		GetRandomVariation(
			randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer | null
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		GetAnimation(
			variation: number
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		AddItem(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;

		RemoveItem(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;
	}
}
//#endregion

//#region UnitAnimationCatalogKeyProvider
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization {
	class UnitAnimationCatalogKeyProvider
		extends System.Object /* but real BaseType out of API */
	{
		// Constructors:
		constructor();

		// Properties:
		State: string;
		Direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection;
		Stage: number;
		Variation: number;
		readonly IsChanged: boolean;

		// Methods:
		Snapshot(): void;
	}
}
//#endregion

//#region UnitAnimationsCatalog
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization {
	class UnitAnimationsCatalog
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.BaseAnimationsCatalog
	{
		// Constructors:
		constructor(
			creationParams: HordeClassLibrary.HordeContent.Configs.ConfigFactories.ConfigCreationParams | null
		);

		// Methods:
		AddItemsToCatalog(
			catalogItems: System.Collections.Generic.Dictionary<HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.UnitAnimationCatalogKeyProvider, HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView> | null
		): void;

		StagesCount(
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection
		): number;

		StagesCount(
			state: string | null,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection
		): number;

		VariationsCount(
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number
		): number;

		VariationsCount(
			state: string | null,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number
		): number;

		IsAnimationExist(
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number
		): boolean;

		IsAnimationExist(
			state: string | null,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number
		): boolean;

		GetRandomVariation(
			randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer | null,
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		GetRandomVariation(
			randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer | null,
			state: string | null,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		GetAnimation(
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number,
			variation: number
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		GetAnimation(
			state: string | null,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number,
			variation: number
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		AddItem(
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number,
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;

		AddItem(
			state: string | null,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number,
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;

		RemoveItem(
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number,
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;

		RemoveItem(
			state: string | null,
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection,
			stage: number,
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;
	}
}
//#endregion

//#region AExternalResourceInfo
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Abstract {
	abstract class AExternalResourceInfo
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Properties:
		readonly MetaInformation: System.Collections.Generic.Dictionary<HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Abstract.MetaInformationKeys, string>;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region MetaInformationKeys
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Abstract {
	abstract class MetaInformationKeys extends System.Enum {
		/** MetaInformationKeys.PathToCitadelFile = 0 */ static readonly PathToCitadelFile: MetaInformationKeys;
		/** MetaInformationKeys.Extra = 1 */ static readonly Extra: MetaInformationKeys;
	}
}
//#endregion

//#region SoundCategory
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio {
	abstract class SoundCategory extends System.Enum {
		/** SoundCategory.Unknown = 0 */ static readonly Unknown: SoundCategory;
		/** SoundCategory.Interface = 1 */ static readonly Interface: SoundCategory;
		/** SoundCategory.Background = 2 */ static readonly Background: SoundCategory;
		/** SoundCategory.Music = 3 */ static readonly Music: SoundCategory;
		/** SoundCategory.Speak = 4 */ static readonly Speak: SoundCategory;
		/** SoundCategory.Environment = 5 */ static readonly Environment: SoundCategory;
		/** SoundCategory.Buildings = 6 */ static readonly Buildings: SoundCategory;
		/** SoundCategory.BuildingsNoise = 7 */ static readonly BuildingsNoise: SoundCategory;
		/** SoundCategory.MeleHit = 8 */ static readonly MeleHit: SoundCategory;
		/** SoundCategory.RangeShot = 9 */ static readonly RangeShot: SoundCategory;
		/** SoundCategory.RangeHit = 10 */ static readonly RangeHit: SoundCategory;
		/** SoundCategory.Magic = 11 */ static readonly Magic: SoundCategory;
		/** SoundCategory.MagicHit = 12 */ static readonly MagicHit: SoundCategory;
		/** SoundCategory.FireBurn = 13 */ static readonly FireBurn: SoundCategory;
		/** SoundCategory.FireIncrease = 14 */ static readonly FireIncrease: SoundCategory;
		/** SoundCategory.Explosion = 15 */ static readonly Explosion: SoundCategory;
		/** SoundCategory.Destruction = 16 */ static readonly Destruction: SoundCategory;
		/** SoundCategory.Steps = 17 */ static readonly Steps: SoundCategory;
		/** SoundCategory.Scream = 18 */ static readonly Scream: SoundCategory;
		/** SoundCategory.Other = 19 */ static readonly Other: SoundCategory;
	}
}
//#endregion

//#region SoundResourceInfo
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio {
	class SoundResourceInfo
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Abstract.AExternalResourceInfo
	{
		// Constructors:
		constructor(
			uid: string | null,
			description: string | null
		);

		// Properties:
		readonly SampleRate: number;
		readonly Channels: number;
		readonly IsSpatialized: boolean;
		readonly VolumeFactor: number;
		readonly XenkoParams: HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.XenkoAudioParams;
		readonly Category: HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.SoundCategory;
		readonly SubCategory: string;
		readonly TotalLength: string;
	}
}
//#endregion

//#region XenkoAudioParams
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio {
	class XenkoAudioParams extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly NumberOfPackets: number;
		readonly MaxPacketLength: number;
		readonly SamplesPerFrame: number;
	}
}
//#endregion

//#region AnimationAtlas
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics {
	class AnimationAtlas extends System.Object {

		// Constructors:
		constructor(
			items: System.Collections.Generic.IEnumerable<HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlasItem> | null,
			sourcePath: string | null
		);

		// Properties:
		readonly Items: System.Collections.Generic.IReadOnlyList<HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlasItem>;
		readonly SourceFilePath: string;

		// Methods:
		AddItem(
			itemData: HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlasItem | null
		): void;

		AddItemsRange(
			itemsDataRange: System.Collections.Generic.IEnumerable<HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlasItem> | null
		): void;

		Clear(): void;
	}
}
//#endregion

//#region AnimationAtlasItem
declare namespace HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics {
	class AnimationAtlasItem
		extends HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Abstract.AExternalResourceInfo
	{
		// Constructors:
		constructor(
			uid: string | null,
			description: string | null,
			location: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			frameSize: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			framesCount: number,
			maskColors: HordeResurrection.Basic.Primitives.HordeColor[] | null,
			script: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScript | null
		);

		// Properties:
		readonly Parent: HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlas;
		readonly Location: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly FrameSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly FrameRenderSize: HordeResurrection.Basic.Primitives.Geometry.Size2D | null;
		readonly Bias: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly FramesCount: number;
		readonly MaskColors: HordeResurrection.Basic.Primitives.HordeColor[];
		readonly Script: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScript;

		// Methods:
		SetupParent(
			atlas: HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlas | null
		): void;
	}
}
//#endregion

//#region GravityAccelerationMode
declare namespace HordeClassLibrary.HordeContent.Configs.VisualEffects {
	abstract class GravityAccelerationMode extends System.Enum {
		/** GravityAccelerationMode.None = 0 */ static readonly None: GravityAccelerationMode;
		/** GravityAccelerationMode.Normal = 1 */ static readonly Normal: GravityAccelerationMode;
		/** GravityAccelerationMode.UseAirSlowdown = 2 */ static readonly UseAirSlowdown: GravityAccelerationMode;
	}
}
//#endregion

//#region AVisualEffectSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams {
	abstract class AVisualEffectSpecialParams extends System.Object {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BulletAnimEffectSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams {
	class BulletAnimEffectSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.AVisualEffectSpecialParams
	{
		// Constructors:
		constructor(
			animationsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog | null
		);

		// Properties:
		readonly AnimationsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;
	}
}
//#endregion

//#region MovingEffectSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams {
	class MovingEffectSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.SingleAnimEffectSpecialParams
	{
		// Constructors:
		constructor(
			animationsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.SimpleAnimationsCatalog | null,
			maxDispersionDistance: number,
			movingSpeed: HordeResurrection.Basic.Primitives.PreciseFraction
		);

		// Properties:
		readonly MaxDispersionDistance: number;
		readonly MovingSpeed: HordeResurrection.Basic.Primitives.PreciseFraction;
	}
}
//#endregion

//#region SingleAnimEffectSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams {
	class SingleAnimEffectSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.AVisualEffectSpecialParams
	{
		// Constructors:
		constructor(
			animationsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.SimpleAnimationsCatalog | null
		);

		// Properties:
		readonly AnimationsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.SimpleAnimationsCatalog;
	}
}
//#endregion

//#region SingleFrameEffectSpecialParams
declare namespace HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams {
	class SingleFrameEffectSpecialParams
		extends HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.AVisualEffectSpecialParams
	{
		// Constructors:
		constructor(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null,
			timeToShow: number
		);

		// Properties:
		readonly Animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;
		readonly TimeToShow: number;
	}
}
//#endregion

//#region VisualEffectConfig
declare namespace HordeClassLibrary.HordeContent.Configs.VisualEffects {
	class VisualEffectConfig
		extends HordeClassLibrary.HordeContent.Configs.AConfig
	{
		// Properties:
		readonly IsExposuresByWind: boolean;
		readonly GravityMode: HordeClassLibrary.HordeContent.Configs.VisualEffects.GravityAccelerationMode;
		readonly SpecialParams: HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.AVisualEffectSpecialParams;
		readonly InitialZ: number;
		readonly InitialZSpeed: number;
		readonly InitialDrawLayer: HordeClassLibrary.World.Simple.DrawLayer;
		readonly FramesSwitchDirection: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.FramesSwitcher.SwitchDirection;
		readonly LoopAnimation: boolean;
		readonly StartFrameNumber: number | null;

		// Methods:
		CreateInstance(
			context: HordeClassLibrary.World.Context.BattleContext | null,
			center: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect;

		CreateInstance(
			context: HordeClassLibrary.World.Context.BattleContext | null,
			creationParams: HordeClassLibrary.World.Objects.VisualEffects.CreationParameters.AnimBasedVisualEffectCreationParams | null
		): HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect;

		static CreateVisualEffectConfig(): HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
	}
}
//#endregion

//#region ContentPack
declare namespace HordeClassLibrary.HordeContent.ContentPacks {
	class ContentPack extends System.Object {

		// Properties:
		readonly Info: HordeClassLibrary.HordeContent.ContentPacks.ContentPackInfo;
		readonly Stamp: HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp;
		readonly RootDir: string;

		// Methods:
		IsMergedWith(
			contentPackUid: string | null
		): boolean;

		MergeWith(
			contentPack: HordeClassLibrary.HordeContent.ContentPacks.ContentPack | null
		): void;

		FinalSetup(): void;

		GetBook<TBook extends HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBookAny>(
			$TBook: typeof HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBookAny
		): TBook;
	}
}
//#endregion

//#region ContentPackFromZip.GetInfoResult
declare namespace HordeClassLibrary.HordeContent.ContentPacks.ContentPackFromZip {
	abstract class GetInfoResult extends System.Enum {
		/** GetInfoResult.Ok = 0 */ static readonly Ok: GetInfoResult;
		/** GetInfoResult.WrongInputFile = 1 */ static readonly WrongInputFile: GetInfoResult;
		/** GetInfoResult.InfoFileNotFound = 2 */ static readonly InfoFileNotFound: GetInfoResult;
	}
}
//#endregion

//#region ContentPackFromZip.InstallResult
declare namespace HordeClassLibrary.HordeContent.ContentPacks.ContentPackFromZip {
	abstract class InstallResult extends System.Enum {
		/** InstallResult.Ok = 0 */ static readonly Ok: InstallResult;
		/** InstallResult.WrongUid = 1 */ static readonly WrongUid: InstallResult;
		/** InstallResult.UnknownError = 2 */ static readonly UnknownError: InstallResult;
	}
}
//#endregion

//#region ContentPackInfo
declare namespace HordeClassLibrary.HordeContent.ContentPacks {
	class ContentPackInfo extends System.Object {

		// Fields:
		static readonly /* const */ CorePackUid: string; // = "#ContentPack_Core"

		// Properties:
		readonly Uid: string;
		readonly ShortUid: string;
		readonly DisplayName: string;
		readonly Description: string;
		readonly Authors: string;
		readonly BuiltIn: boolean;
		readonly StandAlone: boolean;
		readonly IsCore: boolean;
		readonly GameVersion: HordeClassLibrary.Basic.GameVersion.HordeVersion;
		readonly ModVersion: HordeClassLibrary.Basic.GameVersion.HordeVersion;
		readonly RootDir: string;
		readonly RootDirRelative: string;
		readonly VirtualScriptsDir: string;
		readonly DisplayDescription: string;

		// Methods:
		CreateNewInstance(): HordeClassLibrary.HordeContent.ContentPacks.ContentPackInfo;

		static MakeCoreContentPackInfo(): HordeClassLibrary.HordeContent.ContentPacks.ContentPackInfo;

		static TryMakeContentPackInfo(
			rootDir: string | null,
			contentPackDir: string | null,
			/*out*/ contentPackInfo: HordeClassLibrary.HordeContent.ContentPacks.ContentPackInfo | null
		): boolean;
	}
}
//#endregion

//#region ContentPacksRegistry.EnableResultStatus
declare namespace HordeClassLibrary.HordeContent.ContentPacks.Loader.ContentPacksRegistry {
	abstract class EnableResultStatus extends System.Enum {
		/** EnableResultStatus.Success = 0 */ static readonly Success: EnableResultStatus;
		/** EnableResultStatus.Conflict = 1 */ static readonly Conflict: EnableResultStatus;
		/** EnableResultStatus.UnknownFailure = 2 */ static readonly UnknownFailure: EnableResultStatus;
	}
}
//#endregion

//#region ContentPackStatus
declare namespace HordeClassLibrary.HordeContent.ContentPacks.Loader {
	abstract class ContentPackStatus extends System.Enum {
		/** ContentPackStatus.Unknown = 0 */ static readonly Unknown: ContentPackStatus;
		/** ContentPackStatus.Enabled = 1 */ static readonly Enabled: ContentPackStatus;
		/** ContentPackStatus.Disabled = 2 */ static readonly Disabled: ContentPackStatus;
		/** ContentPackStatus.MissDependency = 3 */ static readonly MissDependency: ContentPackStatus;
		/** ContentPackStatus.Error = 4 */ static readonly Error: ContentPackStatus;
	}
}
//#endregion

//#region ContentHashBuilder
declare namespace HordeClassLibrary.HordeContent.ContentPacks.Stamp {
	class ContentHashBuilder extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly Hash: string;

		// Methods:
		UpdateHashByFile(
			filePath: string | null
		): void;

		UpdateHashByString(
			str: string | null
		): void;

		FinalizeHash(): void;
	}
}
//#endregion

//#region ContentStamp
declare namespace HordeClassLibrary.HordeContent.ContentPacks.Stamp {
	class ContentStamp extends System.Object {

		// Constructors:
		constructor(
			uid: string | null,
			hash: string | null,
			version: string | null
		);

		// Properties:
		readonly Uid: string;
		readonly Hash: string;
		readonly Version: string;
	}
}
//#endregion

//#region ContentStampsCollection
declare namespace HordeClassLibrary.HordeContent.ContentPacks.Stamp {
	class ContentStampsCollection extends System.Object {

		// Constructors:
		constructor(
			generalHash: string | null,
			stamps: System.Collections.Generic.IEnumerable<HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp> | null
		);

		// Properties:
		readonly GeneralHash: string;
		readonly Stamps: System.Collections.Generic.IEnumerable<HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp>;

		// Methods:
		Contains(
			uid: string | null
		): boolean;

		TryGetByUid(
			uid: string | null,
			/*out*/ stamp: HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp | null
		): boolean;

		CompareTo(
			otherStamps: HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStampsCollection | null
		): HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStampsCollectionDiff;
	}
}
//#endregion

//#region ContentStampsCollectionDiff
declare namespace HordeClassLibrary.HordeContent.ContentPacks.Stamp {
	class ContentStampsCollectionDiff extends System.Object {

		// Fields:
		static readonly NoDiff: HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStampsCollectionDiff;
		static readonly NullRef: HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStampsCollectionDiff;

		// Properties:
		readonly MissingStamps: System.Collections.Generic.IEnumerable<HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp>;
		readonly DifferentStamps: System.Collections.Generic.IEnumerable<HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp>;
		readonly ExcessStamps: System.Collections.Generic.IEnumerable<HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp>;
		readonly Differences: number;
		readonly HasChanges: boolean;

		// Methods:
		AddMissingStamp(
			stamp: HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp | null
		): void;

		AddDifferentStamp(
			stamp: HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp | null
		): void;

		AddExcessStamp(
			stamp: HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp | null
		): void;

		ComposeDiffString(): string;
	}
}
//#endregion

//#region EffectFactoriesLibrary
declare namespace HordeClassLibrary.HordeContent {
	abstract class EffectFactoriesLibrary {

		// Methods:
		static GetFactoryByType<T extends HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory>(
			$T: typeof HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory
		): T;

		static Initialize(): void;

		static GetWorker(
			workerName: string | null
		): HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory;

		static GetWorkerFunc(
			workerName: string | null
		): HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory.CreateInstanceDelegate;

		static GetAllWorkers(): System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory>;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ConfigPatchVariant
declare namespace HordeClassLibrary.HordeContent.PatchSystem {
	abstract class ConfigPatchVariant extends System.Enum {
		/** ConfigPatchVariant.None = 0 */ static readonly None: ConfigPatchVariant;
		/** ConfigPatchVariant.PrimaryPatch = 1 */ static readonly PrimaryPatch: ConfigPatchVariant;
		/** ConfigPatchVariant.SecondaryPatch = 2 */ static readonly SecondaryPatch: ConfigPatchVariant;
	}
}
//#endregion

//#region UnitWorkersLibrary
declare namespace HordeClassLibrary.HordeContent {
	abstract class UnitWorkersLibrary {

		// Methods:
		static Initialize(): void;

		static CreateWorker(
			workerName: string | null
		): HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorker;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AViewResource
declare namespace HordeClassLibrary.HordeContent.ViewResources.Abstract {
	abstract class AViewResource extends System.Object {

		// Properties:
		readonly Uid: string;
		readonly Description: string;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region InputItemBuilderSounds
declare namespace HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums {
	abstract class InputItemBuilderSounds extends System.Enum {
		/** InputItemBuilderSounds.MouseClick = 0 */ static readonly MouseClick: InputItemBuilderSounds;
		/** InputItemBuilderSounds.OrderCanceled = 1 */ static readonly OrderCanceled: InputItemBuilderSounds;
	}
}
//#endregion

//#region InputItemSounds
declare namespace HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums {
	abstract class InputItemSounds extends System.Enum {
		/** InputItemSounds.Canceled = 0 */ static readonly Canceled: InputItemSounds;
	}
}
//#endregion

//#region InterfaceFromSettlementSounds
declare namespace HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums {
	abstract class InterfaceFromSettlementSounds extends System.Enum {
		/** InterfaceFromSettlementSounds.OrderCanceled = 0 */ static readonly OrderCanceled: InterfaceFromSettlementSounds;
	}
}
//#endregion

//#region SoundRegistryKey
declare namespace HordeClassLibrary.HordeContent.ViewResources.Audio {
	class /* struct */ SoundRegistryKey extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.HordeContent.ViewResources.Audio.SoundRegistryKey>
	{
		// Constructors:
		constructor(
			Category: HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.SoundCategory,
			SubCategory: string | null
		);

		// Properties:
		Category: HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.SoundCategory;
		SubCategory: string;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SoundView
declare namespace HordeClassLibrary.HordeContent.ViewResources.Audio {
	class SoundView
		extends HordeClassLibrary.HordeContent.ViewResources.Abstract.AViewResource
	{
		// Properties:
		readonly RegistryKey: HordeClassLibrary.HordeContent.ViewResources.Audio.SoundRegistryKey;
	}
}
//#endregion

//#region AnimationView
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics {
	class AnimationView
		extends HordeClassLibrary.HordeContent.ViewResources.Abstract.AViewResource
	{
		// Constructors:
		constructor(
			animationAtlasItem: HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlasItem | null
		);

		// Properties:
		readonly FramesCount: number;
		readonly Script: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScript;
		readonly SourceAtlasItem: HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlasItem;
	}
}
//#endregion

//#region ImageFrameDefinition
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.ExternalLoading {
	class ImageFrameDefinition extends System.Object {

		// Constructors:
		constructor(
			location: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			sourceSize: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			renderSize?: HordeResurrection.Basic.Primitives.Geometry.Size2D | null /* = null */
		);

		// Properties:
		readonly Location: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly SourceSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly RenderSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		/* writeonly */ Bias: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		RenderBias: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly ImageMaskPixels: HordeClassLibrary.HordeContent.ViewResources.Graphics.ImageMaskPixel[];

		// Methods:
		SetImagePixelMask(
			imageMask: HordeClassLibrary.HordeContent.ViewResources.Graphics.ImageMaskPixel[] | null
		): void;
	}
}
//#endregion

//#region ImageMaskPixel
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics {
	class /* struct */ ImageMaskPixel extends System.ValueType {

		// Constructors:
		constructor();

		constructor(
			x: number,
			y: number,
			colorNumber: number
		);

		// Properties:
		X: number;
		Y: number;
		ColorNumber: number;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region Animator
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic {
	class Animator extends System.Object {

		// Constructors:
		constructor(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null,
			looped: boolean
		);

		constructor(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		);

		// Properties:
		readonly Animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;
		readonly CurrentAnimFrame: number;
		readonly IsAnimationCompleted: boolean;

		// Methods:
		GetCurrentRenderData(): HordeClassLibrary.HordeContent.ViewResources.Graphics.RenderData;

		Reinit(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;

		static ReinitOrCreateNew(
			current: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Animator | null,
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Animator;

		SetFrame(
			newFrame: number
		): boolean;

		SetFramesSwitchDirection(
			switchDirection: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.FramesSwitcher.SwitchDirection,
			looped: boolean
		): void;

		Next(): void;

		HasTask(
			tasks: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptTasks
		): boolean;

		HasCompletedTask(
			tasks: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptTasks
		): boolean;

		TryGetTaskParameters<TParameters extends HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.AnimatorScriptTaskParametersBase>(
			$TParameters: typeof HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.AnimatorScriptTaskParametersBase,
			tasks: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptTasks,
			/*out*/ taskParameters: TParameters | null
		): boolean;

		CompleteTask(
			tasks: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptTasks
		): void;
	}
}
//#endregion

//#region AnimatorScript
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic {
	class AnimatorScript extends System.Object {

		// Constructors:
		constructor(
			defaultBlock: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScriptBlock | null
		);

		// Properties:
		readonly TaskBlocks: System.Collections.Generic.Dictionary<number, HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScriptBlock>;
		readonly DefaultBlock: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScriptBlock;

		// Methods:
		GetBlockByPosition(
			blockPosition: number
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScriptBlock;

		GetRawBlocksDict(): System.Collections.Generic.Dictionary<number, HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScriptBlock>;
	}
}
//#endregion

//#region AnimatorScriptBlock
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic {
	class AnimatorScriptBlock extends System.Object {

		// Constructors:
		constructor(
			blockTime: number
		);

		// Properties:
		readonly TaskFlags: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptTasks;
		readonly BlockTime: number;

		// Methods:
		TryGetTaskParameters<TParameters extends HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.AnimatorScriptTaskParametersBase>(
			$TParameters: typeof HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.AnimatorScriptTaskParametersBase,
			tasks: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptTasks,
			/*out*/ taskParameters: TParameters | null
		): boolean;

		AddTask(
			task: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptTasks,
			parameters: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.AnimatorScriptTaskParametersBase | null
		): void;

		RemoveTask(
			task: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptTasks
		): void;
	}
}
//#endregion

//#region AnimatorState
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic {
	abstract class AnimatorState extends System.Enum {
		/** AnimatorState.Initial = 0 */ static readonly Initial: AnimatorState;
		/** AnimatorState.ReadyForNextBlock = 1 */ static readonly ReadyForNextBlock: AnimatorState;
		/** AnimatorState.Wait = 2 */ static readonly Wait: AnimatorState;
		/** AnimatorState.ScriptCompleted = 3 */ static readonly ScriptCompleted: AnimatorState;
	}
}
//#endregion

//#region FramesSwitcher
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic {
	class FramesSwitcher extends System.Object {

		// Constructors:
		constructor(
			framesCount: number,
			looped: boolean
		);

		// Properties:
		readonly FramesCount: number;
		CurrentDirection: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.FramesSwitcher.SwitchDirection;
		Looped: boolean;
		readonly CurrentFrame: number;

		// Methods:
		Reinit(
			framesCount: number
		): void;

		NextFrame(): void;

		SetFrame(
			newFrameNumber: number
		): boolean;

		SetFirstFrame(): void;

		IsFinalFrame(
			ignoreLoopedFlag?: boolean /* = false */
		): boolean;
	}
}
//#endregion

//#region FramesSwitcher.SwitchDirection
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.FramesSwitcher {
	abstract class SwitchDirection extends System.Enum {
		/** SwitchDirection.Forward = 0 */ static readonly Forward: SwitchDirection;
		/** SwitchDirection.Inverse = 1 */ static readonly Inverse: SwitchDirection;
	}
}
//#endregion

//#region AnimatorScriptFlowTasks
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks {
	abstract class AnimatorScriptFlowTasks extends System.EnumFlags {
		/** AnimatorScriptFlowTasks.None = 0 */ static readonly None: AnimatorScriptFlowTasks;
		/** AnimatorScriptFlowTasks.Reserved01 = 1 */ static readonly Reserved01: AnimatorScriptFlowTasks;
		/** AnimatorScriptFlowTasks.JumpToFirstAnimationFrame = 2 */ static readonly JumpToFirstAnimationFrame: AnimatorScriptFlowTasks;
		/** AnimatorScriptFlowTasks.JumpToLastAnimationFrame = 4 */ static readonly JumpToLastAnimationFrame: AnimatorScriptFlowTasks;
		/** AnimatorScriptFlowTasks.SetScriptFlowDirection = 8 */ static readonly SetScriptFlowDirection: AnimatorScriptFlowTasks;
	}
}
//#endregion

//#region AnimatorScriptTasks
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks {
	abstract class AnimatorScriptTasks extends System.EnumFlags {
		/** AnimatorScriptTasks.NoneTasks = 0 */ static readonly NoneTasks: AnimatorScriptTasks;
		/** AnimatorScriptTasks.Action = 1 */ static readonly Action: AnimatorScriptTasks;
		/** AnimatorScriptTasks.PlaySound = 2 */ static readonly PlaySound: AnimatorScriptTasks;
		/** AnimatorScriptTasks.Hit = 4 */ static readonly Hit: AnimatorScriptTasks;
		/** AnimatorScriptTasks.BuildingFlagVisible = 8 */ static readonly BuildingFlagVisible: AnimatorScriptTasks;
		/** AnimatorScriptTasks.ProduceSmoke = 16 */ static readonly ProduceSmoke: AnimatorScriptTasks;
		/** AnimatorScriptTasks.ProduceNoise = 32 */ static readonly ProduceNoise: AnimatorScriptTasks;
		/** AnimatorScriptTasks.ProduceTrace = 64 */ static readonly ProduceTrace: AnimatorScriptTasks;
		/** AnimatorScriptTasks.Walkable = 128 */ static readonly Walkable: AnimatorScriptTasks;
	}
}
//#endregion

//#region AnimatorScriptTaskParametersBase
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters {
	abstract class AnimatorScriptTaskParametersBase extends System.Object {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BuildingFlagTaskParameters
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters {
	class BuildingFlagTaskParameters
		extends HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.AnimatorScriptTaskParametersBase
	{
		// Constructors:
		constructor(
			flagLocations: System.Collections.Generic.List<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		);

		// Properties:
		readonly FlagLocations: System.Collections.Generic.List<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
	}
}
//#endregion

//#region ProduceNoiseTaskParameters
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters {
	class ProduceNoiseTaskParameters
		extends HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.AnimatorScriptTaskParametersBase
	{
		// Properties:
		readonly NoiseSoundsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog;
		readonly TicksPeriod: number;
		readonly Probability: number;
	}
}
//#endregion

//#region ProduceSmokeTaskParameters
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters {
	class ProduceSmokeTaskParameters
		extends HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.AnimatorScriptTaskParametersBase
	{
		// Constructors:
		constructor(
			smokeLocations: System.Collections.Generic.List<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		);

		// Properties:
		readonly SmokeLocations: System.Collections.Generic.List<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		readonly SmokeEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly TicksPeriod: number;
		readonly Probability: number;
	}
}
//#endregion

//#region ProduceTraceTaskParameters
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters {
	class ProduceTraceTaskParameters
		extends HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.AnimatorScriptTaskParametersBase
	{
		// Properties:
		readonly TraceEffect: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly TraceSoundsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog;
		readonly AllowedTileTypes: System.Collections.Generic.HashSet<HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType>;
		readonly Bias: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region RenderData
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics {
	class /* struct */ RenderData extends System.ValueType {

		// Properties:
		readonly Animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;
		readonly FrameNumber: number;
		readonly FrameRenderSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly ImageFrameDefinition: HordeClassLibrary.HordeContent.ViewResources.Graphics.ExternalLoading.ImageFrameDefinition;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region TileAnimation
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.Tiles {
	class TileAnimation extends System.Object {

		// Properties:
		readonly Length: number;

		// Methods:
		NextFrame(): void;

		GetFrameNumber(
			phaseShift: number
		): number;

		GetFrameImagePosition(
			frameNumber: number
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		GetMinimapColor(
			frameNumber: number
		): number;
	}
}
//#endregion

//#region TileAnimationFrame
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.Tiles {
	class TileAnimationFrame extends System.Object {

		// Constructors:
		constructor(
			canvasOffset: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			minimapColor: number
		);

		// Properties:
		readonly CanvasOffset: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly MinimapColor: number;
	}
}
//#endregion

//#region TilesetToCanvasesConverter.SetTileCanvasDelegate
declare namespace HordeClassLibrary.HordeContent.ViewResources.Graphics.Tiles.TilesetToCanvasesConverter {
	interface /* delegate */ SetTileCanvasDelegate {
		// Can't process delegate: 'HordeClassLibrary.HordeContent.ViewResources.Graphics.Tiles.TilesetToCanvasesConverter.SetTileCanvasDelegate'
	}
}
//#endregion

//#region WorkersLibrary
declare namespace HordeClassLibrary.HordeContent {
	abstract class WorkersLibrary {

		// Methods:
		static GetWorker<TDelegate extends System.Delegate, TWorker>(
			$TDelegate: typeof System.Delegate,
			$TWorker: any
		): TDelegate;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region Bresenhams
declare namespace HordeClassLibrary.Miscellaneous {
	abstract class Bresenhams {

		// Methods:
		static Line(
			x0: number,
			y0: number,
			x1: number,
			y1: number,
			plot: HordeClassLibrary.Miscellaneous.Bresenhams.PlotFunction | null
		): void;

		static Line(
			p1: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			p2: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			plot: HordeClassLibrary.Miscellaneous.Bresenhams.PlotFunction | null
		): void;

		static old_Line(
			x0: number,
			y0: number,
			x1: number,
			y1: number,
			plot: HordeClassLibrary.Miscellaneous.Bresenhams.PlotFunction | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region Bresenhams.PlotFunction
declare namespace HordeClassLibrary.Miscellaneous.Bresenhams {
	interface /* delegate */ PlotFunction {
		(
			x: number,
			y: number
		): boolean;
	}
	/** TypeScript type stub for .Net delegate */
	class PlotFunction { constructor(func: PlotFunction); }
}
//#endregion

//#region BresenhamsAdvanced
declare namespace HordeClassLibrary.Miscellaneous {
	abstract class BresenhamsAdvanced {

		// Methods:
		static Line(
			x0: number,
			y0: number,
			x1: number,
			y1: number,
			sizeX: number,
			sizeY: number,
			continuous: boolean,
			plot: HordeClassLibrary.Miscellaneous.BresenhamsAdvanced.PlotFunction | null
		): void;

		static Line(
			p1: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			p2: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			continuous: boolean,
			plot: HordeClassLibrary.Miscellaneous.BresenhamsAdvanced.PlotFunction | null
		): void;

		static old_Line(
			x0: number,
			y0: number,
			x1: number,
			y1: number,
			plot: HordeClassLibrary.Miscellaneous.BresenhamsAdvanced.PlotFunction | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BresenhamsAdvanced.PlotFunction
declare namespace HordeClassLibrary.Miscellaneous.BresenhamsAdvanced {
	interface /* delegate */ PlotFunction {
		(
			x: number,
			y: number
		): boolean;
	}
	/** TypeScript type stub for .Net delegate */
	class PlotFunction { constructor(func: PlotFunction); }
}
//#endregion

//#region CitadelArmyType
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Enumerations {
	abstract class CitadelArmyType extends System.Enum {
		/** CitadelArmyType.Items = 0 */ static readonly Items: CitadelArmyType;
		/** CitadelArmyType.Barbarian = 1 */ static readonly Barbarian: CitadelArmyType;
		/** CitadelArmyType.Slavyane = 2 */ static readonly Slavyane: CitadelArmyType;
		/** CitadelArmyType.Mage = 3 */ static readonly Mage: CitadelArmyType;
		/** CitadelArmyType.Nature = 4 */ static readonly Nature: CitadelArmyType;
	}
}
//#endregion

//#region CitadelArmyCanonType
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Enumerations {
	abstract class CitadelArmyCanonType extends System.Enum {
		/** CitadelArmyCanonType.Items = 0 */ static readonly Items: CitadelArmyCanonType;
		/** CitadelArmyCanonType.Barbarian = 1 */ static readonly Barbarian: CitadelArmyCanonType;
		/** CitadelArmyCanonType.Slavyane = 2 */ static readonly Slavyane: CitadelArmyCanonType;
		/** CitadelArmyCanonType.Mage = 3 */ static readonly Mage: CitadelArmyCanonType;
		/** CitadelArmyCanonType.Nature1 = 4 */ static readonly Nature1: CitadelArmyCanonType;
		/** CitadelArmyCanonType.Nature2 = 5 */ static readonly Nature2: CitadelArmyCanonType;
	}
}
//#endregion

//#region CitadelDiplomacyStatus
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Enumerations {
	abstract class CitadelDiplomacyStatus extends System.Enum {
		/** CitadelDiplomacyStatus.Undiscovered = 0 */ static readonly Undiscovered: CitadelDiplomacyStatus;
		/** CitadelDiplomacyStatus.Peace = 1 */ static readonly Peace: CitadelDiplomacyStatus;
		/** CitadelDiplomacyStatus.War = 2 */ static readonly War: CitadelDiplomacyStatus;
		/** CitadelDiplomacyStatus.Alliance = 3 */ static readonly Alliance: CitadelDiplomacyStatus;
		/** CitadelDiplomacyStatus.Suzerain = 4 */ static readonly Suzerain: CitadelDiplomacyStatus;
		/** CitadelDiplomacyStatus.Vassal = 5 */ static readonly Vassal: CitadelDiplomacyStatus;
	}
}
//#endregion

//#region CitadelMapResource
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Enumerations {
	abstract class CitadelMapResource extends System.Enum {
		/** CitadelMapResource.None = 0 */ static readonly None: CitadelMapResource;
		/** CitadelMapResource.Gold = 1 */ static readonly Gold: CitadelMapResource;
		/** CitadelMapResource.Metal = 2 */ static readonly Metal: CitadelMapResource;
	}
}
//#endregion

//#region CitadelSpriteInfo
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Graphics {
	class CitadelSpriteInfo extends System.Object {

		// Constructors:
		constructor();

		// Fields:
		Height: number;
		Width: number;
		Offset: number;
		Length: number;
		Hz2: number;
		LengthCrutch: number;
		Hz1: number;
		Depth: number;

		// Methods:
		Read(
			instr: System.IO.Stream | null
		): void;

		Write(
			outstr: System.IO.Stream | null
		): void;

		WriteInfo(
			strBuilder: System.Text.StringBuilder | null
		): void;
	}
}
//#endregion

//#region CitadelResourcesAmount
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Other {
	class CitadelResourcesAmount extends System.Object {

		// Constructors:
		constructor(
			binaryReader: System.IO.BinaryReader | null
		);

		constructor(
			buff: number[] | null
		);

		// Fields:
		static readonly /* const */ StructSize: number; // = 16

		// Properties:
		Gold: number;
		Metal: number;
		Lumber: number;
		People: number;

		// Methods:
		FromBuff(
			buff: number[] | null
		): void;
	}
}
//#endregion

//#region CitadelScena
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena {
	class CitadelScena extends System.Object {

		// Constructors:
		constructor(
			readMode: HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.CitadelScenaReadMode,
			binaryReader: System.IO.BinaryReader | null
		);

		constructor();

		// Fields:
		static readonly /* const */ MapCellSizeBytes: number; // = 4
		static readonly /* const */ SegmentInfoSize: number; // = 8
		static readonly /* const */ SegmentMinimapColorSize: number; // = 2
		static readonly /* const */ MapSectionHeaderSize: number; // = 20
		static readonly /* const */ ObeSectionHeaderSize: number; // = 20
		static readonly /* const */ NationHeaderSize: number; // = 114
		static readonly /* const */ NationUnitsSize: number; // = 65536
		static readonly /* const */ NationColorMaskSize: number; // = 512
		static readonly /* const */ TreesOnCellCount: number; // = 7
		static readonly /* const */ ResourceInCellAmount: number; // = 2000

		// Properties:
		readonly Size: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly Header: HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaHeader;
		readonly Tileset: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelTileset;
		readonly LandscapeMap: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentData[][];
		readonly ResourcesMap: HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelMapResource[][];
		readonly Nations: HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.CitadelScenaNation[];
		readonly ExtraJson: string;

		// Methods:
		ReadData(
			readMode: HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.CitadelScenaReadMode,
			binaryReader: System.IO.BinaryReader | null
		): void;
	}
}
//#endregion

//#region CitadelScenaNation
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena {
	class CitadelScenaNation extends System.Object {

		// Constructors:
		constructor(
			index: number,
			skipUnits: boolean,
			binaryReader: System.IO.BinaryReader | null
		);

		// Fields:
		static readonly CitadelNationMinimapColor: HordeResurrection.Basic.Primitives.HordeColor[];
		static readonly /* const */ HeaderSize: number; // = 114
		static readonly /* const */ UnitsBlockSize: number; // = 65536
		static readonly /* const */ MaxNations: number; // = 16
		static readonly /* const */ MaxStorageSize: number; // = 20
		static readonly /* const */ PaletteUnusedColorsCount: number; // = 240
		static readonly /* const */ PaletteUsedColorsCount: number; // = 16

		// Properties:
		Index: number;
		readonly UnitsAllocationSize: number;
		readonly SomeIndex: number;
		MinimapColor: HordeResurrection.Basic.Primitives.HordeColor;
		COLOR_TAB: number;
		ARMY_TYPE: number;
		OBJ_FILE_NAME: number[];
		WAR_STATUS: number;
		CONTROL: number;
		EMBLEM: number;
		RESOURCES: HordeClassLibrary.Miscellaneous.Citadel.Structures.Other.CitadelResourcesAmount;
		LEADER_NAME: string;
		LEADER_FACE: number;
		DIP_STATUS: HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelDiplomacyStatus[];
		ITM_STORAGE: number[];
		TOWN_NAME: string;
		readonly METAL: number;
		readonly LUMBER: number;
		readonly GOLD: number;
		readonly PEOPLE: number;
		Units: System.Collections.Generic.List<HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.CitadelUnit>;
		UnusedColorsTab: HordeResurrection.Basic.Primitives.HordeColor[];
		ColorsTab: HordeResurrection.Basic.Primitives.HordeColor[];

		// Methods:
		ReadUnits(
			binaryReader: System.IO.BinaryReader | null
		): void;
	}
}
//#endregion

//#region CitadelScenaReadMode
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena {
	abstract class CitadelScenaReadMode extends System.EnumFlags {
		/** CitadelScenaReadMode.None = 0 */ static readonly None: CitadelScenaReadMode;
		/** CitadelScenaReadMode.Header = 1 */ static readonly Header: CitadelScenaReadMode;
		/** CitadelScenaReadMode.SegmentsData = 2 */ static readonly SegmentsData: CitadelScenaReadMode;
		/** CitadelScenaReadMode.MinimapColors = 4 */ static readonly MinimapColors: CitadelScenaReadMode;
		/** CitadelScenaReadMode.SegmentGraphics = 8 */ static readonly SegmentGraphics: CitadelScenaReadMode;
		/** CitadelScenaReadMode.Map = 16 */ static readonly Map: CitadelScenaReadMode;
		/** CitadelScenaReadMode.Nations = 32 */ static readonly Nations: CitadelScenaReadMode;
		/** CitadelScenaReadMode.Units = 64 */ static readonly Units: CitadelScenaReadMode;
		/** CitadelScenaReadMode.ExtraJson = 128 */ static readonly ExtraJson: CitadelScenaReadMode;
		/** CitadelScenaReadMode.All = 255 */ static readonly All: CitadelScenaReadMode;
	}
}
//#endregion

//#region CitadelScenaHeader
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers {
	class CitadelScenaHeader extends System.Object {

		// Constructors:
		constructor(
			binaryReader: System.IO.BinaryReader | null
		);

		// Fields:
		static readonly /* const */ ItemsCount: number; // = 4
		static readonly /* const */ ScenaHeaderSize: number; // = 52
		static readonly /* const */ ScenaSignature: string; // = "SCN2"
		static readonly /* const */ ScenaSignatureLength: number; // = 4

		// Properties:
		readonly Signature: string;
		readonly MapSectionHeader: HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionHeaderMap;
		readonly ObeSectionHeader: HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionHeaderObe;
	}
}
//#endregion

//#region CitadelScenaSectionHeaderBase
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers {
	abstract class CitadelScenaSectionHeaderBase extends System.Object {

		// Properties:
		readonly Offset: number;
		readonly Size: number;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region CitadelScenaSectionHeaderMap
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers {
	class CitadelScenaSectionHeaderMap
		extends HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionHeaderBase
	{
		// Constructors:
		constructor(
			binaryReader: System.IO.BinaryReader | null,
			itemInfo: HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionInfo | null
		);

		// Fields:
		static readonly /* const */ StructSize: number; // = 20

		// Properties:
		readonly Height: number;
		readonly Width: number;
		readonly SegmentsDataCount: number;
		readonly BlocksCount: number;
		readonly SoundSize: number;
	}
}
//#endregion

//#region CitadelScenaSectionHeaderObe
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers {
	class CitadelScenaSectionHeaderObe
		extends HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionHeaderBase
	{
		// Constructors:
		constructor(
			binaryReader: System.IO.BinaryReader | null,
			itemInfo: HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionInfo | null
		);

		// Fields:
		static readonly /* const */ StructSize: number; // = 20

		// Properties:
		readonly NationsCount: number;
		readonly ForcesCount: number;
		readonly RawData: number[];
	}
}
//#endregion

//#region CitadelScenaSectionInfo
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers {
	class CitadelScenaSectionInfo extends System.Object {

		// Constructors:
		constructor(
			binaryReader: System.IO.BinaryReader | null
		);

		// Fields:
		static readonly /* const */ StructureSize: number; // = 12

		// Properties:
		readonly Signature: string;
		readonly Offset: number;
		readonly Size: number;
	}
}
//#endregion

//#region CitadelSegmentData
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles {
	class CitadelSegmentData extends System.Object {

		// Constructors:
		constructor(
			sequenceContext: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentsDataSequenceContext | null,
			binaryReader: System.IO.BinaryReader | null
		);

		// Fields:
		Slowing: number;
		Type: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentType;
		Sounds: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentSound;
		Variant: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentVariant;
		LeftUp: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentQuadType;
		RightUp: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentQuadType;
		LeftDown: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentQuadType;
		RightDown: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentQuadType;
		NextFrameOffset: number;
		IsFirstInSequence: number;
		PaddingByte: number;
		static readonly /* const */ StructSize: number; // = 8
		static readonly /* const */ ImageSizeBytes: number; // = 2048

		// Properties:
		readonly Index: number;
		readonly SequenceIndex: number;
		readonly IndexInSequence: number;
		readonly IsLastInSequence: boolean;
		readonly IsFrozen: boolean;
		readonly ChoppedType: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentType;
		MinimapHordeColor: HordeResurrection.Basic.Primitives.HordeColor;
		ImagePixels: HordeResurrection.Basic.Primitives.HordeColor[];

		// Methods:
		ReadMinimapColor(
			binaryReader: System.IO.BinaryReader | null
		): void;

		ReadImageData(
			binaryReader: System.IO.BinaryReader | null
		): void;

		ComposeBasicInfoArray(): number[];
	}
}
//#endregion

//#region CitadelSegmentVariant
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles {
	abstract class CitadelSegmentVariant extends System.Enum {
		/** CitadelSegmentVariant.Normal = 0 */ static readonly Normal: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Scorched = 1 */ static readonly Scorched: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Chopped = 2 */ static readonly Chopped: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Exploded = 3 */ static readonly Exploded: CitadelSegmentVariant;
		/** CitadelSegmentVariant.ContainsGold = 4 */ static readonly ContainsGold: CitadelSegmentVariant;
		/** CitadelSegmentVariant.ContainsMetal = 5 */ static readonly ContainsMetal: CitadelSegmentVariant;
		/** CitadelSegmentVariant.ContainsColoredMetal = 6 */ static readonly ContainsColoredMetal: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Variant1 = 7 */ static readonly Variant1: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Variant2 = 8 */ static readonly Variant2: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Variant3 = 9 */ static readonly Variant3: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Variant4 = 10 */ static readonly Variant4: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Variant5 = 11 */ static readonly Variant5: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Variant6 = 12 */ static readonly Variant6: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Variant7 = 13 */ static readonly Variant7: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Variant8 = 14 */ static readonly Variant8: CitadelSegmentVariant;
		/** CitadelSegmentVariant.Variant9 = 15 */ static readonly Variant9: CitadelSegmentVariant;
	}
}
//#endregion

//#region CitadelSegmentType
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles {
	abstract class CitadelSegmentType extends System.Enum {
		/** CitadelSegmentType.Grass = 0 */ static readonly Grass: CitadelSegmentType;
		/** CitadelSegmentType.Forest = 1 */ static readonly Forest: CitadelSegmentType;
		/** CitadelSegmentType.Water = 2 */ static readonly Water: CitadelSegmentType;
		/** CitadelSegmentType.Marsh = 3 */ static readonly Marsh: CitadelSegmentType;
		/** CitadelSegmentType.Sand = 4 */ static readonly Sand: CitadelSegmentType;
		/** CitadelSegmentType.Mounts = 5 */ static readonly Mounts: CitadelSegmentType;
		/** CitadelSegmentType.Road = 6 */ static readonly Road: CitadelSegmentType;
		/** CitadelSegmentType.Ice = 7 */ static readonly Ice: CitadelSegmentType;
	}
}
//#endregion

//#region CitadelSegmentQuadType
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles {
	abstract class CitadelSegmentQuadType extends System.Enum {
		/** CitadelSegmentQuadType.Water = 0 */ static readonly Water: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Water1 = 1 */ static readonly Water1: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Sand = 2 */ static readonly Sand: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Sand1 = 3 */ static readonly Sand1: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Grass = 4 */ static readonly Grass: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Grass1 = 5 */ static readonly Grass1: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Forest = 6 */ static readonly Forest: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Forest1 = 7 */ static readonly Forest1: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Mounts = 8 */ static readonly Mounts: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Mounts1 = 9 */ static readonly Mounts1: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Marsh = 10 */ static readonly Marsh: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Marsh1 = 11 */ static readonly Marsh1: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Road = 12 */ static readonly Road: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Road1 = 13 */ static readonly Road1: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Ice = 14 */ static readonly Ice: CitadelSegmentQuadType;
		/** CitadelSegmentQuadType.Ice1 = 15 */ static readonly Ice1: CitadelSegmentQuadType;
	}
}
//#endregion

//#region CitadelSegmentSound
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles {
	abstract class CitadelSegmentSound extends System.Enum {
		/** CitadelSegmentSound.NoSound = 0 */ static readonly NoSound: CitadelSegmentSound;
		/** CitadelSegmentSound.NoiseOfPlain = 1 */ static readonly NoiseOfPlain: CitadelSegmentSound;
		/** CitadelSegmentSound.NoiseOfForest = 2 */ static readonly NoiseOfForest: CitadelSegmentSound;
		/** CitadelSegmentSound.NoiseOfWater = 3 */ static readonly NoiseOfWater: CitadelSegmentSound;
		/** CitadelSegmentSound.NoiseOfMarsh = 4 */ static readonly NoiseOfMarsh: CitadelSegmentSound;
		/** CitadelSegmentSound.NoiseOfSand = 5 */ static readonly NoiseOfSand: CitadelSegmentSound;
		/** CitadelSegmentSound.NoiseOfMounts = 6 */ static readonly NoiseOfMounts: CitadelSegmentSound;
		/** CitadelSegmentSound.NoiseOfRoad = 7 */ static readonly NoiseOfRoad: CitadelSegmentSound;
		/** CitadelSegmentSound.NoiseOfIce = 8 */ static readonly NoiseOfIce: CitadelSegmentSound;
		/** CitadelSegmentSound.NoSound15 = 15 */ static readonly NoSound15: CitadelSegmentSound;
	}
}
//#endregion

//#region CitadelSegmentsDataSequenceContext
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles {
	class CitadelSegmentsDataSequenceContext extends System.Object {

		// Constructors:
		constructor(
			segmentsCount: number
		);

		// Properties:
		SegmentsCount: number;
		CurrentIndex: number;
		CurrentSequenceIndex: number;
		CompletedSequencesCounter: number;
		CurrentIndexInSequence: number;
		NextIndexInSequence: number;
		CurrentFrameIsLastInSequence: boolean;

		// Methods:
		ProcessCurrentSegmentData(
			segmentData: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentData | null
		): void;

		PostProcessChecks(): void;
	}
}
//#endregion

//#region CitadelTileset
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles {
	class CitadelTileset extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly SegmentsData: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentData[];
		readonly Count: number;

		// Methods:
		ReadSegmentsData(
			segmentsDataCount: number,
			binaryReader: System.IO.BinaryReader | null
		): void;

		ReadMinimapColors(
			binaryReader: System.IO.BinaryReader | null
		): void;

		ReadImagesData(
			binaryReader: System.IO.BinaryReader | null
		): void;

		GetSequences(): System.Collections.Generic.IEnumerable<System.Collections.Generic.List<HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentData>>;

		CheckSequences(): void;
	}
}
//#endregion

//#region CitadelUnit
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Units {
	class CitadelUnit extends System.Object {

		// Constructors:
		constructor(
			binaryReader: System.IO.BinaryReader | null,
			maxSize: number
		);

		// Fields:
		static readonly /* const */ StructSize: number; // = 34

		// Properties:
		A_TYPE: HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelArmyType;
		SPR_NUM: number;
		NATION: number;
		X: number;
		Y: number;
		Z: number;
		LAYER: number;
		OBJ_NUM: number;
		COM_MASK: number;
		NEXT_OBJ: number;
		CUR_COM: number;
		COM_STAGE: number;
		EXPERIENCE: number;
		EXCHANGE: number;
		HEALTH: number;
		OLD_HEALTH: number;
		SQUAD: number;
		TARGET_OBJ: number;
		VISIBLE: number;
		COMP_DATA: number;
		ExtraData: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraData;
	}
}
//#endregion

//#region CitadelUnitFlags
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Units {
	abstract class CitadelUnitFlags extends System.EnumFlags {
		/** CitadelUnitFlags.None = 0 */ static readonly None: CitadelUnitFlags;
		/** CitadelUnitFlags.Capturable00 = 1 */ static readonly Capturable00: CitadelUnitFlags;
		/** CitadelUnitFlags.Walkable = 2 */ static readonly Walkable: CitadelUnitFlags;
		/** CitadelUnitFlags.NotChoosable = 4 */ static readonly NotChoosable: CitadelUnitFlags;
		/** CitadelUnitFlags.Building = 8 */ static readonly Building: CitadelUnitFlags;
		/** CitadelUnitFlags.Lifeless = 16 */ static readonly Lifeless: CitadelUnitFlags;
		/** CitadelUnitFlags.Passive = 32 */ static readonly Passive: CitadelUnitFlags;
		/** CitadelUnitFlags.Auxiliary = 64 */ static readonly Auxiliary: CitadelUnitFlags;
		/** CitadelUnitFlags.Compound = 128 */ static readonly Compound: CitadelUnitFlags;
		/** CitadelUnitFlags.Spec1 = 256 */ static readonly Spec1: CitadelUnitFlags;
		/** CitadelUnitFlags.Spec2 = 512 */ static readonly Spec2: CitadelUnitFlags;
		/** CitadelUnitFlags.Spec3 = 1024 */ static readonly Spec3: CitadelUnitFlags;
		/** CitadelUnitFlags.Spec4 = 2048 */ static readonly Spec4: CitadelUnitFlags;
		/** CitadelUnitFlags.SpecMask = 3840 */ static readonly SpecMask: CitadelUnitFlags;
		/** CitadelUnitFlags.CanCapture = 4096 */ static readonly CanCapture: CitadelUnitFlags;
		/** CitadelUnitFlags.f13 = 8192 */ static readonly f13: CitadelUnitFlags;
		/** CitadelUnitFlags.FireResistant = 16384 */ static readonly FireResistant: CitadelUnitFlags;
		/** CitadelUnitFlags.NonBrokeble = 32768 */ static readonly NonBrokeble: CitadelUnitFlags;
		/** CitadelUnitFlags.Capturable16 = 65536 */ static readonly Capturable16: CitadelUnitFlags;
		/** CitadelUnitFlags.f17 = 131072 */ static readonly f17: CitadelUnitFlags;
		/** CitadelUnitFlags.NotPlaced = 262144 */ static readonly NotPlaced: CitadelUnitFlags;
		/** CitadelUnitFlags.Invisible = 524288 */ static readonly Invisible: CitadelUnitFlags;
		/** CitadelUnitFlags.Flying = 1048576 */ static readonly Flying: CitadelUnitFlags;
		/** CitadelUnitFlags.Storage = 2097152 */ static readonly Storage: CitadelUnitFlags;
		/** CitadelUnitFlags.Dangerous = 4194304 */ static readonly Dangerous: CitadelUnitFlags;
		/** CitadelUnitFlags.MultiArm = 8388608 */ static readonly MultiArm: CitadelUnitFlags;
		/** CitadelUnitFlags.NoTake = 16777216 */ static readonly NoTake: CitadelUnitFlags;
		/** CitadelUnitFlags.NoDisease = 33554432 */ static readonly NoDisease: CitadelUnitFlags;
	}
}
//#endregion

//#region CitadelUnitSpecification
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Units {
	abstract class CitadelUnitSpecification extends System.EnumFlags {
		/** CitadelUnitSpecification.None = 0 */ static readonly None: CitadelUnitSpecification;
		/** CitadelUnitSpecification.Spec1 = 256 */ static readonly Spec1: CitadelUnitSpecification;
		/** CitadelUnitSpecification.Spec2 = 512 */ static readonly Spec2: CitadelUnitSpecification;
		/** CitadelUnitSpecification.Spec3 = 1024 */ static readonly Spec3: CitadelUnitSpecification;
		/** CitadelUnitSpecification.Spec4 = 2048 */ static readonly Spec4: CitadelUnitSpecification;
	}
}
//#endregion

//#region CitadelUnitExtraData
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData {
	class CitadelUnitExtraData extends System.Object {

		// Constructors:
		constructor(
			binaryReader: System.IO.BinaryReader | null,
			size: number,
			armyId: HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelArmyType,
			unitId: number
		);

		// Properties:
		readonly Size: number;
		DataDescriptor: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataDescriptor;
		Data: number[];
		Raw: number[];

		// Methods:
		GetValue(
			structName: string | null,
			fieldName: string | null
		): number;
	}
}
//#endregion

//#region CitadelUnitExtraDataDescriptor
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData {
	class CitadelUnitExtraDataDescriptor extends System.Object {

		// Constructors:
		constructor(
			name: string | null,
			fields: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataFieldDescriptor[] | null
		);

		constructor(
			name: string | null,
			parent: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataDescriptor | null,
			newFields: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataFieldDescriptor[] | null
		);

		// Properties:
		readonly Name: string;
		readonly Parent: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataDescriptor;
		readonly Fields: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataFieldDescriptor[];
		readonly FieldIndexes: System.Collections.Generic.IReadOnlyDictionary<string, number>;
		readonly FieldsTotalSize: number;

		// Methods:
		Derive(
			name: string | null,
			newFields: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataFieldDescriptor[] | null
		): HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataDescriptor;

		DerivesFrom(
			parentName: string | null
		): boolean;

		DerivesOrEqual(
			structName: string | null
		): boolean;

		ReadData(
			binaryReader: System.IO.BinaryReader | null
		): number[];
	}
}
//#endregion

//#region CitadelUnitExtraDataFieldDescriptor
declare namespace HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData {
	class CitadelUnitExtraDataFieldDescriptor extends System.Object {

		// Constructors:
		constructor(
			name: string | null,
			size: number
		);

		// Properties:
		readonly Name: string;
		readonly Size: number;

		// Methods:
		ReadData(
			binaryReader: System.IO.BinaryReader | null
		): number;
	}
}
//#endregion

//#region ConfiguratorAction
declare namespace HordeClassLibrary.Miscellaneous {
	abstract class ConfiguratorAction extends System.Enum {
		/** ConfiguratorAction.None = 0 */ static readonly None: ConfiguratorAction;
		/** ConfiguratorAction.SelectAnimImage = 1 */ static readonly SelectAnimImage: ConfiguratorAction;
		/** ConfiguratorAction.MultilineText = 2 */ static readonly MultilineText: ConfiguratorAction;
		/** ConfiguratorAction.CommandsSetter = 3 */ static readonly CommandsSetter: ConfiguratorAction;
		/** ConfiguratorAction.UnitsList = 4 */ static readonly UnitsList: ConfiguratorAction;
	}
}
//#endregion

//#region AStarMiniPathFinder
declare namespace HordeClassLibrary.PathFinders.AStarMini {
	class AStarMiniPathFinder
		extends HordeClassLibrary.PathFinders.BasePathFinder
	{
		// Properties:
		static readonly SByteArraysPool: HordeResurrection.Basic.Pool.ArraysPoolWrapper<number>;
		static readonly Pool: HordeClassLibrary.PathFinders.AStarMini.AStarMiniPathFinder.PathFindersPool;

		// Methods:
		ResumeFinding(
			allowedIterations?: number | null /* = null */
		): boolean;
	}
}
//#endregion

//#region AStarMiniPathFinder.PathFindersPool
declare namespace HordeClassLibrary.PathFinders.AStarMini.AStarMiniPathFinder {
	class PathFindersPool
		extends HordeResurrection.Basic.Pool.Pool<HordeClassLibrary.PathFinders.AStarMini.AStarMiniPathFinder>
	{
		// Constructors:
		constructor();

		// Methods:
		Get(
			context: HordeClassLibrary.PathFinders.PathFinderContext | null,
			searchRadius: number,
			start: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			finishSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null,
			options: HordeClassLibrary.PathFinders.AStar.AStarOptions | null
		): HordeResurrection.Basic.Pool.PoolSlot<HordeClassLibrary.PathFinders.AStarMini.AStarMiniPathFinder>;

		Get(): HordeResurrection.Basic.Pool.PoolSlot<HordeClassLibrary.PathFinders.AStarMini.AStarMiniPathFinder>;
	}
}
//#endregion

//#region AStarOptions
declare namespace HordeClassLibrary.PathFinders.AStar {
	class AStarOptions extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		static readonly DefaultOptions: HordeClassLibrary.PathFinders.AStar.AStarOptions;
		static readonly BypassOptions: HordeClassLibrary.PathFinders.AStar.AStarOptions;
		AllowedIterations: number;
	}
}
//#endregion

//#region AStarPathFinder
declare namespace HordeClassLibrary.PathFinders.AStar {
	class AStarPathFinder
		extends HordeClassLibrary.PathFinders.BasePathFinder
	{
		// Properties:
		static readonly Pool: HordeClassLibrary.PathFinders.AStar.AStarPathFinder.PathFindersPool;

		// Methods:
		ResumeFinding(
			allowedIterations?: number | null /* = null */
		): boolean;
	}
}
//#endregion

//#region AStarPathFinder.PathFindersPool
declare namespace HordeClassLibrary.PathFinders.AStar.AStarPathFinder {
	class PathFindersPool
		extends HordeResurrection.Basic.Pool.Pool<HordeClassLibrary.PathFinders.AStar.AStarPathFinder>
	{
		// Constructors:
		constructor();

		// Methods:
		Get(
			context: HordeClassLibrary.PathFinders.PathFinderContext | null,
			mapSize: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			start: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			finishSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null,
			brWorld: number[] | null
		): HordeResurrection.Basic.Pool.PoolSlot<HordeClassLibrary.PathFinders.AStar.AStarPathFinder>;

		Get(): HordeResurrection.Basic.Pool.PoolSlot<HordeClassLibrary.PathFinders.AStar.AStarPathFinder>;
	}
}
//#endregion

//#region BasePathFinder
declare namespace HordeClassLibrary.PathFinders {
	abstract class BasePathFinder extends System.Object {

		// Properties:
		readonly Start: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly FinishSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		readonly MainFinish: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly Solution: HordeClassLibrary.PathFinders.Path2D;
		readonly Status: HordeClassLibrary.PathFinders.PathFinderStatus;
		readonly LastWaitingPoints: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		readonly Context: HordeClassLibrary.PathFinders.PathFinderContext;

		// Methods:
		FindPath(): boolean;

		Reinitialize(
			start: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			finishSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		): void;

		ReturnToPool(): void;

		TestLastPath(): boolean;

		AddWaitingPoint(
			waitingPoint: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region CellPassabilityStatus
declare namespace HordeClassLibrary.PathFinders {
	abstract class CellPassabilityStatus extends System.Enum {
		/** CellPassabilityStatus.Passable = 0 */ static readonly Passable: CellPassabilityStatus;
		/** CellPassabilityStatus.Impassable = 1 */ static readonly Impassable: CellPassabilityStatus;
		/** CellPassabilityStatus.TemporaryImpassable = 2 */ static readonly TemporaryImpassable: CellPassabilityStatus;
	}
}
//#endregion

//#region CpfMain
declare namespace HordeClassLibrary.PathFinders.ContourPathFinder {
	class CpfMain
		extends HordeClassLibrary.PathFinders.BasePathFinder
	{
		// Constructors:
		constructor(
			context: HordeClassLibrary.PathFinders.PathFinderContext | null,
			start: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			finishSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null,
			options?: HordeClassLibrary.PathFinders.ContourPathFinder.CpfOptions | null /* = null */
		);

		// Properties:
		readonly NearestPointsSet: HordeClassLibrary.PathFinders.ContourPathFinder.CpfNearestPointsSet;
	}
}
//#endregion

//#region CpfNearestPointsSet
declare namespace HordeClassLibrary.PathFinders.ContourPathFinder {
	class CpfNearestPointsSet extends System.Object {

		// Constructors:
		constructor();

		constructor(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			curDist: number
		);

		// Properties:
		readonly Points: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		readonly CurrentMinDist: number;

		// Methods:
		CheckPoint(
			newPoint: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			newDist: number
		): void;
	}
}
//#endregion

//#region CpfOptions
declare namespace HordeClassLibrary.PathFinders.ContourPathFinder {
	class CpfOptions extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		static readonly DefaultOptions: HordeClassLibrary.PathFinders.ContourPathFinder.CpfOptions;
		MaxNumberOfHandSteps: number;
		MaxNumberOfVertex: number;
	}
}
//#endregion

//#region MarkCellDelegate
declare namespace HordeClassLibrary.PathFinders {
	interface /* delegate */ MarkCellDelegate {
		(
			x: number,
			y: number
		): void;
	}
	/** TypeScript type stub for .Net delegate */
	class MarkCellDelegate { constructor(func: MarkCellDelegate); }
}
//#endregion

//#region FillAlgo
declare namespace HordeClassLibrary.PathFinders {
	abstract class FillAlgo {

		// Methods:
		static BasicFill(
			array: boolean[][] | null,
			x: number,
			y: number
		): void;

		static ScanlineFill(
			isBorder: HordeClassLibrary.PathFinders.IsBorderDelegateOld | null,
			markCell: HordeClassLibrary.PathFinders.MarkCellDelegate | null,
			width: number,
			height: number,
			x: number,
			y: number,
			diagonal?: boolean /* = true */
		): void;

		static ScanlineFTFill(
			isBorder: HordeClassLibrary.PathFinders.IsBorderDelegateOld | null,
			markCell: HordeClassLibrary.PathFinders.MarkCellDelegate | null,
			width: number,
			height: number,
			x: number,
			y: number
		): void;

		static MilazzoFill(
			isBorder: HordeClassLibrary.PathFinders.IsBorderDelegateOld | null,
			markCell: HordeClassLibrary.PathFinders.MarkCellDelegate | null,
			width: number,
			height: number,
			x: number,
			y: number
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region Path2D
declare namespace HordeClassLibrary.PathFinders {
	class Path2D extends System.Object {

		// Constructors:
		constructor();

		constructor(
			path: System.Collections.Generic.LinkedList<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		);

		constructor(
			other: HordeClassLibrary.PathFinders.Path2D | null
		);

		// Properties:
		readonly Path: System.Collections.Generic.LinkedList<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		readonly Count: number;
		readonly Start: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		readonly Finish: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		// Methods:
		First(): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		Second(): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		Add(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		Add(
			x: number,
			y: number
		): void;

		AddFirst(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		AddFirst(
			x: number,
			y: number
		): void;

		RemoveFirst(): void;

		RemoveLast(): void;

		Append(
			other: HordeClassLibrary.PathFinders.Path2D | null
		): void;

		AppendStart(
			other: HordeClassLibrary.PathFinders.Path2D | null
		): void;

		CheckPathPassability(
			isBorder: HordeClassLibrary.PathFinders.IsBorderDelegate | null
		): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		RemoveExcessPoints(): void;
	}
}
//#endregion

//#region PathFinderContext
declare namespace HordeClassLibrary.PathFinders {
	class PathFinderContext extends System.Object {

		// Constructors:
		constructor(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			lastWaitingPoints?: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null /* = null */
		);

		constructor(
			speedAtCellByKnownMap: HordeClassLibrary.PathFinders.SpeedAtCellByKnownMapDelegate | null,
			speedAtCellByRealMap: HordeClassLibrary.PathFinders.SpeedAtCellByRealMapDelegate | null,
			lastWaitingPoints?: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null /* = null */
		);

		// Properties:
		readonly SpeedAtCellByKnownMap: HordeClassLibrary.PathFinders.SpeedAtCellByKnownMapDelegate;
		readonly SpeedAtCellByRealMap: HordeClassLibrary.PathFinders.SpeedAtCellByRealMapDelegate;
		readonly Unit: HordeClassLibrary.World.Objects.Units.Unit;
		AllowPushAway: boolean;
		AllowWait: boolean;

		// Methods:
		InitializeForCurrentOrder(): void;
	}
}
//#endregion

//#region PathFindersStatistic
declare namespace HordeClassLibrary.PathFinders {
	class PathFindersStatistic extends System.Object {

		// Constructors:
		constructor(
			name: string | null
		);

		// Properties:
		static readonly AStar: HordeClassLibrary.PathFinders.PathFindersStatistic;
		static readonly AStarMini: HordeClassLibrary.PathFinders.PathFindersStatistic;
		readonly Name: string;
		readonly AverageIterations: number;
		readonly IterationsOverall: number;
		readonly PathsFound: number;

		// Methods:
		PathFoundComplete(
			iterations: number
		): void;

		Print(): void;

		Reset(): void;
	}
}
//#endregion

//#region PathFinderStatus
declare namespace HordeClassLibrary.PathFinders {
	abstract class PathFinderStatus extends System.Enum {
		/** PathFinderStatus.Search = 0 */ static readonly Search: PathFinderStatus;
		/** PathFinderStatus.Found = 1 */ static readonly Found: PathFinderStatus;
		/** PathFinderStatus.FoundNearerPoint = 2 */ static readonly FoundNearerPoint: PathFinderStatus;
		/** PathFinderStatus.NotExist = 3 */ static readonly NotExist: PathFinderStatus;
		/** PathFinderStatus.AttemptsEnded = 4 */ static readonly AttemptsEnded: PathFinderStatus;
		/** PathFinderStatus.SearchError = 5 */ static readonly SearchError: PathFinderStatus;
	}
}
//#endregion

//#region SpeedAtCellByKnownMapDelegate
declare namespace HordeClassLibrary.PathFinders {
	interface /* delegate */ SpeedAtCellByKnownMapDelegate {
		(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		): number;
	}
	/** TypeScript type stub for .Net delegate */
	class SpeedAtCellByKnownMapDelegate { constructor(func: SpeedAtCellByKnownMapDelegate); }
}
//#endregion

//#region SpeedAtCellByRealMapDelegate
declare namespace HordeClassLibrary.PathFinders {
	interface /* delegate */ SpeedAtCellByRealMapDelegate {
		(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): number;
	}
	/** TypeScript type stub for .Net delegate */
	class SpeedAtCellByRealMapDelegate { constructor(func: SpeedAtCellByRealMapDelegate); }
}
//#endregion

//#region IsBorderDelegateOld
declare namespace HordeClassLibrary.PathFinders {
	interface /* delegate */ IsBorderDelegateOld {
		(
			x: number,
			y: number
		): boolean;
	}
	/** TypeScript type stub for .Net delegate */
	class IsBorderDelegateOld { constructor(func: IsBorderDelegateOld); }
}
//#endregion

//#region IsBorderDelegate
declare namespace HordeClassLibrary.PathFinders {
	interface /* delegate */ IsBorderDelegate {
		(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;
	}
	/** TypeScript type stub for .Net delegate */
	class IsBorderDelegate { constructor(func: IsBorderDelegate); }
}
//#endregion

//#region UnitFpqNode
declare namespace HordeClassLibrary.PathFinders {
	class UnitFpqNode
		extends System.Object /* but real BaseType out of API */
	{
		// Constructors:
		constructor(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			first: boolean
		);

		constructor();

		// Properties:
		Unit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly NeedDequeue: boolean;
		Priority: number;
		InsertionIndex: number;
		QueueIndex: number;

		// Methods:
		UpdatePriority(): void;

		Dequeue(): void;

		IncreasePriority(
			val: number
		): void;
	}
}
//#endregion

//#region ScriptWorkersRegistry
declare namespace HordeClassLibrary.Scripting.Misc {
	class ScriptWorkersRegistry extends System.Object {

		// Methods:
		Register(
			workerName: string | null,
			workerFunc: Microsoft.ClearScript.ScriptObject | null
		): void;

		Clear(): void;
	}
}
//#endregion

//#region HordeContentApi
declare namespace HordeClassLibrary.Scripting.ScriptApi {
	abstract class HordeContentApi {

		// Properties:
		static readonly ContentStamp: string;

		// Methods:
		static GetForce(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.Army.Force;

		static GetUnitConfig(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;

		static GetUnitCommand(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;

		static GetBulletConfig(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;

		static GetVisualEffectConfig(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;

		static GetSoundEffectConfig(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;

		static GetFont(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.Fonts.FontConfig;

		static GetString(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.StringConfig;

		static GetAnimationCatalog(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.BaseAnimationsCatalog;

		static GetAnimationAtlas(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlasItem;

		static GetSoundsCatalog(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog;

		static GetGuiParams(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.Interface.GuiParams;

		static GetRuleConfig(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.Rules.RuleConfig;

		static GetMindCharacter(
			uid: string | null
		): HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig;

		static GetConfig(
			cfgUid: string | null,
			configTypeName: string | null
		): HordeClassLibrary.HordeContent.Configs.AConfig;

		static HasUnitConfig(
			uid: string | null
		): boolean;

		static HasUnitCommand(
			uid: string | null
		): boolean;

		static HasBulletConfig(
			uid: string | null
		): boolean;

		static HasVisualEffectConfig(
			uid: string | null
		): boolean;

		static HasSoundEffectConfig(
			uid: string | null
		): boolean;

		static HasAnimation(
			uid: string | null
		): boolean;

		static HasSoundsCatalog(
			uid: string | null
		): boolean;

		static HasRuleConfig(
			uid: string | null
		): boolean;

		static HasMindCharacter(
			uid: string | null
		): boolean;

		static HasConfig(
			cfgUid: string | null,
			configTypeName: string | null
		): boolean;

		static CloneConfig(
			cfg: HordeClassLibrary.HordeContent.Configs.AConfig | null,
			cloneUid?: string | null /* = null */
		): HordeClassLibrary.HordeContent.Configs.AConfig;

		static AddConfig(
			cfg: HordeClassLibrary.HordeContent.Configs.AConfig | null
		): void;

		static RemoveConfig(
			cfg: HordeClassLibrary.HordeContent.Configs.AConfig | null
		): void;

		static RemoveConfig(
			uid: string | null,
			configTypeName: string | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ScriptMachineDebugApi
declare namespace HordeClassLibrary.Scripting.ScriptApi {
	class ScriptMachineDebugApi extends System.Object {

		// Methods:
		SetHotReloadOnFileChanging(
			value: boolean
		): void;

		EnablePlugin(
			pluginName: string | null,
			pluginPath: string | null,
			executeOnFirstRunMethod?: boolean /* = false */
		): void;

		EnableDebugPlugins(): void;
	}
}
//#endregion

//#region ScriptUtils
declare namespace HordeClassLibrary.Scripting.ScriptApi {
	abstract class ScriptUtils {

		// Methods:
		static SetValue(
			memberOwner: any | null,
			memberName: string | null,
			value: any | null
		): void;

		static GetValue(
			memberOwner: any | null,
			memberName: string | null
		): any;

		static GameVersionEquals(
			version: string | null
		): boolean;

		static GameVersionEqualsOrGreater(
			version: string | null
		): boolean;

		static GameVersionLesserThan(
			version: string | null
		): boolean;

		static ForEach<T>(
			$T: any,
			source: System.Collections.Generic.IEnumerable<T> | null,
			action: any | null
		): void;

		static RemoveAll<T>(
			$T: any,
			list: System.Collections.Generic.List<T> | null,
			item: T | null
		): number;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ScriptMachine.OnErrorAction
declare namespace HordeClassLibrary.Scripting.ScriptMachine {
	interface /* delegate */ OnErrorAction {
		// Can't process delegate: 'HordeClassLibrary.Scripting.ScriptMachine.OnErrorAction'
	}
}
//#endregion

//#region UnitArmament
declare namespace HordeClassLibrary.UnitComponents.BattleSystem {
	class UnitArmament extends System.Object {

		// Constructors:
		constructor(
			citadelCfg: HordeClassLibrary.HordeContent.Configs.Citadel.CitadelUnitConfig | null,
			bulletConfig: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig | null
		);

		// Properties:
		readonly BulletConfig: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
		readonly ShotParams: HordeClassLibrary.World.Objects.Bullets.ShotParams;
		readonly Range: number;
		readonly ForestRange: number;
		readonly RangeMin: number;
		readonly Levels: number;
		readonly ReloadTime: number;
		readonly BaseAccuracy: number;
		readonly MaxDistanceDispersion: number;
		readonly DisableDispersion: boolean;
		readonly EmitBulletsCountMin: number;
		readonly EmitBulletsCountMax: number;
		readonly GunCoord: System.Collections.Generic.Dictionary<HordeClassLibrary.UnitComponents.Enumerations.UnitDirection, HordeResurrection.Basic.Primitives.Geometry.Point2D>;

		// Methods:
		CanAttackTargetExt(
			target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): HordeClassLibrary.UnitComponents.Enumerations.CanNotAttackCause;

		GetLaunchPosition(
			uSource: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		GetLaunchPosition(
			uSource: HordeClassLibrary.World.Objects.Units.Unit | null,
			gunDir: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		Shot(
			uSource: HordeClassLibrary.World.Objects.Units.Unit | null,
			uTarget: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			targetLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		): void;

		static CreateArmament(
			bulletConfig: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig | null
		): HordeClassLibrary.UnitComponents.BattleSystem.UnitArmament;
	}
}
//#endregion

//#region CanNotAttackCause
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class CanNotAttackCause extends System.Enum {
		/** CanNotAttackCause.CanAttack = 0 */ static readonly CanAttack: CanNotAttackCause;
		/** CanNotAttackCause.HasNotArmament = 1 */ static readonly HasNotArmament: CanNotAttackCause;
		/** CanNotAttackCause.Building = 2 */ static readonly Building: CanNotAttackCause;
		/** CanNotAttackCause.Obstacle = 3 */ static readonly Obstacle: CanNotAttackCause;
		/** CanNotAttackCause.HiddenInForest = 4 */ static readonly HiddenInForest: CanNotAttackCause;
	}
}
//#endregion

//#region CanNotBuildReason
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class CanNotBuildReason extends System.Enum {
		/** CanNotBuildReason.CanBuild = 0 */ static readonly CanBuild: CanNotBuildReason;
		/** CanNotBuildReason.TooFarFromActiveBuildings = 1 */ static readonly TooFarFromActiveBuildings: CanNotBuildReason;
		/** CanNotBuildReason.TooFarFromCastle = 2 */ static readonly TooFarFromCastle: CanNotBuildReason;
		/** CanNotBuildReason.LandscapeBarrier = 3 */ static readonly LandscapeBarrier: CanNotBuildReason;
		/** CanNotBuildReason.UnitBarrier = 4 */ static readonly UnitBarrier: CanNotBuildReason;
	}
}
//#endregion

//#region CaptureCondition
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class CaptureCondition extends System.EnumFlags {
		/** CaptureCondition.None = 0 */ static readonly None: CaptureCondition;
		/** CaptureCondition.HealthThreshold = 1 */ static readonly HealthThreshold: CaptureCondition;
	}
}
//#endregion

//#region CompoundPart
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class CompoundPart extends System.EnumFlags {
		/** CompoundPart.Point = 0 */ static readonly Point: CompoundPart;
		/** CompoundPart.Left = 1 */ static readonly Left: CompoundPart;
		/** CompoundPart.Up = 2 */ static readonly Up: CompoundPart;
		/** CompoundPart.LeftUp = 3 */ static readonly LeftUp: CompoundPart;
		/** CompoundPart.Right = 4 */ static readonly Right: CompoundPart;
		/** CompoundPart.Horizontal = 5 */ static readonly Horizontal: CompoundPart;
		/** CompoundPart.UpRight = 6 */ static readonly UpRight: CompoundPart;
		/** CompoundPart.LeftUpRight = 7 */ static readonly LeftUpRight: CompoundPart;
		/** CompoundPart.Down = 8 */ static readonly Down: CompoundPart;
		/** CompoundPart.DownLeft = 9 */ static readonly DownLeft: CompoundPart;
		/** CompoundPart.Vertical = 10 */ static readonly Vertical: CompoundPart;
		/** CompoundPart.DownLeftUp = 11 */ static readonly DownLeftUp: CompoundPart;
		/** CompoundPart.RightDown = 12 */ static readonly RightDown: CompoundPart;
		/** CompoundPart.RightDownLeft = 13 */ static readonly RightDownLeft: CompoundPart;
		/** CompoundPart.UpRightDown = 14 */ static readonly UpRightDown: CompoundPart;
		/** CompoundPart.Center = 15 */ static readonly Center: CompoundPart;
		/** CompoundPart.UnknownFence6 = 524288 */ static readonly UnknownFence6: CompoundPart;
		/** CompoundPart.UnknownFence7 = 1048576 */ static readonly UnknownFence7: CompoundPart;
		/** CompoundPart.UnknownFence8 = 2097152 */ static readonly UnknownFence8: CompoundPart;
		/** CompoundPart.UnknownFence9 = 4194304 */ static readonly UnknownFence9: CompoundPart;
		/** CompoundPart.UnknownBridge = 8388608 */ static readonly UnknownBridge: CompoundPart;
	}
}
//#endregion

//#region PatternUnitFeature
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class PatternUnitFeature extends System.EnumFlags {
		/** PatternUnitFeature.None = 0 */ static readonly None: PatternUnitFeature;
		/** PatternUnitFeature.Idle = 1 */ static readonly Idle: PatternUnitFeature;
		/** PatternUnitFeature.HarvesterEmpty = 2 */ static readonly HarvesterEmpty: PatternUnitFeature;
		/** PatternUnitFeature.HarvesterEmptyIdle = 4 */ static readonly HarvesterEmptyIdle: PatternUnitFeature;
		/** PatternUnitFeature.HarvesterWithBeam = 8 */ static readonly HarvesterWithBeam: PatternUnitFeature;
		/** PatternUnitFeature.HarvesterWithBag = 16 */ static readonly HarvesterWithBag: PatternUnitFeature;
		/** PatternUnitFeature.HarvesterAll = 30 */ static readonly HarvesterAll: PatternUnitFeature;
		/** PatternUnitFeature.Worker = 32 */ static readonly Worker: PatternUnitFeature;
		/** PatternUnitFeature.Infantry = 64 */ static readonly Infantry: PatternUnitFeature;
		/** PatternUnitFeature.Archers = 128 */ static readonly Archers: PatternUnitFeature;
		/** PatternUnitFeature.Riders = 256 */ static readonly Riders: PatternUnitFeature;
		/** PatternUnitFeature.Mechanic = 512 */ static readonly Mechanic: PatternUnitFeature;
		/** PatternUnitFeature.Mage = 1024 */ static readonly Mage: PatternUnitFeature;
		/** PatternUnitFeature.Bird = 2048 */ static readonly Bird: PatternUnitFeature;
		/** PatternUnitFeature.UnarmedOrWorker = 4096 */ static readonly UnarmedOrWorker: PatternUnitFeature;
		/** PatternUnitFeature.Wounded = 8192 */ static readonly Wounded: PatternUnitFeature;
		/** PatternUnitFeature.HoldPosition = 16384 */ static readonly HoldPosition: PatternUnitFeature;
		/** PatternUnitFeature.DoesNotHoldPosition = 32768 */ static readonly DoesNotHoldPosition: PatternUnitFeature;
		/** PatternUnitFeature.BuildNow = 65536 */ static readonly BuildNow: PatternUnitFeature;
		/** PatternUnitFeature.DoesNotBuildNow = 131072 */ static readonly DoesNotBuildNow: PatternUnitFeature;
		/** PatternUnitFeature.All = 2147483647 */ static readonly All: PatternUnitFeature;
	}
}
//#endregion

//#region ResourceItemType
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class ResourceItemType extends System.Enum {
		/** ResourceItemType.NoResource = 0 */ static readonly NoResource: ResourceItemType;
		/** ResourceItemType.Wood = 1 */ static readonly Wood: ResourceItemType;
		/** ResourceItemType.Gold = 2 */ static readonly Gold: ResourceItemType;
		/** ResourceItemType.Metal = 3 */ static readonly Metal: ResourceItemType;
	}
}
//#endregion

//#region UnitAnimDirection
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitAnimDirection extends System.Enum {
		/** UnitAnimDirection.NoDirection = 0 */ static readonly NoDirection: UnitAnimDirection;
		/** UnitAnimDirection.Up = 1 */ static readonly Up: UnitAnimDirection;
		/** UnitAnimDirection.RightUp = 2 */ static readonly RightUp: UnitAnimDirection;
		/** UnitAnimDirection.Right = 3 */ static readonly Right: UnitAnimDirection;
		/** UnitAnimDirection.RightDown = 4 */ static readonly RightDown: UnitAnimDirection;
		/** UnitAnimDirection.Down = 5 */ static readonly Down: UnitAnimDirection;
		/** UnitAnimDirection.LeftDown = 6 */ static readonly LeftDown: UnitAnimDirection;
		/** UnitAnimDirection.Left = 7 */ static readonly Left: UnitAnimDirection;
		/** UnitAnimDirection.LeftUp = 8 */ static readonly LeftUp: UnitAnimDirection;
		/** UnitAnimDirection.CmpdPoint = 256 */ static readonly CmpdPoint: UnitAnimDirection;
		/** UnitAnimDirection.CmpdLeft = 257 */ static readonly CmpdLeft: UnitAnimDirection;
		/** UnitAnimDirection.CmpdUp = 258 */ static readonly CmpdUp: UnitAnimDirection;
		/** UnitAnimDirection.CmpdLeftUp = 259 */ static readonly CmpdLeftUp: UnitAnimDirection;
		/** UnitAnimDirection.CmpdRight = 260 */ static readonly CmpdRight: UnitAnimDirection;
		/** UnitAnimDirection.CmpdHorizontal = 261 */ static readonly CmpdHorizontal: UnitAnimDirection;
		/** UnitAnimDirection.CmpdUpRight = 262 */ static readonly CmpdUpRight: UnitAnimDirection;
		/** UnitAnimDirection.CmpdLeftUpRight = 263 */ static readonly CmpdLeftUpRight: UnitAnimDirection;
		/** UnitAnimDirection.CmpdDown = 264 */ static readonly CmpdDown: UnitAnimDirection;
		/** UnitAnimDirection.CmpdDownLeft = 265 */ static readonly CmpdDownLeft: UnitAnimDirection;
		/** UnitAnimDirection.CmpdVertical = 266 */ static readonly CmpdVertical: UnitAnimDirection;
		/** UnitAnimDirection.CmpdDownLeftUp = 267 */ static readonly CmpdDownLeftUp: UnitAnimDirection;
		/** UnitAnimDirection.CmpdRightDown = 268 */ static readonly CmpdRightDown: UnitAnimDirection;
		/** UnitAnimDirection.CmpdRightDownLeft = 269 */ static readonly CmpdRightDownLeft: UnitAnimDirection;
		/** UnitAnimDirection.CmpdUpRightDown = 270 */ static readonly CmpdUpRightDown: UnitAnimDirection;
		/** UnitAnimDirection.CmpdCenter = 271 */ static readonly CmpdCenter: UnitAnimDirection;
		/** UnitAnimDirection.CmpdUnknownFence6 = 524544 */ static readonly CmpdUnknownFence6: UnitAnimDirection;
		/** UnitAnimDirection.CmpdUnknownFence7 = 1048832 */ static readonly CmpdUnknownFence7: UnitAnimDirection;
		/** UnitAnimDirection.CmpdUnknownFence8 = 2097408 */ static readonly CmpdUnknownFence8: UnitAnimDirection;
		/** UnitAnimDirection.CmpdUnknownFence9 = 4194560 */ static readonly CmpdUnknownFence9: UnitAnimDirection;
		/** UnitAnimDirection.CmpdUnknownBridge = 8388864 */ static readonly CmpdUnknownBridge: UnitAnimDirection;
	}
}
//#endregion

//#region UnitAnimState
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitAnimState extends System.Enum {
		/** UnitAnimState.Stand = 0 */ static readonly Stand: UnitAnimState;
		/** UnitAnimState.Death = 1 */ static readonly Death: UnitAnimState;
		/** UnitAnimState.ArrowDeath = 2 */ static readonly ArrowDeath: UnitAnimState;
		/** UnitAnimState.HeavyDeath = 3 */ static readonly HeavyDeath: UnitAnimState;
		/** UnitAnimState.FireDeath = 4 */ static readonly FireDeath: UnitAnimState;
		/** UnitAnimState.Move = 5 */ static readonly Move: UnitAnimState;
		/** UnitAnimState.Attack = 6 */ static readonly Attack: UnitAnimState;
		/** UnitAnimState.Load = 7 */ static readonly Load: UnitAnimState;
		/** UnitAnimState.ChopDown = 8 */ static readonly ChopDown: UnitAnimState;
		/** UnitAnimState.Repair = 9 */ static readonly Repair: UnitAnimState;
		/** UnitAnimState.Building = 10 */ static readonly Building: UnitAnimState;
		/** UnitAnimState.Destruction = 11 */ static readonly Destruction: UnitAnimState;
	}
}
//#endregion

//#region UnitBehaviorByOrderFlag
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitBehaviorByOrderFlag extends System.EnumFlags {
		/** UnitBehaviorByOrderFlag.Normally = 0 */ static readonly Normally: UnitBehaviorByOrderFlag;
		/** UnitBehaviorByOrderFlag.AggressiveMovement = 2 */ static readonly AggressiveMovement: UnitBehaviorByOrderFlag;
		/** UnitBehaviorByOrderFlag.AggressiveCapturingMovement = 4 */ static readonly AggressiveCapturingMovement: UnitBehaviorByOrderFlag;
		/** UnitBehaviorByOrderFlag.HoldPosition = 8 */ static readonly HoldPosition: UnitBehaviorByOrderFlag;
		/** UnitBehaviorByOrderFlag.Uncontrollable = 16 */ static readonly Uncontrollable: UnitBehaviorByOrderFlag;
	}
}
//#endregion

//#region UnitDirection
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitDirection extends System.Enum {
		/** UnitDirection.NoDirection = 0 */ static readonly NoDirection: UnitDirection;
		/** UnitDirection.Up = 1 */ static readonly Up: UnitDirection;
		/** UnitDirection.RightUp = 2 */ static readonly RightUp: UnitDirection;
		/** UnitDirection.Right = 3 */ static readonly Right: UnitDirection;
		/** UnitDirection.RightDown = 4 */ static readonly RightDown: UnitDirection;
		/** UnitDirection.Down = 5 */ static readonly Down: UnitDirection;
		/** UnitDirection.LeftDown = 6 */ static readonly LeftDown: UnitDirection;
		/** UnitDirection.Left = 7 */ static readonly Left: UnitDirection;
		/** UnitDirection.LeftUp = 8 */ static readonly LeftUp: UnitDirection;
	}
}
//#endregion

//#region UnitEffectFlag
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitEffectFlag extends System.EnumFlags {
		/** UnitEffectFlag.None = 0 */ static readonly None: UnitEffectFlag;
		/** UnitEffectFlag.Reserved = 1 */ static readonly Reserved: UnitEffectFlag;
		/** UnitEffectFlag.HiddenInForest = 2 */ static readonly HiddenInForest: UnitEffectFlag;
		/** UnitEffectFlag.Walkable = 4 */ static readonly Walkable: UnitEffectFlag;
		/** UnitEffectFlag.BuildingInProgress = 8 */ static readonly BuildingInProgress: UnitEffectFlag;
		/** UnitEffectFlag.RepairInProgress = 16 */ static readonly RepairInProgress: UnitEffectFlag;
		/** UnitEffectFlag.Burning = 32 */ static readonly Burning: UnitEffectFlag;
		/** UnitEffectFlag.SinglyChoosable = 64 */ static readonly SinglyChoosable: UnitEffectFlag;
		/** UnitEffectFlag.NotChoosable = 128 */ static readonly NotChoosable: UnitEffectFlag;
		/** UnitEffectFlag.InContainer = 256 */ static readonly InContainer: UnitEffectFlag;
	}
}
//#endregion

//#region UnitEventFlag
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitEventFlag extends System.EnumFlags {
		/** UnitEventFlag.None = 0 */ static readonly None: UnitEventFlag;
		/** UnitEventFlag.Deletion = 1 */ static readonly Deletion: UnitEventFlag;
		/** UnitEventFlag.Death = 2 */ static readonly Death: UnitEventFlag;
		/** UnitEventFlag.DummyStateChanged = 4 */ static readonly DummyStateChanged: UnitEventFlag;
		/** UnitEventFlag.NearDeath = 8 */ static readonly NearDeath: UnitEventFlag;
		/** UnitEventFlag.CauseDamage = 16 */ static readonly CauseDamage: UnitEventFlag;
		/** UnitEventFlag.TakeDamage = 32 */ static readonly TakeDamage: UnitEventFlag;
		/** UnitEventFlag.TakeDamageByUnknownSource = 64 */ static readonly TakeDamageByUnknownSource: UnitEventFlag;
		/** UnitEventFlag.ComradeIsAttacked = 128 */ static readonly ComradeIsAttacked: UnitEventFlag;
		/** UnitEventFlag.MoveAwayRequest = 256 */ static readonly MoveAwayRequest: UnitEventFlag;
		/** UnitEventFlag.OwnerChanged = 512 */ static readonly OwnerChanged: UnitEventFlag;
		/** UnitEventFlag.HealthChanged = 1024 */ static readonly HealthChanged: UnitEventFlag;
		/** UnitEventFlag.LifeStateChanged = 2048 */ static readonly LifeStateChanged: UnitEventFlag;
		/** UnitEventFlag.OrderChanged = 4096 */ static readonly OrderChanged: UnitEventFlag;
		/** UnitEventFlag.BuildingComplete = 8192 */ static readonly BuildingComplete: UnitEventFlag;
		/** UnitEventFlag.MovedToCell = 16384 */ static readonly MovedToCell: UnitEventFlag;
		/** UnitEventFlag.Replaced = 32768 */ static readonly Replaced: UnitEventFlag;
	}
}
//#endregion

//#region UnitFlags
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitFlags extends System.EnumFlags {
		/** UnitFlags.None = 0 */ static readonly None: UnitFlags;
		/** UnitFlags.Walkable = 2 */ static readonly Walkable: UnitFlags;
		/** UnitFlags.NotChoosable = 4 */ static readonly NotChoosable: UnitFlags;
		/** UnitFlags.Building = 8 */ static readonly Building: UnitFlags;
		/** UnitFlags.Lifeless = 16 */ static readonly Lifeless: UnitFlags;
		/** UnitFlags.Passive = 32 */ static readonly Passive: UnitFlags;
		/** UnitFlags.Auxiliary = 64 */ static readonly Auxiliary: UnitFlags;
		/** UnitFlags.Compound = 128 */ static readonly Compound: UnitFlags;
		/** UnitFlags.CanCapture = 4096 */ static readonly CanCapture: UnitFlags;
		/** UnitFlags.f13 = 8192 */ static readonly f13: UnitFlags;
		/** UnitFlags.FireResistant = 16384 */ static readonly FireResistant: UnitFlags;
		/** UnitFlags.NonBrokeble = 32768 */ static readonly NonBrokeble: UnitFlags;
		/** UnitFlags.f17 = 131072 */ static readonly f17: UnitFlags;
		/** UnitFlags.NotPlaced = 262144 */ static readonly NotPlaced: UnitFlags;
		/** UnitFlags.Invisible = 524288 */ static readonly Invisible: UnitFlags;
		/** UnitFlags.Flying = 1048576 */ static readonly Flying: UnitFlags;
		/** UnitFlags.Storage = 2097152 */ static readonly Storage: UnitFlags;
		/** UnitFlags.Dangerous = 4194304 */ static readonly Dangerous: UnitFlags;
		/** UnitFlags.MultiArm = 8388608 */ static readonly MultiArm: UnitFlags;
		/** UnitFlags.NoTake = 16777216 */ static readonly NoTake: UnitFlags;
		/** UnitFlags.NoDisease = 33554432 */ static readonly NoDisease: UnitFlags;
		/** UnitFlags.MagicResistant = 67108864 */ static readonly MagicResistant: UnitFlags;
		/** UnitFlags.Timid = 134217728 */ static readonly Timid: UnitFlags;
	}
}
//#endregion

//#region UnitGrayFogBehavior
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitGrayFogBehavior extends System.Enum {
		/** UnitGrayFogBehavior.Hide = 0 */ static readonly Hide: UnitGrayFogBehavior;
		/** UnitGrayFogBehavior.KeepState = 1 */ static readonly KeepState: UnitGrayFogBehavior;
	}
}
//#endregion

//#region UnitHealthLevel
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitHealthLevel extends System.Enum {
		/** UnitHealthLevel.Low = 0 */ static readonly Low: UnitHealthLevel;
		/** UnitHealthLevel.Medium = 1 */ static readonly Medium: UnitHealthLevel;
		/** UnitHealthLevel.Good = 2 */ static readonly Good: UnitHealthLevel;
	}
}
//#endregion

//#region UnitHurtType
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitHurtType extends System.Enum {
		/** UnitHurtType.Mele = 0 */ static readonly Mele: UnitHurtType;
		/** UnitHurtType.Any = 0 */ static readonly Any: UnitHurtType;
		/** UnitHurtType.Arrow = 1 */ static readonly Arrow: UnitHurtType;
		/** UnitHurtType.Heavy = 2 */ static readonly Heavy: UnitHurtType;
		/** UnitHurtType.Fire = 3 */ static readonly Fire: UnitHurtType;
	}
}
//#endregion

//#region UnitLifeState
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitLifeState extends System.Enum {
		/** UnitLifeState.Alive = 0 */ static readonly Alive: UnitLifeState;
		/** UnitLifeState.NearDeath = 1 */ static readonly NearDeath: UnitLifeState;
		/** UnitLifeState.Dead = 2 */ static readonly Dead: UnitLifeState;
	}
}
//#endregion

//#region UnitMapLayer
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitMapLayer extends System.Enum {
		/** UnitMapLayer.Floor = 0 */ static readonly Floor: UnitMapLayer;
		/** UnitMapLayer.Main = 1 */ static readonly Main: UnitMapLayer;
		/** UnitMapLayer.Sky = 2 */ static readonly Sky: UnitMapLayer;
	}
}
//#endregion

//#region UnitMoveType
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitMoveType extends System.Enum {
		/** UnitMoveType.OnlyPlain = 0 */ static readonly OnlyPlain: UnitMoveType;
		/** UnitMoveType.OnlyForest = 1 */ static readonly OnlyForest: UnitMoveType;
		/** UnitMoveType.OnlyWater = 2 */ static readonly OnlyWater: UnitMoveType;
		/** UnitMoveType.PlainAndForest = 3 */ static readonly PlainAndForest: UnitMoveType;
		/** UnitMoveType.NoMove = 4 */ static readonly NoMove: UnitMoveType;
	}
}
//#endregion

//#region UnitNotificationFlag
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitNotificationFlag extends System.EnumFlags {
		/** UnitNotificationFlag.None = 0 */ static readonly None: UnitNotificationFlag;
		/** UnitNotificationFlag.Alarm = 1 */ static readonly Alarm: UnitNotificationFlag;
		/** UnitNotificationFlag.Threat = 2 */ static readonly Threat: UnitNotificationFlag;
		/** UnitNotificationFlag.Tactic = 4 */ static readonly Tactic: UnitNotificationFlag;
		/** UnitNotificationFlag.Other = 8 */ static readonly Other: UnitNotificationFlag;
		/** UnitNotificationFlag.ComradeIsWounded = 16 */ static readonly ComradeIsWounded: UnitNotificationFlag;
	}
}
//#endregion

//#region UnitProfession
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitProfession extends System.EnumFlags {
		/** UnitProfession.None = 0 */ static readonly None: UnitProfession;
		/** UnitProfession.Leader = 1 */ static readonly Leader: UnitProfession;
		/** UnitProfession.Castle = 2 */ static readonly Castle: UnitProfession;
		/** UnitProfession.Housing = 4 */ static readonly Housing: UnitProfession;
		/** UnitProfession.Sawmill = 8 */ static readonly Sawmill: UnitProfession;
		/** UnitProfession.Mine = 16 */ static readonly Mine: UnitProfession;
		/** UnitProfession.MetalStock = 32 */ static readonly MetalStock: UnitProfession;
		/** UnitProfession.Laboratory = 64 */ static readonly Laboratory: UnitProfession;
		/** UnitProfession.ProductionEnhancer = 128 */ static readonly ProductionEnhancer: UnitProfession;
		/** UnitProfession.Harvester = 256 */ static readonly Harvester: UnitProfession;
		/** UnitProfession.UnitProducer = 512 */ static readonly UnitProducer: UnitProfession;
		/** UnitProfession.Capturable = 1024 */ static readonly Capturable: UnitProfession;
		/** UnitProfession.Movable = 2048 */ static readonly Movable: UnitProfession;
		/** UnitProfession.Reparable = 4096 */ static readonly Reparable: UnitProfession;
		/** UnitProfession.Compound = 8192 */ static readonly Compound: UnitProfession;
	}
}
//#endregion

//#region UnitQueryFlag
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitQueryFlag extends System.EnumFlags {
		/** UnitQueryFlag.None = 0 */ static readonly None: UnitQueryFlag;
		/** UnitQueryFlag.HarmlessCapturable = 2 */ static readonly HarmlessCapturable: UnitQueryFlag;
		/** UnitQueryFlag.HarmlessNonCapturable = 4 */ static readonly HarmlessNonCapturable: UnitQueryFlag;
		/** UnitQueryFlag.HarmlessAny = 6 */ static readonly HarmlessAny: UnitQueryFlag;
		/** UnitQueryFlag.CanAttackTarget = 8 */ static readonly CanAttackTarget: UnitQueryFlag;
		/** UnitQueryFlag.OnlyInAttackRange = 16 */ static readonly OnlyInAttackRange: UnitQueryFlag;
		/** UnitQueryFlag.NearDeathWarriors = 32 */ static readonly NearDeathWarriors: UnitQueryFlag;
		/** UnitQueryFlag.NearDeathCapturableMachines = 64 */ static readonly NearDeathCapturableMachines: UnitQueryFlag;
		/** UnitQueryFlag.NearDeathCapturableTowers = 128 */ static readonly NearDeathCapturableTowers: UnitQueryFlag;
		/** UnitQueryFlag.NearDeathCapturableBuildings = 256 */ static readonly NearDeathCapturableBuildings: UnitQueryFlag;
		/** UnitQueryFlag.NearDeathCapturable = 448 */ static readonly NearDeathCapturable: UnitQueryFlag;
		/** UnitQueryFlag.NearDeathBuildings = 512 */ static readonly NearDeathBuildings: UnitQueryFlag;
		/** UnitQueryFlag.NearDeathAny = 992 */ static readonly NearDeathAny: UnitQueryFlag;
		/** UnitQueryFlag.Buildings = 1024 */ static readonly Buildings: UnitQueryFlag;
		/** UnitQueryFlag.FireResistant = 2048 */ static readonly FireResistant: UnitQueryFlag;
		/** UnitQueryFlag.HiddenInForest = 4096 */ static readonly HiddenInForest: UnitQueryFlag;
		/** UnitQueryFlag.ConsiderComebackCell = 8192 */ static readonly ConsiderComebackCell: UnitQueryFlag;
	}
}
//#endregion

//#region UnitSpecification
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitSpecification extends System.EnumFlags {
		/** UnitSpecification.None = 0 */ static readonly None: UnitSpecification;
		/** UnitSpecification.Leader = 1 */ static readonly Leader: UnitSpecification;
		/** UnitSpecification.Worker = 2 */ static readonly Worker: UnitSpecification;
		/** UnitSpecification.Infantry = 4 */ static readonly Infantry: UnitSpecification;
		/** UnitSpecification.Range = 8 */ static readonly Range: UnitSpecification;
		/** UnitSpecification.Rider = 16 */ static readonly Rider: UnitSpecification;
		/** UnitSpecification.Machine = 32 */ static readonly Machine: UnitSpecification;
		/** UnitSpecification.Mage = 64 */ static readonly Mage: UnitSpecification;
		/** UnitSpecification.Bird = 128 */ static readonly Bird: UnitSpecification;
		/** UnitSpecification.House = 256 */ static readonly House: UnitSpecification;
		/** UnitSpecification.Sawmill = 512 */ static readonly Sawmill: UnitSpecification;
		/** UnitSpecification.Mine = 1024 */ static readonly Mine: UnitSpecification;
		/** UnitSpecification.MetalStock = 2048 */ static readonly MetalStock: UnitSpecification;
		/** UnitSpecification.Castle = 4096 */ static readonly Castle: UnitSpecification;
		/** UnitSpecification.Barracks = 8192 */ static readonly Barracks: UnitSpecification;
		/** UnitSpecification.Factory = 16384 */ static readonly Factory: UnitSpecification;
		/** UnitSpecification.Stables = 32768 */ static readonly Stables: UnitSpecification;
		/** UnitSpecification.Lab = 65536 */ static readonly Lab: UnitSpecification;
		/** UnitSpecification.Tent = 131072 */ static readonly Tent: UnitSpecification;
		/** UnitSpecification.Mill = 262144 */ static readonly Mill: UnitSpecification;
		/** UnitSpecification.Church = 524288 */ static readonly Church: UnitSpecification;
		/** UnitSpecification.Obstacle = 1048576 */ static readonly Obstacle: UnitSpecification;
		/** UnitSpecification.Gate = 2097152 */ static readonly Gate: UnitSpecification;
		/** UnitSpecification.Bridge = 4194304 */ static readonly Bridge: UnitSpecification;
		/** UnitSpecification.DefensiveStructure = 8388608 */ static readonly DefensiveStructure: UnitSpecification;
		/** UnitSpecification.DevelopmentBooster = 16777216 */ static readonly DevelopmentBooster: UnitSpecification;
		/** UnitSpecification.MaxGrowthSpeedIncrease = 33554432 */ static readonly MaxGrowthSpeedIncrease: UnitSpecification;
	}
}
//#endregion

//#region UnitState
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitState extends System.Enum {
		/** UnitState.Stay = 0 */ static readonly Stay: UnitState;
		/** UnitState.Turn = 1 */ static readonly Turn: UnitState;
		/** UnitState.Move = 2 */ static readonly Move: UnitState;
		/** UnitState.Hit = 3 */ static readonly Hit: UnitState;
		/** UnitState.Capture = 4 */ static readonly Capture: UnitState;
		/** UnitState.HoldPosition = 5 */ static readonly HoldPosition: UnitState;
		/** UnitState.Reload = 6 */ static readonly Reload: UnitState;
		/** UnitState.ChopDown = 7 */ static readonly ChopDown: UnitState;
		/** UnitState.TransferResource = 8 */ static readonly TransferResource: UnitState;
		/** UnitState.GatherResource = 9 */ static readonly GatherResource: UnitState;
		/** UnitState.PreBuild = 10 */ static readonly PreBuild: UnitState;
		/** UnitState.Build = 11 */ static readonly Build: UnitState;
		/** UnitState.Repair = 12 */ static readonly Repair: UnitState;
		/** UnitState.BuildSelf = 13 */ static readonly BuildSelf: UnitState;
		/** UnitState.RepairSelf = 14 */ static readonly RepairSelf: UnitState;
		/** UnitState.Produce = 15 */ static readonly Produce: UnitState;
		/** UnitState.ProduceAt = 16 */ static readonly ProduceAt: UnitState;
		/** UnitState.Fly = 17 */ static readonly Fly: UnitState;
		/** UnitState.Flit = 18 */ static readonly Flit: UnitState;
		/** UnitState.FTurn = 19 */ static readonly FTurn: UnitState;
		/** UnitState.Wait = 20 */ static readonly Wait: UnitState;
		/** UnitState.PathFinding = 21 */ static readonly PathFinding: UnitState;
		/** UnitState.WaitForOrders = 22 */ static readonly WaitForOrders: UnitState;
		/** UnitState.Death = 23 */ static readonly Death: UnitState;
		/** UnitState.DestroySelf = 24 */ static readonly DestroySelf: UnitState;
		/** UnitState.Deleted = 25 */ static readonly Deleted: UnitState;
		/** UnitState.Custom = 26 */ static readonly Custom: UnitState;
		/** UnitState.Unknown = 27 */ static readonly Unknown: UnitState;
	}
}
//#endregion

//#region UnitVisibility
declare namespace HordeClassLibrary.UnitComponents.Enumerations {
	abstract class UnitVisibility extends System.Enum {
		/** UnitVisibility.Visible = 0 */ static readonly Visible: UnitVisibility;
		/** UnitVisibility.VisibleInForest = 1 */ static readonly VisibleInForest: UnitVisibility;
		/** UnitVisibility.Invisible = 2 */ static readonly Invisible: UnitVisibility;
	}
}
//#endregion

//#region BaseUnitEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	abstract class BaseUnitEventArgs
		extends System.EventArgs
	{
		// Properties:
		readonly EventFlag: HordeClassLibrary.UnitComponents.Enumerations.UnitEventFlag;
		readonly TriggeredUnit: HordeClassLibrary.World.Objects.Units.Unit;

		// Methods:
		DebugCheckPool(): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region CauseDamageEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class CauseDamageEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly VictimUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly Damage: number;
		readonly EffectiveDamage: number;
		readonly HurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			victimUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			dmg: number,
			eDmg: number,
			hurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): HordeClassLibrary.UnitComponents.EventArgs.CauseDamageEventArgs;
	}
}
//#endregion

//#region ComradeIsAttackedEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class ComradeIsAttackedEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly AttackerUnit: HordeClassLibrary.World.Objects.Units.Unit;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			attacker: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.EventArgs.ComradeIsAttackedEventArgs;
	}
}
//#endregion

//#region MoveAwayRequestEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class MoveAwayRequestEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly RequesterUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly RequestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			requesterUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			requestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.UnitComponents.EventArgs.MoveAwayRequestEventArgs;
	}
}
//#endregion

//#region MoveOutRequestEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class MoveOutRequestEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly RequesterUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly FinishSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			requesterUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			finishSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		): HordeClassLibrary.UnitComponents.EventArgs.MoveOutRequestEventArgs;
	}
}
//#endregion

//#region StepAwayRequestEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class StepAwayRequestEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly RequesterUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly RequestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly SuggestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			requesterUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			requestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			suggestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.UnitComponents.EventArgs.StepAwayRequestEventArgs;
	}
}
//#endregion

//#region TakeDamageByUnknownSourceEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class TakeDamageByUnknownSourceEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly DamageSourceCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly Damage: number;
		readonly HurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			damageSourceCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			dmg: number,
			hurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): HordeClassLibrary.UnitComponents.EventArgs.TakeDamageByUnknownSourceEventArgs;
	}
}
//#endregion

//#region TakeDamageEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class TakeDamageEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly AttackerUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly Damage: number;
		readonly HurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			attackerUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			dmg: number,
			hurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): HordeClassLibrary.UnitComponents.EventArgs.TakeDamageEventArgs;
	}
}
//#endregion

//#region UnitBuildingCompleteEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class UnitBuildingCompleteEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.EventArgs.UnitBuildingCompleteEventArgs;
	}
}
//#endregion

//#region UnitDeathEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class UnitDeathEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.EventArgs.UnitDeathEventArgs;
	}
}
//#endregion

//#region UnitDeletionEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class UnitDeletionEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.EventArgs.UnitDeletionEventArgs;
	}
}
//#endregion

//#region UnitDummyStateChangedEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class UnitDummyStateChangedEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.EventArgs.UnitDummyStateChangedEventArgs;
	}
}
//#endregion

//#region UnitHealthChangedEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class UnitHealthChangedEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly OldHealth: number;
		readonly NewHealth: number;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			oldHealth: number,
			newHealth: number
		): HordeClassLibrary.UnitComponents.EventArgs.UnitHealthChangedEventArgs;
	}
}
//#endregion

//#region UnitLifeStateChangedEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class UnitLifeStateChangedEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly OldState: HordeClassLibrary.UnitComponents.Enumerations.UnitLifeState;
		readonly NewState: HordeClassLibrary.UnitComponents.Enumerations.UnitLifeState;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			oldState: HordeClassLibrary.UnitComponents.Enumerations.UnitLifeState,
			newState: HordeClassLibrary.UnitComponents.Enumerations.UnitLifeState
		): HordeClassLibrary.UnitComponents.EventArgs.UnitLifeStateChangedEventArgs;
	}
}
//#endregion

//#region UnitMovedToCellEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class UnitMovedToCellEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly OldCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly NewCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			oldCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			newCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.UnitComponents.EventArgs.UnitMovedToCellEventArgs;
	}
}
//#endregion

//#region UnitNearDeathEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class UnitNearDeathEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.EventArgs.UnitNearDeathEventArgs;
	}
}
//#endregion

//#region UnitOrderChangedEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class UnitOrderChangedEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.EventArgs.UnitOrderChangedEventArgs;
	}
}
//#endregion

//#region UnitOwnerChangedEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class UnitOwnerChangedEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly OldOwner: HordeClassLibrary.World.Settlements.Settlement;
		readonly NewOwner: HordeClassLibrary.World.Settlements.Settlement;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			oldOwner: HordeClassLibrary.World.Settlements.Settlement | null,
			newOwner: HordeClassLibrary.World.Settlements.Settlement | null
		): HordeClassLibrary.UnitComponents.EventArgs.UnitOwnerChangedEventArgs;
	}
}
//#endregion

//#region UnitReplacedEventArgs
declare namespace HordeClassLibrary.UnitComponents.EventArgs {
	class UnitReplacedEventArgs
		extends HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs
	{
		// Properties:
		readonly ReplacedBy: HordeClassLibrary.World.Objects.Units.Unit;

		// Methods:
		static Get(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			newUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.EventArgs.UnitReplacedEventArgs;
	}
}
//#endregion

//#region UnitEventHandler
declare namespace HordeClassLibrary.UnitComponents.Events {
	interface /* delegate */ UnitEventHandler {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			args: HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs | null
		): void;
	}
	/** TypeScript type stub for .Net delegate */
	class UnitEventHandler { constructor(func: UnitEventHandler); }
}
//#endregion

//#region AUnitMind
declare namespace HordeClassLibrary.UnitComponents.Minds {
	abstract class AUnitMind extends System.Object {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BattleMind
declare namespace HordeClassLibrary.UnitComponents.Minds {
	class BattleMind
		extends HordeClassLibrary.UnitComponents.Minds.AUnitMind
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly SelectedArmament: HordeClassLibrary.UnitComponents.BattleSystem.UnitArmament;

		// Methods:
		CauseDamage(
			target: HordeClassLibrary.World.Objects.Units.Unit | null,
			dmg: number,
			hurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): number;

		CauseEffectiveDamage(
			target: HordeClassLibrary.World.Objects.Units.Unit | null,
			eDmg1: number,
			hurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): number;

		CalculateCausedEffectiveDamage(
			target: HordeClassLibrary.World.Objects.Units.Unit | null,
			aDmg: number
		): number;

		CalculateTakenEffectiveDamage(
			aDmg: number
		): number;

		TakeDamage(
			aDmg: number,
			hurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): number;

		TakeUnknownSourceEffectiveDamage(
			effectiveDmg: number,
			hurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): void;

		InstantKill(
			target: HordeClassLibrary.World.Objects.Units.Unit | null,
			hurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType,
			immediateDeathProcessing?: boolean /* = false */
		): number;

		InstantDeath(
			attacker: HordeClassLibrary.World.Objects.Units.Unit | null,
			hurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType,
			immediateDeathProcessing?: boolean /* = false */
		): number;

		CanBeCapturedNow(): boolean;

		CanBeCapturedNowAndHarmless(): boolean;

		CanCaptureNow(
			target: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		CanCaptureNow(
			target: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		): boolean;

		CanCaptureNow(
			target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): boolean;

		CanCapture(
			target: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		CanAutoCaptureNow(
			target: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		GetCapturer(): HordeClassLibrary.World.Objects.Units.Unit;

		IsCaptureInProgress(): boolean;

		IsCapturedNow(): boolean;

		IsUnarmed(): boolean;

		IsHarmless(): boolean;

		IsTurnedToTarget(
			target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): boolean;

		CanAttackTargetExt(
			target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): HordeClassLibrary.UnitComponents.Enumerations.CanNotAttackCause;

		CanAttackTarget(
			target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): boolean;

		IsTargetInAttackRange(
			target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): boolean;

		GetPointsForAttack(
			target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): HordeResurrection.Basic.Pool.PoolSlot<System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>> | null;

		CanRunOverUnit(
			target: HordeClassLibrary.World.Objects.Units.Unit | null,
			runOverCell?: HordeResurrection.Basic.Primitives.Geometry.Point2D | null /* = null */
		): boolean;

		CanComeAroundToTarget(
			target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null,
			pushAwayAllowed: boolean
		): boolean | null;
	}
}
//#endregion

//#region CommandsMind
declare namespace HordeClassLibrary.UnitComponents.Minds {
	class CommandsMind
		extends HordeClassLibrary.UnitComponents.Minds.AUnitMind
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Fields:
		static readonly AllCommandsSet: System.Collections.Generic.HashSet<HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand>;
		static readonly DisallowCommandsOnNearDeathList: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand[];

		// Methods:
		TryGetCommandConfig(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			/*out*/ cmdCfg: HordeClassLibrary.HordeContent.Configs.UnitCommandConfig | null
		): boolean;

		IsCommandAllowed(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		): boolean;

		GetEffectiveCommandsSet(): HordeResurrection.Basic.Pool.IPoolSlot<System.Collections.Generic.HashSet<HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand>>;

		GetEffectiveCommandsDict(): HordeResurrection.Basic.Pool.IPoolSlot<System.Collections.Generic.Dictionary<HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand, HordeClassLibrary.HordeContent.Configs.UnitCommandConfig>>;

		AddCommand(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			cmdCfg: HordeClassLibrary.HordeContent.Configs.UnitCommandConfig | null
		): void;

		RemoveAddedCommand(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		): void;

		DisallowCommands(
			commands: System.Collections.Generic.IEnumerable<HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand> | null
		): void;

		DisallowCommand(
			uCmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			raiseEvents?: boolean /* = true */
		): boolean;

		AllowDisallowedCommands(
			commands: System.Collections.Generic.IEnumerable<HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand> | null
		): void;

		AllowDisallowedCommand(
			uCmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			raiseEvents?: boolean /* = true */
		): boolean;

		IsCommandDisallowed(
			uCmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		): boolean;

		ResetCommands(): void;

		UpdateCancelCommand(): void;

		HideCommand(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		): void;

		ShowCommand(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		): void;

		IsCommandHidden(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		): boolean;

		IsAutomatedCommand(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		): boolean;

		HasAutomatedCommand(): boolean;

		AddAutomatedCommand(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode,
			forceMode?: boolean /* = false */
		): void;

		RemoveAutomatedCommand(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode,
			forceMode?: boolean /* = false */
		): void;

		EnumerateAutomatedCommands(): System.Collections.Generic.IEnumerable<HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand>;

		CopyAutoCommandsFrom(
			otherUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		static GetAllCommandsExcept(
			exclude: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand[] | null
		): HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand[];

		// Events:
		EffectiveCommandsChanged: EventSource<System.EventHandler<any>>;
		AutomaticCommandModeChanged: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.Minds.CommandsMind.AutomaticCommandModeChangedEventArgs>>;
	}
}
//#endregion

//#region CommandsMind.AutomaticCommandModeChangedEventArgs
declare namespace HordeClassLibrary.UnitComponents.Minds.CommandsMind {
	class /* struct */ AutomaticCommandModeChangedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.UnitComponents.Minds.CommandsMind.AutomaticCommandModeChangedEventArgs>
	{
		// Constructors:
		constructor(
			Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			IsAutomated: boolean
		);

		// Properties:
		Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		IsAutomated: boolean;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region CommunicationMind
declare namespace HordeClassLibrary.UnitComponents.Minds {
	class CommunicationMind
		extends HordeClassLibrary.UnitComponents.Minds.AUnitMind
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Methods:
		GetAllNearestEnemies(
			allowedQueryFlags: HordeClassLibrary.UnitComponents.Enumerations.UnitQueryFlag,
			range: number
		): System.Collections.Generic.IReadOnlyList<HordeClassLibrary.World.Objects.Units.Unit>;

		GetNearestEnemy(
			allowedQueryFlags: HordeClassLibrary.UnitComponents.Enumerations.UnitQueryFlag,
			maxRangeNullable?: number | null /* = null */
		): HordeClassLibrary.World.Objects.Units.Unit;

		CallForHelp(
			attacker: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		GetNearestRepairTarget(): HordeClassLibrary.World.Objects.Units.Unit;

		FilterNearestUnitsAndDo(
			radius: number,
			filterCallback: HordeClassLibrary.UnitComponents.Minds.CommunicationMind.FilterCallbackDelegate | null,
			filterPassCallback: HordeClassLibrary.UnitComponents.Minds.CommunicationMind.FilterPassCallbackDelegate | null,
			center?: HordeResurrection.Basic.Primitives.Geometry.Point2D | null /* = null */,
			centerSize?: HordeResurrection.Basic.Primitives.Geometry.Size2D | null /* = null */
		): void;
	}
}
//#endregion

//#region CommunicationMind.FilterCallbackDelegate
declare namespace HordeClassLibrary.UnitComponents.Minds.CommunicationMind {
	interface /* delegate */ FilterCallbackDelegate {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			uX: number,
			uY: number,
			uL: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		): boolean;
	}
	/** TypeScript type stub for .Net delegate */
	class FilterCallbackDelegate { constructor(func: FilterCallbackDelegate); }
}
//#endregion

//#region CommunicationMind.FilterPassCallbackDelegate
declare namespace HordeClassLibrary.UnitComponents.Minds.CommunicationMind {
	interface /* delegate */ FilterPassCallbackDelegate {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			uX: number,
			uY: number,
			uL: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		): void;
	}
	/** TypeScript type stub for .Net delegate */
	class FilterPassCallbackDelegate { constructor(func: FilterPassCallbackDelegate); }
}
//#endregion

//#region EffectsMind
declare namespace HordeClassLibrary.UnitComponents.Minds {
	class EffectsMind
		extends HordeClassLibrary.UnitComponents.Minds.AUnitMind
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly Effects: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag;
		readonly HiddenInForest: boolean;
		readonly BuildingInProgress: boolean;
		readonly InContainer: boolean;

		// Methods:
		HasEffect(
			flags: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag
		): boolean;

		AddEffect(
			flags: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag
		): void;

		RemoveEffect(
			flags: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag
		): void;

		RefreshAllEffects(): void;

		UpdateEffectsByLandscape(): void;

		UpdateEffectOnHealthChanging(): void;

		UpdateEffectsOnLifeStateChanging(): void;

		SetBuildingInProgressEffect(): void;

		RemoveBuildingInProgressEffect(): void;

		SetRepairInProgressEffect(): void;

		RemoveRepairInProgressEffect(): void;

		BurningIncrease(): void;

		BurningDecrease(): void;

		SetWalkableEffect(): void;

		RemoveWalkableEffect(): void;

		UpdateOnGameTick(): void;

		ProcessDeath(): void;

		// Events:
		EffectChanged: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.Minds.EffectsMind.EffectChangedEventArgs>>;
	}
}
//#endregion

//#region EffectsMind.EffectChangedEventArgs
declare namespace HordeClassLibrary.UnitComponents.Minds.EffectsMind {
	class /* struct */ EffectChangedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.UnitComponents.Minds.EffectsMind.EffectChangedEventArgs>
	{
		// Constructors:
		constructor(
			TriggeredUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			OldEffects: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag,
			NewEffects: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag
		);

		// Properties:
		TriggeredUnit: HordeClassLibrary.World.Objects.Units.Unit;
		OldEffects: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag;
		NewEffects: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag;

		// Methods:
		IsAdded(
			effect: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag
		): boolean;

		IsRemoved(
			effect: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag
		): boolean;

		IsChanged(
			effect: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag
		): boolean;

		IsChangedOneOf(
			effect: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag
		): boolean;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region EventsMind
declare namespace HordeClassLibrary.UnitComponents.Minds {
	class EventsMind
		extends HordeClassLibrary.UnitComponents.Minds.AUnitMind
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly LastFrameEventFlags: HordeClassLibrary.UnitComponents.Enumerations.UnitEventFlag;

		// Methods:
		AddEvent(
			eventArgs: HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs | null
		): void;

		ClearFrameEvents(): void;

		HasLastFrameEvents(
			eventFlag: HordeClassLibrary.UnitComponents.Enumerations.UnitEventFlag
		): boolean;

		ProcessDeath(): void;

		GetNearestAttacker(): HordeClassLibrary.World.Objects.Units.Unit;

		GetTakeDamageByUnknownSourceEvent(): HordeClassLibrary.UnitComponents.EventArgs.TakeDamageByUnknownSourceEventArgs;

		GetNearestComradeAttackedEvent(): HordeClassLibrary.UnitComponents.EventArgs.ComradeIsAttackedEventArgs;

		GetNearDeathEvent(): HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs;

		GetMoveAwayRequestEvent(): HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs;

		// Events:
		Deletion: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitDeletionEventArgs>>;
		Death: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitDeathEventArgs>>;
		DummyStateChanged: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitDummyStateChangedEventArgs>>;
		OwnerChanged: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitOwnerChangedEventArgs>>;
		HealthChanged: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitHealthChangedEventArgs>>;
		OrderChanged: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitOrderChangedEventArgs>>;
		LifeStateChanged: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitLifeStateChangedEventArgs>>;
		BuildingComplete: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitBuildingCompleteEventArgs>>;
		UnitMovedToCell: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitMovedToCellEventArgs>>;
		Replaced: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitReplacedEventArgs>>;
		CauseDamage: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.CauseDamageEventArgs>>;
		TakeDamage: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.TakeDamageEventArgs>>;
		TakeDamageByUnknownSource: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.TakeDamageByUnknownSourceEventArgs>>;
	}
}
//#endregion

//#region InstinctsMind
declare namespace HordeClassLibrary.UnitComponents.Minds {
	class InstinctsMind
		extends HordeClassLibrary.UnitComponents.Minds.AUnitMind
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		MainAlarm: HordeClassLibrary.UnitComponents.Notifications.Alarms.BaseUnitAlarm;
		MainThreat: HordeClassLibrary.UnitComponents.Notifications.Threats.BaseUnitThreat;
		PanikCause: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification;
		SideAction: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification;

		// Methods:
		UpdateOnGameTick(): void;

		ProcessTeleportation(): void;

		ProcessDeath(): void;
	}
}
//#endregion

//#region MapMind
declare namespace HordeClassLibrary.UnitComponents.Minds {
	class MapMind
		extends HordeClassLibrary.UnitComponents.Minds.AUnitMind
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			positionModel: HordeClassLibrary.World.Objects.Units.UnitPositionModel | null
		);

		// Properties:
		/* writeonly */ Position: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		/* writeonly */ Direction: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;
		readonly CurrentContainer: HordeClassLibrary.World.Objects.Units.Unit;

		// Methods:
		ProcessDeath(): void;

		ForceSetCell(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		UpdateComebackCell(): void;

		ForceUpdateComebackCell(): void;

		GetFreeCellByRealMapFor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		CompleteChangingCellCoordinates(): void;

		TeleportToCell(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			resetUnitState?: boolean /* = true */
		): void;

		IsCellPassableByRealMap(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		IsCellPassableByRealMap(
			x: number,
			y: number
		): boolean;

		IsCellPassableByRealMapIgnoreMovingUnits(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			allowPushAway: boolean
		): boolean;

		SpeedAtCellByRealMap(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): number;

		SpeedAtCellByKnownMap(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		): number;

		GetEmptyCellInRegion(
			center: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D
		): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		EnterIn(
			containerProfession: HordeClassLibrary.UnitComponents.ProfessionData.Interfaces.IUnitContainerProfession | null
		): boolean;

		LeaveFrom(
			containerProfession: HordeClassLibrary.UnitComponents.ProfessionData.Interfaces.IUnitContainerProfession | null,
			exitCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null
		): boolean;

		GetDirectionToCell(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;

		GetDirectionToUnit(
			targetUnit: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;

		VisualNearestPointToRect(
			targetRect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			/*out*/ nearestSourcePoint: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ nearestTargetPoint: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): number;

		VisualNearestPointToUnit(
			targetUnit: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null,
			/*out*/ nearestSourcePoint: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ nearestTargetPoint: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): number;

		VisualNearestPointToCell(
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ nearestSourcePoint: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): number;

		DistanceToUnit(
			targetUnit: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): number;

		DistanceToCell(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): number;

		DistanceToRect(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): number;

		GetCellTile(): HordeClassLibrary.World.Objects.Tiles.Tile;

		SelectNearestUnit(
			units: System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Objects.Units.Unit> | null,
			blackList?: System.Collections.Generic.HashSet<HordeClassLibrary.World.Objects.Units.Unit> | null /* = null */
		): HordeClassLibrary.World.Objects.Units.Unit;

		SortByNearestEntrance(
			unitsToSort: System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Objects.Units.Unit> | null
		): HordeResurrection.Basic.Pool.PoolSlot<System.Collections.Generic.List<HordeClassLibrary.World.Objects.Units.Unit>>;

		GetEntranceCellsFor(
			forUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeResurrection.Basic.Pool.PoolSlot<System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>>;

		GetEntranceCellOrThrow(): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		GetEntranceCellOrNull(): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		GetAnyFreeEdgeCell(
			checkForUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		GetDistanceToEntrance(
			building: HordeClassLibrary.World.Objects.Units.Unit | null
		): number;

		InEntranceCell(
			targetBuilding: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		InScenaCell(
			checkCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		CheckPathToEntrance(
			targetBuilding: HordeClassLibrary.World.Objects.Units.Unit | null,
			allowPushAway: boolean
		): HordeClassLibrary.UnitComponents.Minds.MapMind.PathCheckResult;

		CheckPathTo(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			allowPushAway: boolean
		): HordeClassLibrary.UnitComponents.Minds.MapMind.PathCheckResult;

		CheckPathTo(
			finishSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null,
			allowPushAway: boolean,
			lastWaitingCells?: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null /* = null */
		): HordeClassLibrary.UnitComponents.Minds.MapMind.PathCheckResult;
	}
}
//#endregion

//#region MapMind.PathCheckResult
declare namespace HordeClassLibrary.UnitComponents.Minds.MapMind {
	class /* struct */ PathCheckResult extends System.ValueType {

		// Properties:
		readonly Found: boolean;
		readonly NotFound: boolean;
		readonly Interrupted: boolean;
		readonly FoundOrInterrupted: boolean;
		readonly PathNotExists: boolean;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region OrdersMind
declare namespace HordeClassLibrary.UnitComponents.Minds {
	class OrdersMind
		extends HordeClassLibrary.UnitComponents.Minds.AUnitMind
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly OrdersCount: number;
		readonly NeedCancelActiveOrder: boolean;
		readonly DisableNotificationsHandlingDuringOrderChanging: boolean;
		readonly BehaviorFlags: HordeClassLibrary.UnitComponents.Enumerations.UnitBehaviorByOrderFlag;
		readonly IsUncontrollable: boolean;
		readonly ActiveOrder: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase;
		readonly ActiveAct: HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase;
		readonly ActiveMotion: HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase;
		readonly State: HordeClassLibrary.UnitComponents.Enumerations.UnitState | null;
		readonly OwnOrderDoNothing: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderDoNothing;
		readonly OwnActDoNothing: HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActDoNothing;
		readonly OwnMotionDoNothing: HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionDoNothing;

		// Methods:
		ActiveOrderHandle(): HordeClassLibrary.UnitComponents.Enumerations.UnitState;

		ProcessBuildingSelf(
			autoBuild: boolean
		): void;

		ProcessGoThroughDoorOnProducing(): void;

		ProcessDeath(): void;

		CancelOrdersSafe(
			cancelActiveOrder?: boolean /* = true */
		): void;

		CancelOrdersUnsafe(
			cancelActiveOrder?: boolean /* = true */
		): void;

		AssignSmartOrder(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode,
			deactivateNotificationsTime: number
		): void;

		AssignOrder(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null,
			commandArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs | null,
			overrideAssignOrderMode?: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode | null /* = null */
		): void;

		SetInstinctOrder(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null,
			deactivateNotificationsTime?: number /* = 64 */
		): void;

		SetPanikOrder(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderPanik | null
		): void;

		CopyBehaviorFrom(
			otherUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		CopyAllOrdersFrom(
			otherUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			copyInstinct: boolean
		): void;

		CopyFollowingOrdersFrom(
			otherUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		ReviewQueuedInstinctOrder(): void;

		SkipFollowingAggressiveCapture(): void;

		TryAddAutoHoldPosition(
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode
		): void;

		RemoveAutoHoldPositionOrders(
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode
		): void;

		IsSetHoldPosition(): boolean;

		IsNextHoldPosition(): boolean;

		IsMoving(): boolean;

		GetCurrentPathLength(): number | null;

		GetCurrentHitTarget(): HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit;

		HasOrdersInQueue(): boolean;

		IsIdle(): boolean;

		HasMotionDoNothingNow(): boolean;

		GetFollowingOrders(): System.Collections.Generic.IEnumerable<HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase>;
	}
}
//#endregion

//#region SoundsMind
declare namespace HordeClassLibrary.UnitComponents.Minds {
	class SoundsMind
		extends HordeClassLibrary.UnitComponents.Minds.AUnitMind
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly BySectionsCount: System.Collections.Generic.IReadOnlyDictionary<string, number>;

		// Methods:
		UtterSound(
			sectionName: System.Enum | null,
			position: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			sectionSoundLimit?: number | null /* = null */,
			isLooping?: boolean /* = false */
		): HordeClassLibrary.World.Objects.SoundEffects.SimpleSoundEffect;

		UtterSound(
			soundsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog | null,
			sectionName: System.Enum | null,
			position: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			sectionSoundLimit?: number | null /* = null */,
			isLooping?: boolean /* = false */
		): HordeClassLibrary.World.Objects.SoundEffects.SimpleSoundEffect;

		UtterSound(
			soundsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog | null,
			sectionName: string | null,
			position: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			sectionSoundLimit?: number | null /* = null */,
			isLooping?: boolean /* = false */
		): HordeClassLibrary.World.Objects.SoundEffects.SimpleSoundEffect;

		MakeScreamSoundOnHighDamage(): void;
	}
}
//#endregion

//#region VisualMind
declare namespace HordeClassLibrary.UnitComponents.Minds {
	class VisualMind
		extends HordeClassLibrary.UnitComponents.Minds.AUnitMind
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly Animator: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Animator;
		AutomaticAnimator: boolean;
		readonly CurrentAnimation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;
		CurrentAnimationCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.UnitAnimationsCatalog;
		CurrentPortraitCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationsCatalog;
		readonly Flags: HordeClassLibrary.UnitComponents.Misc.BuildingFlagsHelper;
		readonly HasFlags: boolean;
		readonly CurrentFrameNumber: number;
		readonly CurrentFrameSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly CurrentAnimState: string;

		// Methods:
		UnitCrossRect(
			sx: number,
			sy: number,
			ex: number,
			ey: number
		): boolean;

		HasAnimState(
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState
		): boolean;

		HasAnimState(
			state: string | null
		): boolean;

		SetAnimState(
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState,
			stage?: number /* = 0 */,
			looped?: boolean /* = true */,
			forced?: boolean /* = false */
		): boolean;

		SetAnimState(
			state: string | null,
			stage?: number /* = 0 */,
			looped?: boolean /* = true */,
			forced?: boolean /* = false */
		): boolean;

		SafeSetAnimState(
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState,
			fallbackState: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState,
			stage?: number /* = 0 */,
			looped?: boolean /* = true */,
			forced?: boolean /* = false */
		): boolean;

		SafeSetAnimState(
			state: string | null,
			fallbackState: string | null,
			stage?: number /* = 0 */,
			looped?: boolean /* = true */,
			forced?: boolean /* = false */
		): boolean;

		SetDeathAnimState(
			deathType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): boolean;

		SetNearDeathStage(): void;

		SetDestructionStage(): void;

		SetRepairStage(): void;

		SetBuildingStage(
			healthValue: number
		): void;

		UpdateVisual(): void;

		GetDecayAnimation(
			deathType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		ProcessAnimatorScript(): void;
	}
}
//#endregion

//#region BuildingFlagsHelper
declare namespace HordeClassLibrary.UnitComponents.Misc {
	class BuildingFlagsHelper extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly Count: number;
		readonly HasFlags: boolean;
		readonly WasUnderAttack: boolean;
		readonly LastHandledAnimation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		// Indexer:
		readonly Item: $Indexer_BuildingFlagsHelper;

		// Methods:
		GetOrCreateFlagEffect(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			number: number,
			placed: boolean
		): HordeClassLibrary.UnitComponents.Misc.BuildingFlagsHelper.FlagSlot;

		HideFlags(): void;

		RemoveFlags(): void;

		SaveLastHandledData(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null,
			wasUnderAttack: boolean
		): void;

		CountPlacedFlags(): number;

		ChangeColorMap(
			colorMap: any | null,
			maskColor: HordeResurrection.Basic.Primitives.HordeColor | null
		): void;
	}

	/** This service type explains ClearScript access to .Net indexers. */
	abstract class $Indexer_BuildingFlagsHelper {
		/** [ i: number ] -> FlagSlot */
		public get(
			i: number
		): HordeClassLibrary.UnitComponents.Misc.BuildingFlagsHelper.FlagSlot;
	}
}
//#endregion

//#region BuildingFlagsHelper.FlagSlot
declare namespace HordeClassLibrary.UnitComponents.Misc.BuildingFlagsHelper {
	class FlagSlot extends System.Object {

		// Constructors:
		constructor(
			effect: HordeClassLibrary.World.Objects.VisualEffects.Implementations.BuildingFlagEffect | null,
			isPlaced: boolean
		);

		// Properties:
		readonly IsPlaced: boolean;

		// Methods:
		UpdatePosition(
			location: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		Show(): void;

		Hide(): void;

		Remove(): void;

		ChangeColorMap(
			colorMap: any | null,
			maskColor: HordeResurrection.Basic.Primitives.HordeColor | null
		): void;
	}
}
//#endregion

//#region CompoundUnitBuildHelper
declare namespace HordeClassLibrary.UnitComponents.Misc {
	class CompoundUnitBuildHelper extends System.Object {

		// Constructors:
		constructor(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		);

		// Properties:
		readonly OuterPoints: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		readonly CanBuildCells: System.Collections.Generic.List<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		readonly CanNotBuildCells: System.Collections.Generic.List<HordeResurrection.Basic.Primitives.Geometry.Point2D>;

		// Methods:
		GetOuterPoints(
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		DetermineAvailableBuildCells(
			territoryPlanner: HordeClassLibrary.World.Settlements.Territory.TerritoryPlanner | null,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		CountAvailableBuildCells(
			territoryPlanner: HordeClassLibrary.World.Settlements.Territory.TerritoryPlanner | null,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ actualCellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ canBuildCellsCount: number,
			/*out*/ canNotBuildCellsCount: number
		): void;
	}
}
//#endregion

//#region CyclicUnitsSelector
declare namespace HordeClassLibrary.UnitComponents.Misc {
	class CyclicUnitsSelector extends System.Object {

		// Constructors:
		constructor();

		// Methods:
		ClearRecent(): void;

		Reset(): void;

		SelectNext(): HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region FinishSetWrapper
declare namespace HordeClassLibrary.UnitComponents.Misc {
	class FinishSetWrapper extends System.Object
		implements System.IDisposable
	{
		// Constructors:
		constructor(
			cellsSetSlot: HordeResurrection.Basic.Pool.IPoolSlot<System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>> | null
		);

		// Properties:
		readonly Cells: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		readonly AverageFinish: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		// Methods:
		GetCellsOrNull(): System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>;

		Dispose(): void;
	}
}
//#endregion

//#region HarvestLumberSpiral
declare namespace HordeClassLibrary.UnitComponents.Misc {
	class HarvestLumberSpiral extends System.Object {

		// Constructors:
		constructor(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			startCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			maxSpiralRadius?: number | null /* = null */
		);

		// Fields:
		static readonly /* const */ MaxSpiralRadiusDefault: number; // = 5
		static readonly /* const */ MaxSpiralRadiusOnSawmillBuilt: number; // = 7

		// Properties:
		readonly Unit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly StartCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly MaxSpiralLength: number;
		readonly Spiral: HordeResurrection.Basic.Primitives.SpiralOut;
		readonly PreviousSpiral: HordeResurrection.Basic.Primitives.SpiralOut;
		readonly LastForestCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		readonly Eof: boolean;

		// Methods:
		GetNextTreeCell(): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		static GetAroundCells(
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
	}
}
//#endregion

//#region ProduceListItemInfo
declare namespace HordeClassLibrary.UnitComponents.Misc {
	class ProduceListItemInfo extends System.Object {

		// Constructors:
		constructor(
			product: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		);

		// Properties:
		readonly ProductCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		IsEnoughResources: boolean;
		IsSatisfiesRules: boolean;
		Discovered: boolean;
		TechRequirements: System.Collections.Generic.HashSet<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>;
		readonly CanBeProduced: boolean;

		// Methods:
		GetRequirementsString(): string;
	}
}
//#endregion

//#region SearchMineSpiral
declare namespace HordeClassLibrary.UnitComponents.Misc {
	class SearchMineSpiral extends System.Object {

		// Constructors:
		constructor(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			startCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			maxSpiralRadius?: number | null /* = null */
		);

		// Fields:
		static readonly /* const */ MaxSpiralRadiusDefault: number; // = 7
		static readonly /* const */ MaxSpiralRadiusOnStockBuilt: number; // = 10

		// Properties:
		readonly Unit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly StartCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly MaxSpiralLength: number;
		readonly Eof: boolean;

		// Methods:
		GetNextMine(
			/*out*/ reachable: boolean
		): HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region TargetBuilding
declare namespace HordeClassLibrary.UnitComponents.Misc {
	class TargetBuilding extends System.Object {

		// Constructors:
		constructor(
			building: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly Building: HordeClassLibrary.World.Objects.Units.Unit;
		readonly RealEntrance: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly Entrance: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly IsAlive: boolean;
		readonly IsNotAlive: boolean;

		// Methods:
		SetBuilding(
			building: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		IsReachable(
			fromUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		ClearIfNotAlive(): void;

		ClearData(): void;
	}
}
//#endregion

//#region AlarmFlags
declare namespace HordeClassLibrary.UnitComponents.Notifications.Alarms {
	abstract class AlarmFlags extends System.EnumFlags {
		/** AlarmFlags.None = 0 */ static readonly None: AlarmFlags;
		/** AlarmFlags.IgnoreDiplomacy = 1 */ static readonly IgnoreDiplomacy: AlarmFlags;
		/** AlarmFlags.AllowOnlyAliveTargets = 2 */ static readonly AllowOnlyAliveTargets: AlarmFlags;
	}
}
//#endregion

//#region BaseUnitAlarm
declare namespace HordeClassLibrary.UnitComponents.Notifications.Alarms {
	abstract class BaseUnitAlarm
		extends HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification
	{
		// Properties:
		readonly BaseAlarmLevel: number;
		readonly InitiatorUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly EstimatedAlarmLevel: number;
		ShouldBeAfraidOfTheInitiator: boolean;
		Flags: HordeClassLibrary.UnitComponents.Notifications.Alarms.AlarmFlags;
		readonly IgnoreDiplomacy: boolean;
		readonly AllowOnlyAliveTargets: boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ComradeUnderAttackAlarm
declare namespace HordeClassLibrary.UnitComponents.Notifications.Alarms {
	class ComradeUnderAttackAlarm
		extends HordeClassLibrary.UnitComponents.Notifications.Alarms.BaseUnitAlarm
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			attackedComrade: HordeClassLibrary.World.Objects.Units.Unit | null,
			attacker: HordeClassLibrary.World.Objects.Units.Unit | null,
			estimatedAlarmLevel: number
		);

		// Fields:
		readonly AttackedComrade: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region EnemyIsNearAlarm
declare namespace HordeClassLibrary.UnitComponents.Notifications.Alarms {
	class EnemyIsNearAlarm
		extends HordeClassLibrary.UnitComponents.Notifications.Alarms.BaseUnitAlarm
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			nearestEnemy: HordeClassLibrary.World.Objects.Units.Unit | null,
			estimatedAlarmLevel: number
		);

		// Fields:
		static readonly /* const */ BehaviorMask: HordeClassLibrary.UnitComponents.Enumerations.UnitBehaviorByOrderFlag; // = 6

		// Properties:
		readonly AlarmBehavior: HordeClassLibrary.UnitComponents.Enumerations.UnitBehaviorByOrderFlag;
	}
}
//#endregion

//#region UnderAttackAlarm
declare namespace HordeClassLibrary.UnitComponents.Notifications.Alarms {
	class UnderAttackAlarm
		extends HordeClassLibrary.UnitComponents.Notifications.Alarms.BaseUnitAlarm
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			attacker: HordeClassLibrary.World.Objects.Units.Unit | null,
			estimatedAlarmLevel: number,
			shouldBeAfraidOfTheAttacker: boolean
		);
	}
}
//#endregion

//#region BaseUnitNotification
declare namespace HordeClassLibrary.UnitComponents.Notifications {
	abstract class BaseUnitNotification extends System.Object {

		// Properties:
		readonly NotificationFlag: HordeClassLibrary.UnitComponents.Enumerations.UnitNotificationFlag;
		readonly Importance: number;
		readonly Owner: HordeClassLibrary.World.Objects.Units.Unit;
		readonly InitialCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly IsHandled: boolean;
		readonly CreationTick: number;

		// Methods:
		UpdateOnGameTick(): void;

		IsActual(): boolean;

		PostponeExpirationTime(
			expirationTicks?: number /* = 8 */
		): void;

		MarkAsHandled(): void;

		MarkAsExpired(): void;

		ReplaceOwner(
			newOwner: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ComradeRepairRequiredNotification
declare namespace HordeClassLibrary.UnitComponents.Notifications.Other {
	class ComradeRepairRequiredNotification
		extends HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			repairTarget: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly RepairTarget: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region FireNotification
declare namespace HordeClassLibrary.UnitComponents.Notifications.Other {
	class FireNotification
		extends HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly InitialPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region MoveAwayRequestNotification
declare namespace HordeClassLibrary.UnitComponents.Notifications.Other {
	class MoveAwayRequestNotification
		extends HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			requestEvent: HordeClassLibrary.UnitComponents.EventArgs.MoveAwayRequestEventArgs | null
		);

		// Properties:
		readonly RequesterUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly RequestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region MoveOutRequestNotification
declare namespace HordeClassLibrary.UnitComponents.Notifications.Other {
	class MoveOutRequestNotification
		extends HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			requestEvent: HordeClassLibrary.UnitComponents.EventArgs.MoveOutRequestEventArgs | null
		);

		// Properties:
		readonly RequesterUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly FinishSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
	}
}
//#endregion

//#region NearDeathNotification
declare namespace HordeClassLibrary.UnitComponents.Notifications.Other {
	class NearDeathNotification
		extends HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region StepAwayRequestNotification
declare namespace HordeClassLibrary.UnitComponents.Notifications.Other {
	class StepAwayRequestNotification
		extends HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			requestEvent: HordeClassLibrary.UnitComponents.EventArgs.StepAwayRequestEventArgs | null
		);

		// Properties:
		readonly RequesterUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly RequestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly SuggestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region BaseTacticNotification
declare namespace HordeClassLibrary.UnitComponents.Notifications.Tactic {
	abstract class BaseTacticNotification
		extends HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification
	{
		// Properties:
		readonly OrderImportanceIfActual: HordeClassLibrary.UnitComponents.OrdersSystem.OrderImportance;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region TacticAttackAdjacentNotification
declare namespace HordeClassLibrary.UnitComponents.Notifications.Tactic {
	class TacticAttackAdjacentNotification
		extends HordeClassLibrary.UnitComponents.Notifications.Tactic.BaseTacticNotification
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly TargetUnit: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region TacticComebackNotification
declare namespace HordeClassLibrary.UnitComponents.Notifications.Tactic {
	class TacticComebackNotification
		extends HordeClassLibrary.UnitComponents.Notifications.Tactic.BaseTacticNotification
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region TacticRetreatNotification
declare namespace HordeClassLibrary.UnitComponents.Notifications.Tactic {
	class TacticRetreatNotification
		extends HordeClassLibrary.UnitComponents.Notifications.Tactic.BaseTacticNotification
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly RetreatCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region BaseUnitThreat
declare namespace HordeClassLibrary.UnitComponents.Notifications.Threats {
	abstract class BaseUnitThreat
		extends HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification
	{
		// Properties:
		readonly BaseThreatLevel: number;
		readonly EstimatedThreatLevel: number;
		readonly ThreatPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly InitialPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region FriendlyFireThreat
declare namespace HordeClassLibrary.UnitComponents.Notifications.Threats {
	class FriendlyFireThreat
		extends HordeClassLibrary.UnitComponents.Notifications.Threats.BaseUnitThreat
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			initiatorUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			estimatedThreatLevel: number
		);

		// Properties:
		readonly InitiatorUnit: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region InvulnerableThreat
declare namespace HordeClassLibrary.UnitComponents.Notifications.Threats {
	class InvulnerableThreat
		extends HordeClassLibrary.UnitComponents.Notifications.Threats.BaseUnitThreat
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			initiatorUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			estimatedThreatLevel: number
		);

		// Properties:
		readonly InitiatorUnit: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region UnknownThreat
declare namespace HordeClassLibrary.UnitComponents.Notifications.Threats {
	class UnknownThreat
		extends HordeClassLibrary.UnitComponents.Notifications.Threats.BaseUnitThreat
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null,
			position: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			estimatedThreatLevel: number
		);
	}
}
//#endregion

//#region AActBase
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	abstract class AActBase extends System.Object {

		// Properties:
		readonly U: HordeClassLibrary.World.Objects.Units.Unit;
		readonly ActiveMotion: HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase;

		// Methods:
		IsDone(): boolean;

		Processing(): HordeClassLibrary.UnitComponents.Enumerations.UnitState;

		Dispose(): void;

		IsFighting(
			/*out*/ target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): boolean;

		CanBeCanceledNow(): boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ActAttackUnit
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActAttackUnit
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		);

		// Properties:
		readonly Target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit;
	}
}
//#endregion

//#region ActCapture
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActCapture
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		);

		// Properties:
		readonly Target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit;
		readonly TargetRealUnit: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region ActChopDownTree
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActChopDownTree
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region ActCustom
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActCustom
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region ActDeath
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActDeath
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region ActDestroySelf
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActDestroySelf
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region ActDoNothing
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActDoNothing
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region ActGatherResourceFromMine
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActGatherResourceFromMine
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			target: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly Target: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region ActMoveTo
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActMoveTo
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			baseWaitTicks?: number /* = 32 */
		);

		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			finishSetSlot: HordeResurrection.Basic.Pool.IPoolSlot<System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>> | null,
			checkOutOfScenaPoints: boolean,
			baseWaitTicks?: number /* = 32 */
		);

		// Fields:
		static readonly /* const */ IterationsToWait: number; // = 32
		static readonly /* const */ IterationsToWaitPanik: number; // = 8
		static readonly /* const */ IterationsToWaitMin: number; // = 4

		// Properties:
		readonly Solution: HordeClassLibrary.PathFinders.Path2D;
		readonly StepTo: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		readonly CellTo: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		readonly NextDirection: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;
		readonly AgeOfPathInSteps: number;
		readonly AgeOfPathInIterations: number;
		readonly WaitAttempts: number;
		readonly BaseWaitTicks: number;

		// Methods:
		ChangeFinish(
			newFinishSetSlot: HordeResurrection.Basic.Pool.IPoolSlot<System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>> | null
		): void;
	}
}
//#endregion

//#region ActStepAwayBase
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	abstract class ActStepAwayBase
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Properties:
		readonly FromCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly PointForMove: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ActStepAwayImmediate
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActStepAwayImmediate
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActStepAwayBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			fromCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			threatCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null
		);

		// Properties:
		readonly ThreatCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
	}
}
//#endregion

//#region ActStepAwayWaiting
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActStepAwayWaiting
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActStepAwayBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			fromCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			suggestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			fallbackCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			finishDelayTicks?: number /* = 8 */
		);

		// Fields:
		static readonly /* const */ FinishDelayTicksDefault: number; // = 8

		// Properties:
		readonly SuggestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly FallbackCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly StepAwayAttempts: number;
		readonly WaitCellFreeAttempts: number;
		readonly FinishDelayTicks: number;
	}
}
//#endregion

//#region ActTransferResourceItem
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActTransferResourceItem
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			target: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly Target: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region ActTurn
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActTurn
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			side: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection
		);

		// Properties:
		readonly TurnToSide: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;
	}
}
//#endregion

//#region ActWait
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts {
	class ActWait
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			iterationsToWait: number
		);

		// Properties:
		readonly IterationsToWait: number;
	}
}
//#endregion

//#region ActBuild
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing {
	class ActBuild
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			productUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			isAutomaticMode: boolean
		);

		// Properties:
		readonly ProductUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly IsAutomaticMode: boolean;
	}
}
//#endregion

//#region ActBuildSelf
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing {
	class ActBuildSelf
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			autoBuild: boolean
		);
	}
}
//#endregion

//#region ActPreBuild
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing {
	class ActPreBuild
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Methods:
		GetBuildingUnit(): HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region ActProduce
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing {
	class ActProduce
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			count: number
		);

		// Properties:
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly LeftCount: number;
	}
}
//#endregion

//#region ActProduceAt
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing {
	class ActProduceAt
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D | null
		);

		// Properties:
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly CellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly CellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		readonly ProductUnit: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region ActRepair
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing {
	class ActRepair
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly TargetUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region ActRepairSelf
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing {
	class ActRepairSelf
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			repairMode: HordeClassLibrary.UnitComponents.OrdersSystem.Misc.OrderRepairMode
		);

		// Properties:
		readonly RepairMode: HordeClassLibrary.UnitComponents.OrdersSystem.Misc.OrderRepairMode;
	}
}
//#endregion

//#region AssignOrderMode
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem {
	abstract class AssignOrderMode extends System.Enum {
		/** AssignOrderMode.Replace = 0 */ static readonly Replace: AssignOrderMode;
		/** AssignOrderMode.QuietReplace = 1 */ static readonly QuietReplace: AssignOrderMode;
		/** AssignOrderMode.Queue = 2 */ static readonly Queue: AssignOrderMode;
	}
}
//#endregion

//#region ACommandArgs
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs {
	abstract class ACommandArgs extends System.Object {

		// Properties:
		readonly CommandType: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		readonly AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
		DeactivateNotificationsTime: number;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AUnknownCommandArgs
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs {
	abstract class AUnknownCommandArgs
		extends HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs
	{
		// Methods:
		SetCommandType(
			commandType: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AutoCommandSwitchArgs
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs {
	class /* struct */ AutoCommandSwitchArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.AutoCommandSwitchArgs>
	{
		// Constructors:
		constructor(
			Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			IsAutomated: boolean,
			AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode
		);

		// Properties:
		Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		IsAutomated: boolean;
		AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region OneClickCommandArgs
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs {
	class OneClickCommandArgs
		extends HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.AUnknownCommandArgs
	{
		// Constructors:
		constructor(
			commandType: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode
		);
	}
}
//#endregion

//#region PointCommandArgs
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs {
	class PointCommandArgs
		extends HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.AUnknownCommandArgs
	{
		// Constructors:
		constructor(
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			commandType: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode
		);

		// Properties:
		readonly TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Uninterruptible: boolean;
		IsSmartCommand: boolean;
		IgnoreUnits: boolean;

		// Methods:
		GetTargetKnownUnit(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): HordeClassLibrary.World.Objects.Units.KnownUnit;
	}
}
//#endregion

//#region ProduceAtCommandArgs
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs {
	class ProduceAtCommandArgs
		extends HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs
	{
		// Constructors:
		constructor(
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode,
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd?: HordeResurrection.Basic.Primitives.Geometry.Point2D | null /* = null */,
			compoundStopOnNumber?: number | null /* = null */
		);

		// Properties:
		readonly ProductCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly CellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		CellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		CompoundStopOnNumber: number | null;
		FirstGoThenCheck: boolean;
	}
}
//#endregion

//#region ProduceCommandArgs
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs {
	class ProduceCommandArgs
		extends HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs
	{
		// Constructors:
		constructor(
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode,
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			count: number
		);

		// Properties:
		readonly ProductCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly Count: number;
	}
}
//#endregion

//#region OrderRepairMode
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Misc {
	abstract class OrderRepairMode extends System.Enum {
		/** OrderRepairMode.Normal = 0 */ static readonly Normal: OrderRepairMode;
		/** OrderRepairMode.Limited = 1 */ static readonly Limited: OrderRepairMode;
	}
}
//#endregion

//#region AMotionBase
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	abstract class AMotionBase extends System.Object {

		// Properties:
		readonly UnitState: HordeClassLibrary.UnitComponents.Enumerations.UnitState;
		readonly MayBeInterrupted: boolean;
		readonly IsUnprepared: boolean;
		readonly IsDone: boolean;
		readonly IsFailed: boolean;
		readonly IsDoneOrFailed: boolean;
		readonly IsInProgress: boolean;
		State: HordeClassLibrary.UnitComponents.OrdersSystem.Motions.StateMotion;
		readonly U: HordeClassLibrary.World.Objects.Units.Unit;

		// Methods:
		CheckProgress(
			val: number,
			readOnly?: boolean /* = false */
		): boolean;

		ResetProgress(
			resetValue?: number /* = 0 */
		): void;

		FullReset(): void;

		Dispose(): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region MotionCaptureBase
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	abstract class MotionCaptureBase
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Properties:
		readonly TargetUnit: HordeClassLibrary.World.Objects.Units.Unit;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region MotionCaptureBuilding
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionCaptureBuilding
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			entryPoint: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly EntryPoint: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Stage: HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureBuilding.CaptureStage;
	}
}
//#endregion

//#region MotionCaptureBuilding.CaptureStage
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureBuilding {
	abstract class CaptureStage extends System.Enum {
		/** CaptureStage.Prepare = 0 */ static readonly Prepare: CaptureStage;
		/** CaptureStage.Initial = 1 */ static readonly Initial: CaptureStage;
		/** CaptureStage.Delay = 2 */ static readonly Delay: CaptureStage;
		/** CaptureStage.Final = 3 */ static readonly Final: CaptureStage;
	}
}
//#endregion

//#region MotionCaptureMachine
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionCaptureMachine
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		Stage: HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureMachine.CaptureStage;
	}
}
//#endregion

//#region MotionCaptureMachine.CaptureStage
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureMachine {
	abstract class CaptureStage extends System.Enum {
		/** CaptureStage.Initial = 0 */ static readonly Initial: CaptureStage;
		/** CaptureStage.Completed = 1 */ static readonly Completed: CaptureStage;
	}
}
//#endregion

//#region MotionChopDown
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionChopDown
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region MotionCustom
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionCustom
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region MotionDeath
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionDeath
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly DeathType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType;
	}
}
//#endregion

//#region MotionDestroySelf
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionDestroySelf
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region MotionDoNothing
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionDoNothing
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region MotionGatherResourceFromMine
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionGatherResourceFromMine
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			target: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly Target: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region MotionHit
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionHit
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			uTarget: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly TargetPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly TargetMapLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
		readonly Target: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region MotionMove
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionMove
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			x: number,
			y: number
		);

		// Fields:
		Distance: HordeResurrection.Basic.Primitives.PreciseFraction;

		// Properties:
		readonly DxDy: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Speed: HordeResurrection.Basic.Primitives.PreciseFraction;
		SpeedSteps: HordeResurrection.Basic.Primitives.PreciseFraction;
		SpeedHandler: HordeResurrection.Basic.Primitives.HordeSpeedHandler;
		FinishPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		StuckFrames: number;
	}
}
//#endregion

//#region MotionPathFinding
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionPathFinding
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region MotionReload
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionReload
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region MotionTransferResourceItem
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionTransferResourceItem
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			target: HordeClassLibrary.World.Objects.Units.Unit | null,
			resourceType: HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType
		);

		// Properties:
		readonly Target: HordeClassLibrary.World.Objects.Units.Unit;
		readonly ResourceType: HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType;
		readonly WaitTime: number;
	}
}
//#endregion

//#region MotionTurn
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionTurn
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			turnDir: number
		);

		// Fields:
		EndDir: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;
		TurnDirection: number;
	}
}
//#endregion

//#region MotionWait
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionWait
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			iterationsToWait: number
		);

		// Fields:
		static readonly /* const */ InfiniteTimer: number; // = 2147483647

		// Properties:
		readonly IterationsToWait: number;

		// Methods:
		CheckTimer(): boolean;
	}
}
//#endregion

//#region MotionWaitCellFree
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	class MotionWaitCellFree
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionWait
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			iterationsToWait: number
		);

		// Properties:
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		WaitMovableTarget: boolean;
		DeadlockTicksLeft: number;
		CyclingSignal: boolean;

		// Methods:
		CheckDeadlockTimer(): boolean;
	}
}
//#endregion

//#region MotionBuild
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing {
	class MotionBuild
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			productUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			isAutomaticMode: boolean
		);

		// Properties:
		readonly ProductUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly BuildAnimationState: string;
		readonly IsAutomaticMode: boolean;
	}
}
//#endregion

//#region MotionBuildSelf
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing {
	class MotionBuildSelf
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			autoBuild: boolean
		);

		// Properties:
		AutoBuild: boolean;
		readonly MainBuilder: HordeClassLibrary.World.Objects.Units.Unit;
		readonly LatestBuilder: HordeClassLibrary.World.Objects.Units.Unit;
		readonly BuildersCount: number;
		SoundEffect: HordeClassLibrary.World.Objects.SoundEffects.SimpleSoundEffect;
		ResourcesRemainder: HordeClassLibrary.World.Simple.ResourcesAmountF;
		TimeProgress: number;
		HealthProgress: number;
		ExtendedBuild: boolean;
		LastBuildTick: number;
		StartBuildTick: number;
		readonly HasBuilders: boolean;

		// Methods:
		AddBuilder(
			builder: HordeClassLibrary.World.Objects.Units.Unit | null,
			allowPowerbuilding?: boolean /* = true */
		): boolean;

		MakeInterruptible(): void;
	}
}
//#endregion

//#region MotionPreBuild
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing {
	class MotionPreBuild
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		IsPaid: boolean;
		ProductUnit: HordeClassLibrary.World.Objects.Units.Unit;
		DisbandRetriesCount: number;
	}
}
//#endregion

//#region MotionProduce
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing {
	class MotionProduce
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		);

		// Properties:
		LeftTime: number;
		IsPaid: boolean;
		RegisteredTraining: boolean;
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		StartBuildTick: number;

		// Methods:
		ResetLeftSteps(): void;
	}
}
//#endregion

//#region MotionProduceAt
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing {
	class MotionProduceAt
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D | null
		);

		// Properties:
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		CellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly CellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		IsPaid: boolean;
		ProductUnit: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region MotionRepair
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing {
	class MotionRepair
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly TargetUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly RepairAnimationState: string;
	}
}
//#endregion

//#region MotionRepairSelf
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing {
	class MotionRepairSelf
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			repairMode: HordeClassLibrary.UnitComponents.OrdersSystem.Misc.OrderRepairMode
		);

		// Properties:
		readonly RepairMode: HordeClassLibrary.UnitComponents.OrdersSystem.Misc.OrderRepairMode;
		readonly LeftRepairHealth: number;

		// Methods:
		InitLeftRepairHealth(): void;

		TickRepairHealth(): boolean;
	}
}
//#endregion

//#region StateMotion
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Motions {
	abstract class StateMotion extends System.Enum {
		/** StateMotion.Initial = 0 */ static readonly Initial: StateMotion;
		/** StateMotion.InProgress = 1 */ static readonly InProgress: StateMotion;
		/** StateMotion.Done = 2 */ static readonly Done: StateMotion;
		/** StateMotion.Failed = 3 */ static readonly Failed: StateMotion;
	}
}
//#endregion

//#region OrderImportance
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem {
	abstract class OrderImportance extends System.Enum {
		/** OrderImportance.Idle = 0 */ static readonly Idle: OrderImportance;
		/** OrderImportance.VeryLow = 1 */ static readonly VeryLow: OrderImportance;
		/** OrderImportance.Low = 2 */ static readonly Low: OrderImportance;
		/** OrderImportance.Medium = 3 */ static readonly Medium: OrderImportance;
		/** OrderImportance.High = 4 */ static readonly High: OrderImportance;
		/** OrderImportance.VeryHigh = 5 */ static readonly VeryHigh: OrderImportance;
		/** OrderImportance.Uninterrupted = 6 */ static readonly Uninterrupted: OrderImportance;
	}
}
//#endregion

//#region OrdersQueue
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem {
	class OrdersQueue extends System.Object {

		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			ownOrderDoNothing: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderDoNothing | null
		);

		// Properties:
		readonly ActiveOrder: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase;
		readonly QueueOnlyLength: number;

		// Methods:
		Deinitialize(): void;

		EnqueueOrDisposeOrder(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null
		): boolean;

		PushOrderToStartOrDispose(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null
		): boolean;

		SetInstinctOrderOrDispose(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null
		): boolean;

		SoftCancelAllOrders(): void;

		SoftCancelAllFollowingOrders(): void;

		ForceRemoveAllOrders(): void;

		ForceReplaceAllOrders(
			newOrder: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null
		): void;

		FilterQueue(
			filterCallback: System.Func_1<HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase, boolean> | System.Func | null
		): boolean;

		ForceDequeueOrder(
			allowInstinctOrder?: boolean /* = true */,
			allowReplaceOrder?: boolean /* = true */
		): void;

		GetNextExpectedOrder(): HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase;

		SkipNextOrder(): void;

		IsIdle(): boolean;

		Count(): number;

		GetFollowingOrdersEnumerator(): System.Collections.Generic.IEnumerator<HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase>;
	}
}
//#endregion

//#region AOrderBase
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	abstract class AOrderBase extends System.Object {

		// Properties:
		readonly U: HordeClassLibrary.World.Objects.Units.Unit;
		readonly ActiveAct: HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase;
		readonly MotiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification;
		readonly IsInstinct: boolean;
		readonly HasDisableNotificationsTimer: boolean;
		readonly CanBeCanceledByNotification: boolean;
		readonly AllowCancelCommand: boolean;
		readonly SpecialUnitBehavior: HordeClassLibrary.UnitComponents.Enumerations.UnitBehaviorByOrderFlag;
		readonly NextSuggestedOrder: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase;
		readonly NextOrder: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase;
		readonly IsSimpleMoveOrder: boolean;
		readonly IsBuildOrder: boolean;
		readonly IsHarvestRelatedOrder: boolean;

		// Methods:
		ToInstinct(
			notification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null
		): void;

		SetupDisableNotificationsTimer(
			ticks: number
		): void;

		SetupDisableNotificationsTimerBy(
			otherOrder: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null
		): void;

		CompletelyDisableNotifications(): void;

		MakeCopy(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase;

		IsDone(): boolean;

		Processing(): HordeClassLibrary.UnitComponents.Enumerations.UnitState;

		Dispose(): void;

		IsMoveAwayAllowed(
			requesterUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		IsPushAwayAllowed(): boolean;

		InterpretAsIdleOnBuildCommand(): boolean;

		IsUpdateComebackCellAllowedIfInstinct(): boolean;

		SetupNextOrder(
			nextOrder: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null
		): void;

		HandleOwnerChanging(
			e: HordeClassLibrary.UnitComponents.EventArgs.UnitOwnerChangedEventArgs | null
		): void;

		DisallowCommandsByOrder(
			commands: System.Collections.Generic.IEnumerable<HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand> | null
		): void;

		AllowDisallowedCommands(): void;

		SuggestComebackOrder(
			/*out*/ comebackBeforeHoldPosition: boolean
		): HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderMoveToPoint;

		GetNotificationsInfoString(): string;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AOrderStaged
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	abstract class AOrderStaged
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region IOrderWithTargetRectangle
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Interfaces {
	interface IOrderWithTargetRectangle {

		// Methods:
		GetTargetRectangle(): HordeResurrection.Basic.Primitives.Geometry.Rect2D;
	}
	/** TypeScript type stub for .Net interface */
	abstract class IOrderWithTargetRectangle {}
}
//#endregion

//#region OrderAttackParameters
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class /* struct */ OrderAttackParameters extends System.ValueType {

		// Constructors:
		constructor(
			targetKnownUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		);

		constructor(
			target: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		IsPursuitAllowed: boolean;
		AttackMode: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AttackMode;
		readonly TargetOwnerOnStart: HordeClassLibrary.World.Settlements.Settlement;
		readonly TargetCapturerOnStart: HordeClassLibrary.World.Objects.Units.Unit;
		TargetIsCapturableAndHarmlessOnStart: boolean;
		readonly IsForcedAttack: boolean;
		readonly IsForcedCapture: boolean;
		readonly IsCaptureAllowed: boolean;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region AttackMode
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	abstract class AttackMode extends System.Enum {
		/** AttackMode.AttackOrCapture = 0 */ static readonly AttackOrCapture: AttackMode;
		/** AttackMode.AttackOnly = 1 */ static readonly AttackOnly: AttackMode;
		/** AttackMode.ForcedAttack = 2 */ static readonly ForcedAttack: AttackMode;
		/** AttackMode.ForcedCapture = 3 */ static readonly ForcedCapture: AttackMode;
	}
}
//#endregion

//#region OrderAttackUnit
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderAttackUnit
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			unitTarget: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null,
			parameters: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderAttackParameters
		);

		// Properties:
		readonly Target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit;
		readonly TargetIsEnemyOnStart: boolean;
		readonly TargetCapturerOnStart: HordeClassLibrary.World.Objects.Units.Unit;
		readonly Parameters: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderAttackParameters;
		readonly LastTargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly CantSeeCounter: number;

		// Methods:
		IsActualExternal(): boolean;

		CheckInstinctChaseDistance(): boolean;
	}
}
//#endregion

//#region OrderBuildingAttackUnit
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderBuildingAttackUnit
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderAttackUnit
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			unitTarget: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null,
			parameters: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderAttackParameters
		);
	}
}
//#endregion

//#region OrderCapture
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderCapture
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			unitTarget: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null,
			parameters: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderAttackParameters
		);

		// Properties:
		readonly Target: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit;
		readonly TargetRealUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly TargetIsEnemyOnStart: boolean;
		readonly TargetCapturerOnStart: HordeClassLibrary.World.Objects.Units.Unit;
		readonly Parameters: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderAttackParameters;
		readonly LastTargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly IsCapturingDone: boolean;
		readonly CantSeeCounter: number;

		// Methods:
		IsActual(): boolean;

		CheckInstinctChaseDistance(): boolean;
	}
}
//#endregion

//#region OrderCustom
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderCustom
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			commandArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs | null
		);

		// Properties:
		readonly CommandArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs;
	}
}
//#endregion

//#region OrderDeath
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderDeath
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region OrderDestroySelf
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderDestroySelf
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null
		);
	}
}
//#endregion

//#region OrderDoNothing
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderDoNothing
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null
		);
	}
}
//#endregion

//#region OrderHarvestLumber
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderHarvestLumber
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			target: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly Target: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly ChoppingNow: boolean;
	}
}
//#endregion

//#region OrderHoldPosition
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderHoldPosition
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null
		);

		// Properties:
		TargetPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Automatic: boolean;
	}
}
//#endregion

//#region OrderMine
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderMine
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			target: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly Target: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly TargetMine: HordeClassLibrary.UnitComponents.Misc.TargetBuilding;
	}
}
//#endregion

//#region OrderMoveAway
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderMoveAway
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			claimCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly UpdateComebackCell: boolean;
		readonly ClaimCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Methods:
		GetTargetCell(): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
	}
}
//#endregion

//#region OrderMoveOutRegion
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderMoveOutRegion
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			finishSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		);

		// Properties:
		readonly UpdateComebackCell: boolean;

		// Methods:
		GetFinishSetOrNull(): System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
	}
}
//#endregion

//#region OrderMoveToPoint
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderMoveToPoint
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			finish: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			movementMode?: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.MovementMode /* = MovementMode.Common */
		);

		// Properties:
		readonly IsNonCommonMovement: boolean;
		readonly Finish: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Methods:
		static ConvertBehavior(
			behavior: HordeClassLibrary.UnitComponents.Enumerations.UnitBehaviorByOrderFlag
		): HordeClassLibrary.UnitComponents.OrdersSystem.Orders.MovementMode;
	}
}
//#endregion

//#region MovementMode
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	abstract class MovementMode extends System.Enum {
		/** MovementMode.Common = 0 */ static readonly Common: MovementMode;
		/** MovementMode.Aggressive = 1 */ static readonly Aggressive: MovementMode;
		/** MovementMode.AggressiveCapturing = 2 */ static readonly AggressiveCapturing: MovementMode;
	}
}
//#endregion

//#region OrderMoveToStock
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderMoveToStock
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			resourceCell?: HordeResurrection.Basic.Primitives.Geometry.Point2D | null /* = null */
		);

		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			targetStock: HordeClassLibrary.World.Objects.Units.Unit | null,
			resourceCell?: HordeResurrection.Basic.Primitives.Geometry.Point2D | null /* = null */
		);

		// Properties:
		readonly TargetBuilding: HordeClassLibrary.World.Objects.Units.Unit;
		readonly TargetEntrance: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly ResourceCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
	}
}
//#endregion

//#region OrderPanik
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	abstract class OrderPanik
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region OrderPanikMoving
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderPanikMoving
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderPanik
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null
		);

		// Properties:
		readonly CurrentTarget: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region OrderPanikStupor
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderPanikStupor
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderPanik
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null
		);
	}
}
//#endregion

//#region OrderStepAwayBase
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	abstract class OrderStepAwayBase
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Properties:
		readonly UpdateComebackCell: boolean;
		readonly FromCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region OrderStepAwayImmediate
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderStepAwayImmediate
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderStepAwayBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			fromCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			threatCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null
		);

		// Properties:
		readonly ThreatCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
	}
}
//#endregion

//#region OrderStepAwayWaiting
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderStepAwayWaiting
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderStepAwayBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			fromCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			suggestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			fallbackCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly SuggestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly FallbackCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region OrderTurn
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders {
	class OrderTurn
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			side: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection
		);

		// Properties:
		readonly TurnToSide: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;
	}
}
//#endregion

//#region BuildUnitUtils
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing {
	abstract class BuildUnitUtils {

		// Methods:
		static GetAroundPointsSetSlot(
			targetRectangle: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): HordeResurrection.Basic.Pool.PoolSlot<System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>>;

		static GetRectPointsSetSlot(
			targetRectangle: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): HordeResurrection.Basic.Pool.PoolSlot<System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D>>;

		static IsAroundConstructionSite(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetRectangle: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): boolean;

		static IsTurnedToConstructionSite(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			targetRectangle: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): boolean;

		static GetPartTargetsList(
			produceAtArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ProduceAtCommandArgs | null
		): System.Collections.Concurrent.ConcurrentQueue<HordeResurrection.Basic.Primitives.Geometry.Point2D>;

		static CountParts(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D | null,
			compoundStopOnNumber: number | null
		): number;

		static CanProduce(
			producer: HordeClassLibrary.World.Objects.Units.Unit | null,
			productConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		static CanBuildByRealMapAt(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			checkDistances: boolean
		): boolean;

		static CanBuildByKnownMapAt(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			checkDistances: boolean
		): boolean;

		static CheckPathAndCanBuildByKnownMap(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			checkDistances: boolean
		): boolean;

		static CheckPathAndCanBuildAnyPartByKnownMap(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D | null,
			compoundStopOnNumber: number | null,
			checkDistances: boolean
		): boolean;

		static CheckPathToBuildRect(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		static IsLifeDistanceCheckRequired(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		static IsLifeDistanceCheckRequired(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		static SendDisbandRequest(
			requesterUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			finishSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		): boolean;

		static CanDisbandAllUnits(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): boolean;

		static CanDisbandFromBuildingPlaceHypothetical(
			blockingUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region OrderBuild
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing {
	class OrderBuild
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged
		implements HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Interfaces.IOrderWithTargetRectangle
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			parameters: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderBuildParameters
		);

		// Properties:
		readonly ProductUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly NextTargets: System.Collections.Concurrent.ConcurrentQueue<HordeResurrection.Basic.Primitives.Geometry.Point2D>;

		// Methods:
		GetTargetRectangle(): HordeResurrection.Basic.Primitives.Geometry.Rect2D;
	}
}
//#endregion

//#region OrderBuildParameters
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing {
	class /* struct */ OrderBuildParameters extends System.ValueType {

		// Constructors:
		constructor(
			target: HordeClassLibrary.World.Objects.Units.Unit | null,
			nextTargets: System.Collections.Concurrent.ConcurrentQueue<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		);

		// Properties:
		readonly ProductUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly NextTargets: System.Collections.Concurrent.ConcurrentQueue<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		FirstGoThenCheck: boolean;

		// Methods:
		Copy(): HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderBuildParameters;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region OrderBuildSelf
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing {
	class OrderBuildSelf
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			autoBuild: boolean
		);

		// Properties:
		AutoBuild: boolean;
	}
}
//#endregion

//#region OrderPreBuild
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing {
	class OrderPreBuild
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged
		implements HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Interfaces.IOrderWithTargetRectangle
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			parameters: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderPreBuildParameters
		);

		// Properties:
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly NextTargets: System.Collections.Concurrent.ConcurrentQueue<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		readonly BuildingUnit: HordeClassLibrary.World.Objects.Units.Unit;

		// Methods:
		GetTargetRectangle(): HordeResurrection.Basic.Primitives.Geometry.Rect2D;
	}
}
//#endregion

//#region OrderPreBuildParameters
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing {
	class /* struct */ OrderPreBuildParameters extends System.ValueType {

		// Constructors:
		constructor(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			nextTargets: System.Collections.Concurrent.ConcurrentQueue<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		);

		// Properties:
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly NextTargets: System.Collections.Concurrent.ConcurrentQueue<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
		FirstGoThenCheck: boolean;

		// Methods:
		CopyWith(
			actualTargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderPreBuildParameters;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region OrderProduce
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing {
	class OrderProduce
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			produceArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ProduceCommandArgs | null
		);

		// Properties:
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly ProductQuantity: number;
	}
}
//#endregion

//#region OrderProduceAt
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing {
	class OrderProduceAt
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			produceAtArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ProduceAtCommandArgs | null
		);

		// Properties:
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
	}
}
//#endregion

//#region OrderRepair
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing {
	class OrderRepair
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged
		implements HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Interfaces.IOrderWithTargetRectangle
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null,
			parameters: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderRepairParameters
		);

		// Properties:
		Parameters: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderRepairParameters;
		readonly TargetUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly RepairTargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Methods:
		GetTargetRectangle(): HordeResurrection.Basic.Primitives.Geometry.Rect2D;

		ResolveRepairTargetCell(): boolean;
	}
}
//#endregion

//#region OrderRepairParameters
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing {
	class /* struct */ OrderRepairParameters extends System.ValueType {

		// Constructors:
		constructor(
			targetUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		readonly TargetUnit: HordeClassLibrary.World.Objects.Units.Unit;
		TryHarvestAfterCompeletion: boolean;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region OrderRepairSelf
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing {
	class OrderRepairSelf
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			repairMode: HordeClassLibrary.UnitComponents.OrdersSystem.Misc.OrderRepairMode,
			motiveNotification: HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification | null
		);

		// Properties:
		readonly RepairMode: HordeClassLibrary.UnitComponents.OrdersSystem.Misc.OrderRepairMode;
	}
}
//#endregion

//#region OrderStageStatus
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Stage {
	abstract class OrderStageStatus extends System.Enum {
		/** OrderStageStatus.Normal = 0 */ static readonly Normal: OrderStageStatus;
		/** OrderStageStatus.Completed = 1 */ static readonly Completed: OrderStageStatus;
	}
}
//#endregion

//#region ActStubOnDeletion
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Special {
	class ActStubOnDeletion
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region MotionStubOnDeletion
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Special {
	class MotionStubOnDeletion
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region OrderStubOnDeletion
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem.Special {
	class OrderStubOnDeletion
		extends HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase
	{
		// Constructors:
		constructor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		);
	}
}
//#endregion

//#region UnitCommand
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem {
	abstract class UnitCommand extends System.Enum {
		/** UnitCommand.None = 0 */ static readonly None: UnitCommand;
		/** UnitCommand.MoveToPoint = 1 */ static readonly MoveToPoint: UnitCommand;
		/** UnitCommand.Attack = 2 */ static readonly Attack: UnitCommand;
		/** UnitCommand.Capture = 3 */ static readonly Capture: UnitCommand;
		/** UnitCommand.Cancel = 4 */ static readonly Cancel: UnitCommand;
		/** UnitCommand.HarvestLumber = 5 */ static readonly HarvestLumber: UnitCommand;
		/** UnitCommand.Mine = 6 */ static readonly Mine: UnitCommand;
		/** UnitCommand.MoveToStock = 7 */ static readonly MoveToStock: UnitCommand;
		/** UnitCommand.Build = 8 */ static readonly Build: UnitCommand;
		/** UnitCommand.Repair = 9 */ static readonly Repair: UnitCommand;
		/** UnitCommand.Produce = 10 */ static readonly Produce: UnitCommand;
		/** UnitCommand.RepairSelf = 11 */ static readonly RepairSelf: UnitCommand;
		/** UnitCommand.DestroySelf = 12 */ static readonly DestroySelf: UnitCommand;
		/** UnitCommand.SetRallypoint = 13 */ static readonly SetRallypoint: UnitCommand;
		/** UnitCommand.StepAway = 14 */ static readonly StepAway: UnitCommand;
		/** UnitCommand.HoldPosition = 15 */ static readonly HoldPosition: UnitCommand;
		/** UnitCommand.OneClick_Custom_0 = 16 */ static readonly OneClick_Custom_0: UnitCommand;
		/** UnitCommand.OneClick_Custom_1 = 17 */ static readonly OneClick_Custom_1: UnitCommand;
		/** UnitCommand.OneClick_Custom_2 = 18 */ static readonly OneClick_Custom_2: UnitCommand;
		/** UnitCommand.OneClick_Custom_3 = 19 */ static readonly OneClick_Custom_3: UnitCommand;
		/** UnitCommand.OneClick_Custom_4 = 20 */ static readonly OneClick_Custom_4: UnitCommand;
		/** UnitCommand.OneClick_Custom_5 = 21 */ static readonly OneClick_Custom_5: UnitCommand;
		/** UnitCommand.OneClick_Custom_6 = 22 */ static readonly OneClick_Custom_6: UnitCommand;
		/** UnitCommand.OneClick_Custom_7 = 23 */ static readonly OneClick_Custom_7: UnitCommand;
		/** UnitCommand.OneClick_Custom_8 = 24 */ static readonly OneClick_Custom_8: UnitCommand;
		/** UnitCommand.OneClick_Custom_9 = 25 */ static readonly OneClick_Custom_9: UnitCommand;
		/** UnitCommand.PointBased_Custom_0 = 26 */ static readonly PointBased_Custom_0: UnitCommand;
		/** UnitCommand.PointBased_Custom_1 = 27 */ static readonly PointBased_Custom_1: UnitCommand;
		/** UnitCommand.PointBased_Custom_2 = 28 */ static readonly PointBased_Custom_2: UnitCommand;
		/** UnitCommand.PointBased_Custom_3 = 29 */ static readonly PointBased_Custom_3: UnitCommand;
		/** UnitCommand.PointBased_Custom_4 = 30 */ static readonly PointBased_Custom_4: UnitCommand;
		/** UnitCommand.PointBased_Custom_5 = 31 */ static readonly PointBased_Custom_5: UnitCommand;
		/** UnitCommand.PointBased_Custom_6 = 32 */ static readonly PointBased_Custom_6: UnitCommand;
		/** UnitCommand.PointBased_Custom_7 = 33 */ static readonly PointBased_Custom_7: UnitCommand;
		/** UnitCommand.PointBased_Custom_8 = 34 */ static readonly PointBased_Custom_8: UnitCommand;
		/** UnitCommand.PointBased_Custom_9 = 35 */ static readonly PointBased_Custom_9: UnitCommand;
		/** UnitCommand.Produce_Custom_0 = 36 */ static readonly Produce_Custom_0: UnitCommand;
		/** UnitCommand.Produce_Custom_1 = 37 */ static readonly Produce_Custom_1: UnitCommand;
		/** UnitCommand.Produce_Custom_2 = 38 */ static readonly Produce_Custom_2: UnitCommand;
		/** UnitCommand.Produce_Custom_3 = 39 */ static readonly Produce_Custom_3: UnitCommand;
		/** UnitCommand.Produce_Custom_4 = 40 */ static readonly Produce_Custom_4: UnitCommand;
		/** UnitCommand.Produce_Custom_5 = 41 */ static readonly Produce_Custom_5: UnitCommand;
		/** UnitCommand.Produce_Custom_6 = 42 */ static readonly Produce_Custom_6: UnitCommand;
		/** UnitCommand.Produce_Custom_7 = 43 */ static readonly Produce_Custom_7: UnitCommand;
		/** UnitCommand.Produce_Custom_8 = 44 */ static readonly Produce_Custom_8: UnitCommand;
		/** UnitCommand.Produce_Custom_9 = 45 */ static readonly Produce_Custom_9: UnitCommand;
	}
}
//#endregion

//#region UnitCommandAutomaticModeParams
declare namespace HordeClassLibrary.UnitComponents.OrdersSystem {
	class UnitCommandAutomaticModeParams extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly EnabledByDefault: boolean;
		readonly AutomatedAnimationCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationsCatalog;
	}
}
//#endregion

//#region IUnitProfessionData
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	interface IUnitProfessionData {

		// Properties:
		readonly Profession: HordeClassLibrary.UnitComponents.Enumerations.UnitProfession;
		readonly ProfessionParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams;

		// Methods:
		Initialize(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		Deinitialize(): void;

		ProcessDeath(): void;

		UpdateCommands(): void;
	}
	/** TypeScript type stub for .Net interface */
	abstract class IUnitProfessionData {}
}
//#endregion

//#region AUnitProfessionData
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	abstract class AUnitProfessionData<TUnitProfessionParams extends HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams> extends System.Object
		implements HordeClassLibrary.UnitComponents.ProfessionData.IUnitProfessionData
	{
		// Properties:
		readonly Profession: HordeClassLibrary.UnitComponents.Enumerations.UnitProfession;
		readonly ProfessionParams: TUnitProfessionParams;

		// Methods:
		Initialize(
			owner: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		Deinitialize(): void;

		ProcessDeath(): void;

		UpdateCommands(): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);

		// Some generics magic for TypeScript:
		private $AUnitProfessionData_TUnitProfessionParams: TUnitProfessionParams;
	}
}
//#endregion

//#region CapturableProfessionData
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	class CapturableProfessionData
		extends HordeClassLibrary.UnitComponents.ProfessionData.AUnitProfessionData<HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.CapturableProfessionParams>
		implements HordeClassLibrary.UnitComponents.ProfessionData.Interfaces.IUnitContainerProfession
	{
		// Constructors:
		constructor(
			professionParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.CapturableProfessionParams | null
		);

		// Properties:
		InsideUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly HasOperator: boolean;
		CaptureDelay: number;
		DestroyDisableTimer: HordeResurrection.Basic.Debugger.Countdowns.Countdown;
		readonly ContainerUnit: HordeClassLibrary.World.Objects.Units.Unit;

		// Methods:
		PlaceUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		KickUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		GetContainerCell(): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		DeleteInsideUnit(): void;

		KillOperator(): void;

		InsideUnitMustBeNull(): void;

		CanBeCapturedNow(): boolean;

		CanBeCapturedNow(
			knownUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		): boolean;

		DisallowDestroyOrderFor(
			disableDestroyOrderTicks: number
		): void;

		RestoreDestroyOrder(): void;
	}
}
//#endregion

//#region CompoundProfessionData
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	class CompoundProfessionData
		extends HordeClassLibrary.UnitComponents.ProfessionData.AUnitProfessionData<HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.CompoundProfessionParams>
	{
		// Constructors:
		constructor(
			professionParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.CompoundProfessionParams | null
		);

		// Methods:
		InitializeCompoundParts(
			producedUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
}
//#endregion

//#region HarvesterProfessionData
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	class HarvesterProfessionData
		extends HordeClassLibrary.UnitComponents.ProfessionData.AUnitProfessionData<HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.HarvesterProfessionParams>
	{
		// Constructors:
		constructor(
			professionParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.HarvesterProfessionParams | null
		);

		// Properties:
		readonly ItemInInventory: HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType;
		readonly ItemsCount: number;
		readonly HasItems: boolean;
		readonly TakeFrame: number;
		readonly Chops: HordeClassLibrary.UnitComponents.ProfessionData.HarvesterProfessionData.ChopsCounter;

		// Methods:
		GiveItem(
			itemType: HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType,
			amount: number
		): number;

		TakeItems(
			itemType: HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType,
			count: number
		): number;

		TakeAllItems(
			/*out*/ count: number
		): HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType;

		HasLogs(): boolean;

		HasSpaceForLogs(): boolean;

		HasMetalOrGold(): boolean;

		HasSpaceForMetalOrGold(): boolean;

		GetSpaceFor(
			itemType: HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType
		): number;

		IsEmptyFor(
			itemType: HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType
		): boolean;
	}
}
//#endregion

//#region HarvesterProfessionData.ChopsCounter
declare namespace HordeClassLibrary.UnitComponents.ProfessionData.HarvesterProfessionData {
	class ChopsCounter extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly Count: number;

		// Methods:
		OneChop(): void;

		Reset(): void;
	}
}
//#endregion

//#region IUnitContainerProfession
declare namespace HordeClassLibrary.UnitComponents.ProfessionData.Interfaces {
	interface IUnitContainerProfession {

		// Properties:
		readonly ContainerUnit: HordeClassLibrary.World.Objects.Units.Unit;

		// Methods:
		PlaceUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		KickUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		GetContainerCell(): HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
	/** TypeScript type stub for .Net interface */
	abstract class IUnitContainerProfession {}
}
//#endregion

//#region MetalStockProfessionData
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	class MetalStockProfessionData
		extends HordeClassLibrary.UnitComponents.ProfessionData.AUnitProfessionData<HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MetalStockProfessionParams>
	{
		// Constructors:
		constructor(
			professionParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MetalStockProfessionParams | null
		);

		// Properties:
		QueueLength: number;
	}
}
//#endregion

//#region MineProfessionData
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	class MineProfessionData
		extends HordeClassLibrary.UnitComponents.ProfessionData.AUnitProfessionData<HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MineProfessionParams>
	{
		// Constructors:
		constructor(
			professionParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MineProfessionParams | null
		);

		// Properties:
		readonly HasResources: boolean;

		// Methods:
		HasResource(
			resType: HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType
		): boolean;

		GetNextResourceType(): HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType;

		DrainResources(
			requiredAmount: number,
			/*out*/ resType: HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType
		): number;
	}
}
//#endregion

//#region MovableProfessionData
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	class MovableProfessionData
		extends HordeClassLibrary.UnitComponents.ProfessionData.AUnitProfessionData<HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MovableProfessionParams>
	{
		// Constructors:
		constructor(
			professionParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MovableProfessionParams | null
		);

		// Properties:
		readonly Steps: HordeResurrection.Basic.Primitives.PreciseFraction;

		// Methods:
		AddSteps(
			stepsSpeed: HordeResurrection.Basic.Primitives.PreciseFraction
		): boolean;
	}
}
//#endregion

//#region ReparableProfessionData
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	class ReparableProfessionData
		extends HordeClassLibrary.UnitComponents.ProfessionData.AUnitProfessionData<HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.ReparableProfessionParams>
	{
		// Constructors:
		constructor(
			professionParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.ReparableProfessionParams | null
		);

		// Properties:
		StartStage: HordeClassLibrary.UnitComponents.Utils.BuildingStageUtils.StageInfo;
		readonly RepairersCount: number;
		ResourcesRemainder: HordeClassLibrary.World.Simple.ResourcesAmountF;
		TimeRemainder: number;
		StartRepairTick: number;

		// Methods:
		CanAddRepairer(
			repairer: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		AddRepairer(
			repairer: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;
	}
}
//#endregion

//#region SawmillProfessionData
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	class SawmillProfessionData
		extends HordeClassLibrary.UnitComponents.ProfessionData.AUnitProfessionData<HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.SawmillProfessionParams>
	{
		// Constructors:
		constructor(
			professionParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.SawmillProfessionParams | null
		);

		// Properties:
		readonly LogsCount: number;
		readonly SawTimer: number;
		QueueLength: number;

		// Methods:
		GetFreeSpace(): number;

		GiveLogs(
			count: number
		): void;

		SawOneTick(): boolean;
	}
}
//#endregion

//#region TypeToProfession
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	abstract class TypeToProfession {

		// Methods:
		static GetProfession<T extends HordeClassLibrary.UnitComponents.ProfessionData.IUnitProfessionData>(
			$T: typeof HordeClassLibrary.UnitComponents.ProfessionData.IUnitProfessionData
		): HordeClassLibrary.UnitComponents.Enumerations.UnitProfession;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UnitProducerProfessionData
declare namespace HordeClassLibrary.UnitComponents.ProfessionData {
	class UnitProducerProfessionData
		extends HordeClassLibrary.UnitComponents.ProfessionData.AUnitProfessionData<HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.UnitProducerProfessionParams>
	{
		// Constructors:
		constructor(
			professionParams: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.UnitProducerProfessionParams | null
		);

		// Fields:
		static readonly /* const */ DefaultRallyPointConfigUid: string; // = "#UnitCommandConfig_SetRallypoint"

		// Properties:
		static readonly DefaultSetRallyPointCommandConfig: HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;
		readonly Waypoints: System.Collections.Concurrent.ConcurrentQueue<HordeResurrection.Basic.Primitives.Geometry.Point2D>;
	}
}
//#endregion

//#region BuildingStageUtils
declare namespace HordeClassLibrary.UnitComponents.Utils {
	abstract class BuildingStageUtils {

		// Methods:
		static GetNearDeathStage(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.Utils.BuildingStageUtils.StageInfo;

		static GetDestructionStage(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.Utils.BuildingStageUtils.StageInfo;

		static GetRepairStage(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.Utils.BuildingStageUtils.StageInfo;

		static GetBuildingStage(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			healthValue: number
		): HordeClassLibrary.UnitComponents.Utils.BuildingStageUtils.StageInfo;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BuildingStageUtils.StageInfo
declare namespace HordeClassLibrary.UnitComponents.Utils.BuildingStageUtils {
	class /* struct */ StageInfo extends System.ValueType {

		// Constructors:
		constructor(
			state: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState,
			stage?: number /* = 0 */
		);

		// Properties:
		readonly State: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState;
		readonly Stage: number;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region CompoundUtils
declare namespace HordeClassLibrary.UnitComponents.Utils {
	abstract class CompoundUtils {

		// Methods:
		static SelectCompoundPart(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null,
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			initialPart?: HordeClassLibrary.UnitComponents.Enumerations.CompoundPart /* = CompoundPart.Point */
		): HordeClassLibrary.UnitComponents.Enumerations.CompoundPart;

		static SetActualCompoundPart(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			initialPart?: HordeClassLibrary.UnitComponents.Enumerations.CompoundPart /* = CompoundPart.Point */
		): void;

		static SetActualNeighborsCompoundPart(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region HarvestUtils
declare namespace HordeClassLibrary.UnitComponents.Utils {
	abstract class HarvestUtils {

		// Methods:
		static CheckStock(
			harvester: HordeClassLibrary.World.Objects.Units.Unit | null,
			target: HordeClassLibrary.World.Objects.Units.Unit | null,
			item: HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType | null
		): boolean;

		static CountStockQueue(
			stockUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			checkRadius: number
		): number;

		static GetStockQueueLength(
			stockUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			stockProfession: HordeClassLibrary.UnitComponents.Enumerations.UnitProfession
		): number;

		static SearchNearestTree(
			workerUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			lumberStockUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			maxSpiralRadius: number
		): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		static SearchNearestMine(
			workerUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			metalStockUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			maxSpiralRadius: number,
			/*out*/ reachable: boolean
		): HordeClassLibrary.World.Objects.Units.Unit;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UnitDirectionUtils
declare namespace HordeClassLibrary.UnitComponents.Utils {
	abstract class UnitDirectionUtils {

		// Fields:
		static readonly /* const */ DirectionsCount: number; // = 8

		// Methods:
		static CalculateDirection(
			dir: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection,
			turnDir: number
		): HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;

		static GetDirection(
			x1: number,
			y1: number,
			x2: number,
			y2: number
		): HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;

		static GetDirection(
			p1: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			p2: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;

		static CalculateDirectionsSign(
			s1: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection,
			s2: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection
		): number;

		static DirectionToDxDy(
			s: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		static DxDyToDirection(
			dx: number,
			dy: number
		): HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;

		static DxDyToDirection(
			d: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;

		static TranslatePoint(
			p: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			s: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		static FlipPoint(
			pivot: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			p: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		static FlipDirection(
			direction: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection
		): HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UnitGeometryUtils
declare namespace HordeClassLibrary.UnitComponents.Utils {
	abstract class UnitGeometryUtils {

		// Methods:
		static GetPointsAtDistanceSafe(
			unit: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null,
			dist: number,
			targetPointsSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		): void;

		static GetPointsAtDistanceUnsafe(
			unit: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null,
			dist: number,
			targetPointsSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UnitSpecificationUtils
declare namespace HordeClassLibrary.UnitComponents.Utils {
	abstract class UnitSpecificationUtils {

		// Methods:
		static PatternFeatureToSpecification(
			patternFeature: HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature
		): HordeClassLibrary.UnitComponents.Enumerations.UnitSpecification;

		static SpecificationToPatternFeature(
			specification: HordeClassLibrary.UnitComponents.Enumerations.UnitSpecification
		): HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BaseBuildingBuildSelf
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding {
	class BaseBuildingBuildSelf
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();

		// Fields:
		static readonly TimeToBreakdown: number;
		static readonly BreakdownPeriod: number;
		static readonly CommonDisallowCommandsList: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand[];
		static readonly AutobuildDisallowCommandsList: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand[];
		static readonly /* const */ EpsilonHp: number; // = 1E-11
		static readonly /* const */ BreakdownDamage: number; // = 1
	}
}
//#endregion

//#region BaseBuildingDeath
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding {
	class BaseBuildingDeath
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();

		// Methods:
		static CreateRuins(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			deathType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): void;
	}
}
//#endregion

//#region BaseBuildingDoNothing
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding {
	class BaseBuildingDoNothing
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseBuildingProduce
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding {
	class BaseBuildingProduce
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();

		// Fields:
		static readonly DisallowCommandsList: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand[];
	}
}
//#endregion

//#region BaseBuildingProduceAt
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding {
	class BaseBuildingProduceAt
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseBuildingRepairSelf
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding {
	class BaseBuildingRepairSelf
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();

		// Fields:
		static readonly DisallowCommandsList: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand[];
	}
}
//#endregion

//#region CommonBaseBuilding
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding {
	abstract class CommonBaseBuilding {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BaseBuildingDestroySelf
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding.SpecialStates {
	class BaseBuildingDestroySelf
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseBuildingCanBePlaced
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special {
	class BaseBuildingCanBePlaced
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseBuildingCancel
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special {
	class BaseBuildingCancel
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCancel
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseBuildingEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special {
	class BaseBuildingEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseBuildingGetCommandType
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special {
	class BaseBuildingGetCommandType
		extends HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitGetCommandType
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseBuildingGetOrder
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special {
	class BaseBuildingGetOrder
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetOrder
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseBuildingGetSpeedAtCell
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special {
	class BaseBuildingGetSpeedAtCell
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseUnitCapture
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit {
	class BaseUnitCapture
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();

		// Fields:
		static readonly InitialStageTicks: number;
		static readonly DelayStageTicks: number;
		static readonly DisableDestroyOrderTicks: number;
	}
}
//#endregion

//#region BaseUnitDeath
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit {
	class BaseUnitDeath
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();

		// Methods:
		static CreateEffects(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			deathType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): void;

		static CreateDecayEffect(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			deathType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType
		): HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect;
	}
}
//#endregion

//#region BaseUnitDoNothing
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit {
	class BaseUnitDoNothing
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();

		// Methods:
		RandomTurn(
			motion: HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase | null,
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
}
//#endregion

//#region BaseUnitHit
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit {
	class BaseUnitHit
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseUnitHoldPosition
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit {
	class BaseUnitHoldPosition
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseUnitMove
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit {
	class BaseUnitMove
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseUnitPathFinding
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit {
	class BaseUnitPathFinding
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseUnitReload
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit {
	class BaseUnitReload
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseUnitTurn
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit {
	class BaseUnitTurn
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseUnitWait
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit {
	class BaseUnitWait
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region CommonBaseUnit
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit {
	abstract class CommonBaseUnit {

		// Fields:
		static readonly /* const */ TurnDelay: number; // = 1
		static readonly /* const */ DoNothingTurnDelay: number; // = 1
		static readonly /* const */ DoNothingTurnProbability: number; // = 1

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AttackPriorityHelper
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.AnalyzeHelpers {
	class AttackPriorityHelper extends System.Object {

		// Constructors:
		constructor();

		// Methods:
		IsNewTargetMoreActual(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			oldTarget: HordeClassLibrary.World.Objects.Units.Unit | null,
			newTarget: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean | null;

		NearestUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			target1: HordeClassLibrary.World.Objects.Units.Unit | null,
			target2: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.World.Objects.Units.Unit;

		NearestPathUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			target1: HordeClassLibrary.World.Objects.Units.Unit | null,
			target2: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.World.Objects.Units.Unit;

		CanPassToAttackDistance(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			target: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;
	}
}
//#endregion

//#region BaseUnitAnalyzeSituation
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special {
	class BaseUnitAnalyzeSituation
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerAnalyzeSituation
	{
		// Constructors:
		constructor();

		// Methods:
		SuggestAlarm(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			newAlarm: HordeClassLibrary.UnitComponents.Notifications.Alarms.BaseUnitAlarm | null
		): boolean;

		ProcessComradeIsAttackedEvents(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
}
//#endregion

//#region BaseUnitCanBePlaced
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special {
	class BaseUnitCanBePlaced
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseUnitEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special {
	class BaseUnitEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseUnitGetCommandType
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special {
	class BaseUnitGetCommandType
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetCommandType
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseUnitGetOrder
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special {
	class BaseUnitGetOrder
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetOrder
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseUnitGetSpeedAtCell
declare namespace HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special {
	class BaseUnitGetSpeedAtCell
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BridgeDeath
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Bridge {
	class BridgeDeath
		extends HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingDeath
	{
		// Constructors:
		constructor();

		// Methods:
		static KillAllUnitsOnBridge(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
}
//#endregion

//#region BridgeEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Bridge {
	class BridgeEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region MineCanBePlaced
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Mine {
	class MineCanBePlaced
		extends HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingCanBePlaced
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region MineDoNothing
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Mine {
	class MineDoNothing
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region MineUtils
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Mine {
	abstract class MineUtils {

		// Methods:
		static CountResources(
			mine: HordeClassLibrary.World.Objects.Units.Unit | null,
			/*out*/ goldAmount: number,
			/*out*/ metalAmount: number
		): void;

		static CountResources(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null,
			mineRect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			/*out*/ goldAmount: number,
			/*out*/ metalAmount: number
		): void;

		static HasResources(
			mine: HordeClassLibrary.World.Objects.Units.Unit | null,
			resMask?: HordeClassLibrary.World.Objects.Tiles.ResourceTileType | null /* = null */
		): boolean;

		static HasResources(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null,
			mineRect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			resMask?: HordeClassLibrary.World.Objects.Tiles.ResourceTileType | null /* = null */
		): boolean;

		static CountKnownResources(
			mine: HordeClassLibrary.World.Objects.Units.Unit | null,
			/*out*/ goldAmount: number,
			/*out*/ metalAmount: number
		): void;

		static CountKnownResources(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			mineRect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			/*out*/ goldAmount: number,
			/*out*/ metalAmount: number
		): void;

		static HasKnownResources(
			mine: HordeClassLibrary.World.Objects.Units.Unit | null,
			resMask?: HordeClassLibrary.World.Objects.Tiles.ResourceTileType | null /* = null */
		): boolean;

		static HasKnownResources(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			mineRect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			resMask?: HordeClassLibrary.World.Objects.Tiles.ResourceTileType | null /* = null */
		): boolean;

		static ConvertResourceTileToItemType(
			resTileType: HordeClassLibrary.World.Objects.Tiles.ResourceTileType
		): HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType;

		static ConvertResourceItemToTileType(
			resTileType: HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType
		): HordeClassLibrary.World.Objects.Tiles.ResourceTileType;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region PassiveResourcesIncomeWorker
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Other {
	class PassiveResourcesIncomeWorker
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick
	{
		// Constructors:
		constructor();

		// Properties:
		readonly IncomeDelay: number;
		readonly IncomeOnlyOnDoNothing: boolean;
		readonly GoldIncomeProbability: number;
		readonly MetalIncomeProbability: number;
		readonly LumberIncomeProbability: number;
		readonly GoldIncomeValue: number;
		readonly MetalIncomeValue: number;
		readonly LumberIncomeValue: number;
	}
}
//#endregion

//#region KickAwayFromEntranceEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.ProducingBuilding {
	class KickAwayFromEntranceEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region LumberStockEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Stock {
	class LumberStockEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.Buildings.Stock.ResourcesStockEveryTick
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region MetalStockEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Stock {
	class MetalStockEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.Buildings.Stock.ResourcesStockEveryTick
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ResourcesStockEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Stock {
	abstract class ResourcesStockEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick
	{
		// Fields:
		static readonly /* const */ CountPeriod: number; // = 4
		static readonly /* const */ CountRadius: number; // = 2

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region TowerAnalyzeSituation
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Tower.Special {
	class TowerAnalyzeSituation
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerAnalyzeSituation
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region TowerHit
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Tower {
	class TowerHit
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region TowerReload
declare namespace HordeClassLibrary.UnitComponents.Workers.Buildings.Tower {
	class TowerReload
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region AUnitWorker
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces {
	abstract class AUnitWorker extends System.Object {

		// Properties:
		readonly WorkerDelegate: System.Delegate;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AUnitWorkerCommon
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces {
	abstract class AUnitWorkerCommon
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorker
	{
		// Methods:
		Work(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AUnitWorkerCommon.DelegateWork
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon {
	interface /* delegate */ DelegateWork {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
	/** TypeScript type stub for .Net delegate */
	class DelegateWork { constructor(func: DelegateWork); }
}
//#endregion

//#region AUnitWorkerAnalyzeSituation
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special {
	abstract class AUnitWorkerAnalyzeSituation
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorker
	{
		// Methods:
		AnalyzeSituation(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AUnitWorkerAnalyzeSituation.DelegateAnalyzeSituation
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerAnalyzeSituation {
	interface /* delegate */ DelegateAnalyzeSituation {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
	/** TypeScript type stub for .Net delegate */
	class DelegateAnalyzeSituation { constructor(func: DelegateAnalyzeSituation); }
}
//#endregion

//#region AUnitWorkerCanBePlaced
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special {
	abstract class AUnitWorkerCanBePlaced
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorker
	{
		// Methods:
		CanBePlacedByRealMap(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null,
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			x: number,
			y: number,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			checkForTerritory?: boolean /* = false */,
			considerUnit?: boolean /* = true */
		): boolean;

		CanBePlacedByKnownMap(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			x: number,
			y: number,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null,
			checkForTerritory?: boolean /* = false */,
			considerUnit?: boolean /* = true */
		): boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AUnitWorkerCanBePlaced.DelegateCanBePlacedByRealMap
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced {
	interface /* delegate */ DelegateCanBePlacedByRealMap {
		(
			scn: HordeClassLibrary.World.ScenaComponents.Scena | null,
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			x: number,
			y: number,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			checkForTerritory?: boolean /* = false */,
			considerUnit?: boolean /* = true */
		): boolean;
	}
	/** TypeScript type stub for .Net delegate */
	class DelegateCanBePlacedByRealMap { constructor(func: DelegateCanBePlacedByRealMap); }
}
//#endregion

//#region AUnitWorkerCanBePlaced.DelegateCanBePlacedByKnownMap
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced {
	interface /* delegate */ DelegateCanBePlacedByKnownMap {
		(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			x: number,
			y: number,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null,
			checkForTerritory?: boolean /* = false */,
			considerUnit?: boolean /* = true */
		): boolean;
	}
	/** TypeScript type stub for .Net delegate */
	class DelegateCanBePlacedByKnownMap { constructor(func: DelegateCanBePlacedByKnownMap); }
}
//#endregion

//#region AUnitWorkerCancel
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special {
	abstract class AUnitWorkerCancel
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorker
	{
		// Methods:
		Cancel(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AUnitWorkerCancel.DelegateCancel
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCancel {
	interface /* delegate */ DelegateCancel {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
	/** TypeScript type stub for .Net delegate */
	class DelegateCancel { constructor(func: DelegateCancel); }
}
//#endregion

//#region AUnitWorkerEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special {
	abstract class AUnitWorkerEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorker
	{
		// Methods:
		ProcessTick(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AUnitWorkerEveryTick.DelegateProcessTick
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick {
	interface /* delegate */ DelegateProcessTick {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
	/** TypeScript type stub for .Net delegate */
	class DelegateProcessTick { constructor(func: DelegateProcessTick); }
}
//#endregion

//#region AUnitWorkerGetCommandType
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special {
	abstract class AUnitWorkerGetCommandType
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorker
	{
		// Methods:
		GetCommandType(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			commandArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs | null
		): boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AUnitWorkerGetCommandType.DelegateGetCommandType
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetCommandType {
	interface /* delegate */ DelegateGetCommandType {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			commandArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs | null
		): boolean;
	}
	/** TypeScript type stub for .Net delegate */
	class DelegateGetCommandType { constructor(func: DelegateGetCommandType); }
}
//#endregion

//#region AUnitWorkerGetOrder
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special {
	abstract class AUnitWorkerGetOrder
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorker
	{
		// Methods:
		GetOrder(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			commandArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs | null
		): boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AUnitWorkerGetOrder.DelegateGetOrder
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetOrder {
	interface /* delegate */ DelegateGetOrder {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			commandArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs | null
		): boolean;
	}
	/** TypeScript type stub for .Net delegate */
	class DelegateGetOrder { constructor(func: DelegateGetOrder); }
}
//#endregion

//#region AUnitWorkerGetSpeedAtCell
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special {
	abstract class AUnitWorkerGetSpeedAtCell
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorker
	{
		// Fields:
		static readonly /* const */ OutOfScenaSpeedValue: number; // = -2
		static readonly /* const */ UnknownTileSpeedValue: number; // = 1

		// Methods:
		GetSpeedAtCellByRealMap(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): number;

		GetSpeedAtCellByKnownMap(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		): number;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AUnitWorkerGetSpeedAtCell.DelegateGetSpeedAtCellByRealMap
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell {
	interface /* delegate */ DelegateGetSpeedAtCellByRealMap {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): number;
	}
	/** TypeScript type stub for .Net delegate */
	class DelegateGetSpeedAtCellByRealMap { constructor(func: DelegateGetSpeedAtCellByRealMap); }
}
//#endregion

//#region AUnitWorkerGetSpeedAtCell.DelegateGetSpeedAtCellByKnownMap
declare namespace HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell {
	interface /* delegate */ DelegateGetSpeedAtCellByKnownMap {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ troubleUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		): number;
	}
	/** TypeScript type stub for .Net delegate */
	class DelegateGetSpeedAtCellByKnownMap { constructor(func: DelegateGetSpeedAtCellByKnownMap); }
}
//#endregion

//#region ScriptUnitWorkerAnalyzeSituation
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class ScriptUnitWorkerAnalyzeSituation
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerAnalyzeSituation
	{
		// Constructors:
		constructor();

		// Properties:
		readonly FuncName: string;
	}
}
//#endregion

//#region ScriptUnitWorkerCanBePlaced
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class ScriptUnitWorkerCanBePlaced
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced
	{
		// Constructors:
		constructor();

		// Properties:
		readonly ByKnownMapFuncName: string;
		readonly ByRealMapFuncName: string;
	}
}
//#endregion

//#region CanBePlacedByKnownMapJsResult
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class CanBePlacedByKnownMapJsResult extends System.Object
		implements System.IEquatable<HordeClassLibrary.UnitComponents.Workers.Script.CanBePlacedByKnownMapJsResult>
	{
		// Constructors:
		constructor(
			CanBePlaced: boolean,
			TroubleUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		);

		// Properties:
		CanBePlaced: boolean;
		TroubleUnit: HordeClassLibrary.World.Objects.Units.KnownUnit;
	}
}
//#endregion

//#region CanBePlacedByRealMapJsResult
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class CanBePlacedByRealMapJsResult extends System.Object
		implements System.IEquatable<HordeClassLibrary.UnitComponents.Workers.Script.CanBePlacedByRealMapJsResult>
	{
		// Constructors:
		constructor(
			CanBePlaced: boolean,
			TroubleUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		CanBePlaced: boolean;
		TroubleUnit: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region ScriptUnitWorkerCancel
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class ScriptUnitWorkerCancel
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCancel
	{
		// Constructors:
		constructor();

		// Properties:
		readonly FuncName: string;
	}
}
//#endregion

//#region ScriptUnitWorkerEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class ScriptUnitWorkerEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick
	{
		// Constructors:
		constructor();

		// Properties:
		readonly FuncName: string;
	}
}
//#endregion

//#region ScriptUnitWorkerGetCommandType
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class ScriptUnitWorkerGetCommandType
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetCommandType
	{
		// Constructors:
		constructor();

		// Properties:
		readonly FuncName: string;
	}
}
//#endregion

//#region ScriptUnitWorkerGetOrder
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class ScriptUnitWorkerGetOrder
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetOrder
	{
		// Constructors:
		constructor();

		// Properties:
		readonly FuncName: string;
	}
}
//#endregion

//#region ScriptUnitWorkerGetSpeedAtCell
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class ScriptUnitWorkerGetSpeedAtCell
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell
	{
		// Constructors:
		constructor();

		// Properties:
		readonly ByKnownMapFuncName: string;
		readonly ByRealMapFuncName: string;
	}
}
//#endregion

//#region GetSpeedAtCellByKnownMapJsResult
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class GetSpeedAtCellByKnownMapJsResult extends System.Object
		implements System.IEquatable<HordeClassLibrary.UnitComponents.Workers.Script.GetSpeedAtCellByKnownMapJsResult>
	{
		// Constructors:
		constructor(
			Speed: number,
			TroubleUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		);

		// Properties:
		Speed: number;
		TroubleUnit: HordeClassLibrary.World.Objects.Units.KnownUnit;
	}
}
//#endregion

//#region GetSpeedAtCellByRealMapJsResult
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class GetSpeedAtCellByRealMapJsResult extends System.Object
		implements System.IEquatable<HordeClassLibrary.UnitComponents.Workers.Script.GetSpeedAtCellByRealMapJsResult>
	{
		// Constructors:
		constructor(
			Speed: number,
			TroubleUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		Speed: number;
		TroubleUnit: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region ScriptUnitWorkerState
declare namespace HordeClassLibrary.UnitComponents.Workers.Script {
	class ScriptUnitWorkerState
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();

		// Properties:
		readonly FuncName: string;
	}
}
//#endregion

//#region UnitWorkerAnalyzeSituationStub
declare namespace HordeClassLibrary.UnitComponents.Workers.Stubs {
	class UnitWorkerAnalyzeSituationStub
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerAnalyzeSituation
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region UnitWorkerCanBePlacedStub
declare namespace HordeClassLibrary.UnitComponents.Workers.Stubs {
	class UnitWorkerCanBePlacedStub
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region UnitWorkerCancelStub
declare namespace HordeClassLibrary.UnitComponents.Workers.Stubs {
	class UnitWorkerCancelStub
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCancel
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region UnitWorkerEveryTickStub
declare namespace HordeClassLibrary.UnitComponents.Workers.Stubs {
	class UnitWorkerEveryTickStub
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region UnitWorkerGetCommandTypeStub
declare namespace HordeClassLibrary.UnitComponents.Workers.Stubs {
	class UnitWorkerGetCommandTypeStub
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetCommandType
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region UnitWorkerGetOrderStub
declare namespace HordeClassLibrary.UnitComponents.Workers.Stubs {
	class UnitWorkerGetOrderStub
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetOrder
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region UnitWorkerGetSpeedAtCellStub
declare namespace HordeClassLibrary.UnitComponents.Workers.Stubs {
	class UnitWorkerGetSpeedAtCellStub
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region UnitWorkerStub
declare namespace HordeClassLibrary.UnitComponents.Workers.Stubs {
	class UnitWorkerStub
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region HealAuraEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Aura {
	class HealAuraEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick
	{
		// Constructors:
		constructor();

		// Properties:
		HealPeriod: number;
		HealRange: number;
		HealValue: number;

		// Methods:
		ProcessHealing(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
}
//#endregion

//#region WorkerBuild
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Builder {
	class WorkerBuild
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();

		// Fields:
		static readonly /* const */ StandAnimationState: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState; // = 0
		static readonly /* const */ BuildAnimationState: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState; // = 9
		static readonly /* const */ BuildAnimationFallbackState: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState; // = 0
	}
}
//#endregion

//#region WorkerBuildProgressUtils
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Builder {
	abstract class WorkerBuildProgressUtils {

		// Methods:
		static GetProducedHealth(
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			totalWorkTime: number
		): number;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region WorkerPreBuild
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Builder {
	class WorkerPreBuild
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();

		// Fields:
		static readonly /* const */ DisbandPeriod: number; // = 17
		static readonly /* const */ DisbandRetriesMaxCount: number; // = 32
	}
}
//#endregion

//#region WorkerRepair
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Builder {
	class WorkerRepair
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();

		// Fields:
		static readonly /* const */ StandAnimationState: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState; // = 0
		static readonly /* const */ RepairAnimationState: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState; // = 9
		static readonly /* const */ RepairAnimationFallbackState: HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState; // = 0
	}
}
//#endregion

//#region WorkerRepairProgressUtils
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Builder {
	abstract class WorkerRepairProgressUtils {

		// Methods:
		static GetLeftRepairTime(
			repairedUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): number;

		static GetRepairedHealth(
			repairedUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			repairTime: number,
			/*out*/ newTimeRemainder: number
		): number;

		static GetBaseRepairTime(
			repairedUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): number;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region HarverstWorkerUtils
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Harvester {
	abstract class HarverstWorkerUtils {

		// Methods:
		static DropItems(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			harvesterData: HordeClassLibrary.UnitComponents.ProfessionData.HarvesterProfessionData | null,
			harvesterParams?: HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.HarvesterProfessionParams | null /* = null */
		): void;

		static TryGiveHarvestOrder(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null,
			productUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region HarvesterChopDown
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Harvester {
	class HarvesterChopDown
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region HarvesterEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Harvester {
	class HarvesterEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitEveryTick
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region HarvesterGatherResource
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Harvester {
	class HarvesterGatherResource
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region HarvesterTransferResource
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Harvester {
	class HarvesterTransferResource
		extends HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region MachineEveryTick
declare namespace HordeClassLibrary.UnitComponents.Workers.Units.Machine {
	class MachineEveryTick
		extends HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitEveryTick
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ProducingWorkerUtils
declare namespace HordeClassLibrary.UnitComponents.Workers.Utils {
	abstract class ProducingWorkerUtils {

		// Methods:
		static CanWaitDisbandedUnitsForBuildOrder(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		static RefundBuildingCost(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		static SafeCancelOrderProduce(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region DescriptionExpander
declare namespace HordeClassLibrary.Utils {
	abstract class DescriptionExpander {

		// Methods:
		static Expand(
			obj: any | null,
			text: string | null
		): string;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region EnumUtils
declare namespace HordeClassLibrary.Utils {
	abstract class EnumUtils {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region FromString
declare namespace HordeClassLibrary.Utils {
	abstract class FromString {

		// Methods:
		static ParseInt(
			str: string | null
		): number;

		static ParseIntArr(
			str: string | null
		): number[];

		static ParsePoint2D(
			str: string | null
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region GeometryUtils
declare namespace HordeClassLibrary.Utils {
	abstract class GeometryUtils {

		// Methods:
		static DistanceChebushevPointPoint(
			px1: number,
			py1: number,
			px2: number,
			py2: number
		): number;

		static DistanceMinkowskiPointPoint(
			px1: number,
			py1: number,
			px2: number,
			py2: number
		): number;

		static DistanceMinkowskiPointPoint(
			p1: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			p2: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): number;

		static DistanceEuclidPointPoint(
			px1: number,
			py1: number,
			px2: number,
			py2: number
		): number;

		static DistanceEuclidPointPoint(
			px1: number,
			py1: number,
			px2: number,
			py2: number
		): number;

		static DistanceEuclidPointPointInPower2(
			px1: number,
			py1: number,
			px2: number,
			py2: number
		): number;

		static DistanceEuclidPointPointInPower2(
			p1: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			p2: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): number;

		static DistanceEuclidPointPointInPower2(
			px1: number,
			py1: number,
			px2: number,
			py2: number
		): number;

		static DistanceEuclidPointSegment(
			px: number,
			py: number,
			sx1: number,
			sy1: number,
			sx2: number,
			sy2: number
		): number;

		static DistanceEuclidPointSegment(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			start: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			end: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): number;

		static DistanceEuclidPointStraight(
			px: number,
			py: number,
			sx1: number,
			sy1: number,
			sx2: number,
			sy2: number
		): number;

		static DistanceEuclidPointStraight(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			start: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			end: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): number;

		static GetDirection(
			x1: number,
			y1: number,
			x2: number,
			y2: number,
			dirsCount: number
		): number;

		static GetDirection(
			p1: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			p2: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			dirsCount: number
		): number;

		static GetDirection4(
			p1: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			p2: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeResurrection.Basic.Primitives.Geometry.Direction4;

		static RectCrossRect(
			sx1: number,
			sy1: number,
			sx2: number,
			sy2: number,
			sx3: number,
			sy3: number,
			sx4: number,
			sy4: number
		): boolean;

		static RectCrossRect(
			p1: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			p2: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			p3: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			p4: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		static RectCrossRect(
			r1: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			r2: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): boolean;

		static PointInRect(
			px: number,
			py: number,
			rx: number,
			ry: number,
			rw: number,
			rh: number
		): boolean | null;

		static AveragePoint(
			points: System.Collections.Generic.IEnumerable<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null,
			/*out*/ posX: number,
			/*out*/ posY: number
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		static AveragePoint(
			points: System.Collections.Generic.IEnumerable<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		static GetVisualNearestPoint(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			points: System.Collections.Generic.ICollection<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		static GetRectangleVisualNearestPointsByMinkowski(
			rect1: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			rect2: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			/*out*/ nearestPointRect1: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ nearestPointRect2: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): number;

		static VisualNearestPointRectangeToPoint(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			/*out*/ nearestRectPoint: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): number;

		static SegmentsIntersect(
			s1: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			e1: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			s2: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			e2: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): System.Tuple<number, number>;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region CheatsGlobals
declare namespace HordeClassLibrary.World.Const {
	abstract class CheatsGlobals {

		// Properties:
		static readonly MessagesColor: HordeResurrection.Basic.Primitives.HordeColor;
		static readonly ReplayMessagesColor: HordeResurrection.Basic.Primitives.HordeColor;
		static readonly AddResourcesAmount: HordeClassLibrary.World.Simple.ResourcesAmount;
		static readonly AddResourcesMaxAmount: HordeClassLibrary.World.Simple.ResourcesAmount;
		static readonly UnitDamageValue: number;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region DebugConstants
declare namespace HordeClassLibrary.World.Const {
	abstract class DebugConstants {

		// Fields:
		static readonly /* const */ DumpTilesetCanvasesOnInitializationComplete: boolean; // = false

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region SettingsConstants
declare namespace HordeClassLibrary.World.Const {
	abstract class SettingsConstants {

		// Fields:
		static HordeProcessNumber: number;
		static HordeGameProcessNumber: number;
		static readonly /* const */ ContentRoot: string; // = "Content/"
		static readonly /* const */ SettingsDir: string; // = "Content/Settings/"
		static readonly /* const */ DefaultHordeSettingsFilePath: string; // = "Content/Settings/HordeSettings.Default.json"
		static readonly /* const */ UserHordeSettingsMainFilePath: string; // = "Content/Settings/HordeSettings.User.json"
		static readonly /* const */ UserHordeSettingsFilePathMask: string; // = "Content/Settings/HordeSettings.User.Instance{0}.json"
		static readonly /* const */ KeybindingSettingsFilePath: string; // = "Content/Settings/Keybindings.Default.json"
		static readonly /* const */ UserKeybindingSettingsFilePath: string; // = "Content/Settings/Keybindings.User.json"
		static readonly /* const */ ContentPacksRegistryFilePath: string; // = "Content/Settings/ModsRegistry.json"
		static readonly /* const */ HordeServersListFilePath: string; // = "Content/Settings/HordeServers.json"
		static readonly /* const */ HordeServersExtraListFilePath: string; // = "Content/Settings/HordeServers.Extra.json"
		static readonly /* const */ HordeInternetClientConfigurationFilePath: string; // = "Content/Settings/HordeInternetClient.json"
		static readonly /* const */ HordeLanPeerConfigurationFilePath: string; // = "Content/Settings/HordeLanPeer.json"
		static readonly /* const */ LauncherPreferencesDefaultFilePath: string; // = "Content/Settings/LauncherPreferences.Default.json"
		static readonly /* const */ LauncherPreferencesUserFilePath: string; // = "Content/Settings/LauncherPreferences.User.json"
		static readonly /* const */ ReportsStateDefaultFilePath: string; // = "Content/Settings/ReportsState.Default.json"
		static readonly /* const */ ReportsStateUserFilePath: string; // = "Content/Settings/ReportsState.User.json"
		static readonly /* const */ ConfigsDir: string; // = "Content/Configs/"
		static readonly /* const */ ConfigsFileExtension: string; // = ".json"
		static readonly /* const */ ScenasDir: string; // = "Content/Scenas/"
		static readonly /* const */ ScenaFileExtension: string; // = ".scn"
		static readonly /* const */ ForcesConfigPath: string; // = "Content/Configs/ForceConfigs.json"
		static readonly /* const */ UnitConfigsDir: string; // = "Content/Configs/UnitConfigs/"
		static readonly /* const */ BulletConfigsFilePath: string; // = "Content/Configs/BulletConfigs.json"
		static readonly /* const */ CitadelDirectoryPath: string; // = "Content/Configs/Citadel/"
		static readonly /* const */ CitadelForcesConfigPath: string; // = "Content/Configs/Citadel/horde_2_units.h2u"
		static readonly /* const */ VisualEffectConfigsFilePath: string; // = "Content/Configs/VisualEffectConfigs.json"
		static readonly /* const */ SoundEffectConfigsFilePath: string; // = "Content/Configs/SoundEffectConfigs.json"
		static readonly /* const */ UnitCommandConfigsFilePath: string; // = "Content/Configs/UnitCommandConfigs.json"
		static readonly /* const */ CitadelStringsFilePath: string; // = "Content/Configs/HordeCitadelTexts.json"
		static readonly /* const */ RulesFilePath: string; // = "Content/Configs/GameRules.json"
		static readonly /* const */ MindCharactersDir: string; // = "Content/Configs/Characters/"
		static readonly /* const */ ContentPacksDir: string; // = "Content/Mods/"
		static readonly /* const */ ContentPackInfoFileName: string; // = "ModInfo.json"
		static readonly /* const */ CoreContentPackInfoFilePath: string; // = "Content/Configs/CoreContentPack.json"
		static readonly /* const */ CoreContentPackUid: string; // = "#ContentPack_Core"
		static readonly /* const */ GraphicsDir: string; // = "Content/Images/"
		static readonly /* const */ GraphicInfoFileExtension: string; // = ".ginf"
		static readonly /* const */ GraphicFileExtension: string; // = ".png"
		static readonly /* const */ GraphicMaskFileExtension: string; // = ".mask.png"
		static readonly /* const */ GraphicExternalCatalogExtension: string; // = ".gcatalog"
		static readonly /* const */ AnimationCatalogsFilePath: string; // = "Content/Configs/AnimationCatalogs.json"
		static readonly /* const */ SoundsDir: string; // = "Content/Sounds/"
		static readonly /* const */ SoundInfoFileExtension: string; // = ".sinf"
		static readonly /* const */ SoundFileExtension: string; // = ".xsnd"
		static readonly /* const */ SoundExternalCatalogExtension: string; // = ".scatalog"
		static readonly /* const */ SoundCatalogsFilePath: string; // = "Content/Configs/SoundCatalogs.json"
		static readonly /* const */ FontsDir: string; // = "Content/Fonts/"
		static readonly /* const */ FontInfoFileExtension: string; // = ".finf"
		static readonly /* const */ FontImagesDir: string; // = "Content/Images/Fonts/"
		static readonly /* const */ VectorFontsDir: string; // = "Content/Fonts/VectorFonts/"
		static readonly /* const */ VectorFontPathMask: string; // = "Content/Fonts/VectorFonts/{0}.ttf"
		static readonly /* const */ GuiParamsDir: string; // = "Content/Configs/GuiParams/"
		static readonly /* const */ GuiParamsFileExt: string; // = ".json"
		static readonly /* const */ GuiParamsFilePathMask: string; // = "Content/Configs/GuiParams/GUIParams_{0}.json"
		static readonly /* const */ BackupDirName: string; // = "_backups"
		static readonly /* const */ AutoMigrateDirName: string; // = "_backups/auto-migrate"
		static readonly /* const */ BackupUnitConfigsDirName: string; // = "_backups/UnitConfigs"
		static readonly /* const */ BackupGuiParamsDirName: string; // = "_backups/GuiParams"
		static readonly /* const */ BackupMindCharactersDirName: string; // = "_backups/Characters"
		static readonly /* const */ ScriptsDir: string; // = "Content/Scripts/"
		static readonly /* const */ UserDataDir: string; // = "Content/UserData/"
		static readonly /* const */ ScreensDir: string; // = "Content/UserData/Screens/"
		static readonly /* const */ ScreensFileExtension: string; // = ".png"
		static readonly /* const */ ScreensPathMask: string; // = "Content/UserData/Screens/{0:yyyy-MM-dd_HH-mm-ss}.png"
		static readonly /* const */ ScreensPathMaskExt: string; // = "Content/UserData/Screens/{0:yyyy-MM-dd_HH-mm-ss}_{1}.png"
		static readonly /* const */ ReplaysDir: string; // = "Content/UserData/Replays/"
		static readonly /* const */ ReplaysFileExtension: string; // = ".json"
		static readonly /* const */ ReplaysPathMask: string; // = "Content/UserData/Replays/{0:yyyy-MM-dd_HH-mm-ss}.json"
		static readonly /* const */ ReplaysPathMaskExt: string; // = "Content/UserData/Replays/{0:yyyy-MM-dd_HH-mm-ss}_{1}.json"
		static readonly /* const */ LogsDir: string; // = "Content/UserData/Logs/"
		static readonly /* const */ LogPathMask: string; // = "Content/UserData/Logs/{0}.log"
		static readonly /* const */ ReportsDir: string; // = "Content/UserData/Reports/"
		static readonly /* const */ DesyncReportsDir: string; // = "Content/UserData/Reports/Desync/"
		static readonly /* const */ DesyncReportMask: string; // = "Content/UserData/Reports/Desync/{0:yyyy-MM-dd_HH-mm-ss}.zip"
		static readonly /* const */ CrashLogsDir: string; // = "Reports/CrashLogs/"
		static readonly /* const */ MinidumpsDir: string; // = "Reports/CrashLogs/"
		static readonly /* const */ TmpDir: string; // = "Content/UserData/Tmp/"
		static readonly /* const */ ExportImagePathMask: string; // = "Content/UserData/Tmp/{0}.png"
		static readonly /* const */ CacheDir: string; // = "Content/UserData/Cache/"
		static readonly /* const */ CanvasesCacheInfoExt: string; // = ".json"
		static readonly /* const */ TileCanvasesCacheDir: string; // = "Content/UserData/Cache/TileCanvases/"
		static readonly /* const */ TileCanvasesCachePathMask: string; // = "Content/UserData/Cache/TileCanvases/TilesCanvas-{0}.png"
		static readonly /* const */ InitializeLogsMutexName: string; // = "HordeResurrection_InitializeLogsMutexName"
		static readonly /* const */ PickupGraphicCatalogsMutexName: string; // = "HordeResurrection_PickupGraphicCatalogs"
		static readonly /* const */ PickupSoundCatalogsMutexName: string; // = "HordeResurrection_PickupSoundCatalogs"
		static readonly /* const */ PathSeparator: string; // = "/"
		static readonly /* const */ NetworkScenaPartSize: number; // = 1048576
		static readonly /* const */ NetworkDownloadedScenaNamePrefix: string; // = "download "
		static readonly /* const */ NetworkScenaPathMask: string; // = "Content/Scenas/download {0}.scn"

		// Properties:
		static readonly ScriptFileExtensions: System.Collections.Generic.IReadOnlySet<string>;
		static readonly ScriptsCacheDir: string;
		static readonly CanvasesCacheDir: string;
		static readonly CanvasesCachePathMask: string;
		static readonly MaskCanvasesCachePathMask: string;

		// Methods:
		static SetupScriptsCacheDir(): void;

		static SetupCanvasesCacheDir(): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region TimeConverter
declare namespace HordeClassLibrary.World.Const {
	abstract class TimeConverter {

		// Fields:
		static readonly /* const */ DefaultFps: number; // = 50
		static readonly /* const */ DefaultUnitFps: number; // = 25

		// Methods:
		static SecondsToDefaultFPS(
			seconds: number
		): number;

		static SecondsToDefaultUnitFPS(
			seconds: number
		): number;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UidPrefixes
declare namespace HordeClassLibrary.World.Const {
	abstract class UidPrefixes {

		// Fields:
		static readonly /* const */ AnimationsCatalog: string; // = "#AnimCatalog_"
		static readonly /* const */ AnimationsAtlas: string; // = "#AnimAtlas_"
		static readonly /* const */ SoundsCatalog: string; // = "#SoundsCatalog_"
		static readonly /* const */ SoundResourceInfo: string; // = "#SoundInfo_"
		static readonly /* const */ UnitConfig: string; // = "#UnitConfig_"
		static readonly /* const */ BulletConfig: string; // = "#BulletConfig_"
		static readonly /* const */ VisualEffectConfig: string; // = "#VisualEffectConfig_"
		static readonly /* const */ SoundEffectConfig: string; // = "#SoundEffectConfig_"
		static readonly /* const */ Force: string; // = "#Force_"
		static readonly /* const */ StringConfig: string; // = "#String_"
		static readonly /* const */ RuleConfig: string; // = "#GameRule_"
		static readonly /* const */ UnitCommandConfig: string; // = "#UnitCommandConfig_"
		static readonly /* const */ MindCharacter: string; // = "#MindCharacter_"
		static readonly /* const */ CitadelStringConfig: string; // = "#String_Citadel_"
		static readonly /* const */ CitadelUnitConfigMask: string; // = "#UnitConfig_Citadel_{0}_{1}"
		static readonly /* const */ CitadelForce: string; // = "#Force_Citadel_"
		static readonly /* const */ ContentPackPrefix: string; // = "#ContentPack_"

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UnitConstants
declare namespace HordeClassLibrary.World.Const {
	abstract class UnitConstants {

		// Fields:
		static readonly CantSeeTargetMaxTicks: number;
		static readonly /* const */ MaxUnitProduceQueueCount: number; // = 256
		static readonly /* const */ MaxUnitsPerPlayer: number; // = 4096
		static readonly /* const */ NotificationsMinExpirationTime: number; // = 64
		static readonly /* const */ NotificationsPostponeExpirationTime: number; // = 8
		static readonly /* const */ DeactivateNotificationsByOrderTime: number; // = 64

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region WorldConstants
declare namespace HordeClassLibrary.World.Const {
	abstract class WorldConstants {

		// Fields:
		static readonly /* const */ CellSize: number; // = 32
		static readonly /* const */ HalfCellSize: number; // = 16
		static readonly /* const */ DefaultFps: number; // = 50

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BattleContext
declare namespace HordeClassLibrary.World.Context {
	class BattleContext extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly Scena: HordeClassLibrary.World.ScenaComponents.Scena;
		Settings: HordeClassLibrary.World.Context.BattleSettings;
		Parameters: HordeClassLibrary.World.Context.BattleParameters;
		readonly Randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer;
		readonly LoopCounters: HordeClassLibrary.World.Simple.GameLoopCounters;

		// Methods:
		Deinitialize(): void;
	}
}
//#endregion

//#region BattleParameters
declare namespace HordeClassLibrary.World.Context {
	class BattleParameters extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly World: HordeClassLibrary.World.Context.Parameters.WorldParameters;
		readonly Wind: HordeClassLibrary.World.Context.Parameters.WindParameters;
		readonly Units: HordeClassLibrary.World.Context.Parameters.UnitParameters;
	}
}
//#endregion

//#region BattleSettings
declare namespace HordeClassLibrary.World.Context {
	class BattleSettings extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		FogOfWar: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarSettings;
		StartResources: HordeClassLibrary.World.Simple.ResourcesAmount;
		FpsLimit: number;
		InputExecutionPeriod: number;
	}
}
//#endregion

//#region UnitParameters
declare namespace HordeClassLibrary.World.Context.Parameters {
	class UnitParameters extends System.Object {

		// Constructors:
		constructor();

		// Fields:
		static readonly NearDeathBuildingBreakdownPeriodDefault: number;
		static readonly /* const */ DefaultStuckPeriodAfterRunOver: number; // = 16
		static readonly /* const */ MaxExperienceDefault: number; // = 127
		static readonly /* const */ ExperienceIncreaseSpeedDefault: boolean; // = false
		static readonly /* const */ ExperienceIncreaseAccuracyDefault: boolean; // = false
		static readonly /* const */ TransferExperienceOnCapturingDefault: boolean; // = false
		static readonly /* const */ CriticalWoundHealthThresholdDefault: number; // = 2
		static readonly /* const */ DeathOnCriticalWoundProbabilityDefault: number; // = 0,125
		static readonly /* const */ DamageToCreateDestructionBeamsDefault: number; // = 4
		static readonly /* const */ DamageToScreamDefault: number; // = 4
		static readonly /* const */ NearDeathHealthDecrementDefault: number; // = 1
		static readonly /* const */ NearDeathHealthDecrementProbabilityDefault: number; // = 0,03125
		static readonly /* const */ NearDeathBuildingBreakdownDamageDefault: number; // = 1
		static readonly /* const */ RadiusOfCallForHelpDefault: number; // = 3
		static readonly /* const */ RadiusAutoRepairDefault: number; // = 7
		static readonly /* const */ PushAwayRadiusDefault: number; // = 4
		static readonly /* const */ GatherDelayDefault: number; // = 16
		static readonly /* const */ BaseTransferDelayDefault: number; // = 8
		static readonly /* const */ MinMoveToStockTicksDefault: number; // = 60
		static readonly /* const */ TooClosePenaltyFactorDefault: number; // = 3

		// Properties:
		StuckPeriodAfterRunOver: number;
		MaxExperience: number;
		ExperienceIncreaseSpeed: boolean;
		ExperienceIncreaseAccuracy: boolean;
		TransferExperienceOnCapturing: boolean;
		CriticalWoundHealthThreshold: number;
		DeathOnCriticalWoundProbability: number;
		DamageToCreateDestructionBeams: number;
		DamageToScream: number;
		NearDeathHealthDecrement: number;
		NearDeathHealthDecrementProbability: number;
		NearDeathBuildingBreakdownDamage: number;
		NearDeathBuildingBreakdownPeriod: number;
		RadiusOfCallForHelp: number;
		RadiusAutoRepair: number;
		PushAwayRadius: number;
		GatherDelay: number;
		BaseTransferDelay: number;
		MinMoveToStockTicks: number;
		TooClosePenaltyFactor: number;
	}
}
//#endregion

//#region WindParameters
declare namespace HordeClassLibrary.World.Context.Parameters {
	class WindParameters extends System.Object {

		// Constructors:
		constructor();

		// Fields:
		static readonly MaxSpeedDefault: HordeResurrection.Basic.Primitives.PreciseFraction;
		static readonly MaxDeltaDefault: HordeResurrection.Basic.Primitives.PreciseFraction;
		static readonly ChangingPhasePeriodDefault: HordeResurrection.Basic.Primitives.MinMaxSpan;
		static readonly StaticPhasePeriodDefault: HordeResurrection.Basic.Primitives.MinMaxSpan;

		// Properties:
		EnableWindUpdating: boolean;
		MaxSpeed: HordeResurrection.Basic.Primitives.PreciseFraction;
		MaxDelta: HordeResurrection.Basic.Primitives.PreciseFraction;
		ChangingPhasePeriod: HordeResurrection.Basic.Primitives.MinMaxSpan;
		StaticPhasePeriod: HordeResurrection.Basic.Primitives.MinMaxSpan;
	}
}
//#endregion

//#region WorldParameters
declare namespace HordeClassLibrary.World.Context.Parameters {
	class WorldParameters extends System.Object {

		// Constructors:
		constructor();

		// Fields:
		static readonly /* const */ GravityAccelerationDefault: number; // = 0,72
		static readonly /* const */ AirAccelerationDefault: number; // = 0,1875
		static readonly /* const */ FireFadingPeriodOnRepairingDefault: number; // = 100
		static readonly /* const */ RepairHelperExtinguishingFactorDefault: number; // = 10
		static readonly /* const */ PopulationTerritoryAroundActiveBuildingDefault: number; // = 6
		static readonly /* const */ LumberIncomeValueDefault: number; // = 10

		// Properties:
		GravityAcceleration: number;
		AirAcceleration: number;
		FireFadingPeriodOnRepairing: number;
		RepairHelperExtinguishingFactor: number;
		PopulationTerritoryAroundActiveBuilding: number;
		LumberIncomeValue: number;
	}
}
//#endregion

//#region Episode
declare namespace HordeClassLibrary.World {
	class Episode extends System.Object {

		// Constructors:
		constructor(
			scenasDir: string | null
		);

		// Properties:
		readonly Scenas: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptorsCollection;
		readonly Nations: System.Collections.Generic.List<HordeClassLibrary.World.Nation>;

		// Methods:
		Initialize(): void;

		LoadFromFile(): void;

		GetInfoAllScenas(): void;
	}
}
//#endregion

//#region GeometryPresets
declare namespace HordeClassLibrary.World.Geometry {
	abstract class GeometryPresets {

		// Fields:
		static readonly CellVector: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		static readonly HalfCellVector: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		static readonly CellSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		static readonly FractionCell: HordeResurrection.Basic.Primitives.PreciseFraction;
		static readonly FractionHalfCell: HordeResurrection.Basic.Primitives.PreciseFraction;
		static readonly FractionVectorCell: HordeResurrection.Basic.Primitives.Geometry.PreciseFractionVector;
		static readonly FractionVectorHalfCell: HordeResurrection.Basic.Primitives.Geometry.PreciseFractionVector;

		// Methods:
		static PositionToCell(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		static CellToCenterPosition(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region Nation
declare namespace HordeClassLibrary.World {
	class Nation extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly Force: HordeClassLibrary.HordeContent.Configs.Army.Force;
		ColorsTab: number[][];
		readonly Control: number;
		readonly Emblem: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationsCatalog;
		readonly LeaderName: string;
		readonly LeaderFace: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationsCatalog;
		readonly Settelments: System.Collections.Generic.List<HordeClassLibrary.World.Settlements.Settlement>;
	}
}
//#endregion

//#region AScenaObject
declare namespace HordeClassLibrary.World.Objects {
	abstract class AScenaObject extends System.Object
		implements HordeClassLibrary.Basic.Interfaces.IHasId
	{
		// Fields:
		static readonly /* const */ BlankId: number; // = -1

		// Properties:
		readonly Id: number;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BaseBullet
declare namespace HordeClassLibrary.World.Objects.Bullets {
	abstract class BaseBullet
		extends HordeClassLibrary.World.Objects.AScenaObject
	{
		// Properties:
		readonly Scena: HordeClassLibrary.World.ScenaComponents.Scena;
		readonly Randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer;
		readonly SourceUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly Cfg: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
		readonly ShotParams: HordeClassLibrary.World.Objects.Bullets.ShotParams;
		readonly LaunchPos: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly TargetPos: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly TargetUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly SourceArmament: HordeClassLibrary.UnitComponents.BattleSystem.UnitArmament;
		readonly State: HordeClassLibrary.World.Objects.Bullets.BulletState;
		readonly Position: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly MapLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
		readonly IsVisible: boolean;
		readonly Z: number;
		readonly ZSpeed: number;
		readonly DrawLayer: HordeClassLibrary.World.Simple.DrawLayer;
		readonly Visual: HordeClassLibrary.World.Objects.Bullets.BulletVisual;
		readonly ScriptData: Microsoft.ClearScript.PropertyBag;
		readonly IsTargetReached: boolean;

		// Methods:
		SetupAnimation(): void;

		UpdateAnimation(): void;

		Process(): void;

		SetTargetPosition(
			targetPos: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			speed: HordeResurrection.Basic.Primitives.PreciseFraction
		): void;

		DistanceDecrease(): void;

		ProcessBallistic(): void;

		CanAttackUnitAtLayer(
			layerType: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		): boolean;

		CheckDetailedCollideWithUnit(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		static CheckDetailedCollideWithUnit(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			position: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		DamageArea(
			radius: number
		): void;

		DamageCell(
			magicDamage: boolean
		): void;

		UtterSound(
			sectionName: string | null,
			position: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BaseBullet.BaseBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.BaseBullet {
	abstract class BaseBulletFactory extends System.Object {

		// Methods:
		CreateInstance(
			/*in*/ emittingArgs: HordeClassLibrary.World.Objects.Bullets.BulletEmittingArgs
		): HordeClassLibrary.World.Objects.Bullets.BaseBullet;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BaseBullet.BaseBulletFactory.CreateInstanceDelegate
declare namespace HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory {
	interface /* delegate */ CreateInstanceDelegate {
		(
			/*in*/ emittingArgs: HordeClassLibrary.World.Objects.Bullets.BulletEmittingArgs
		): HordeClassLibrary.World.Objects.Bullets.BaseBullet;
	}
	/** TypeScript type stub for .Net delegate */
	class CreateInstanceDelegate { constructor(func: CreateInstanceDelegate); }
}
//#endregion

//#region BulletEmittingArgs
declare namespace HordeClassLibrary.World.Objects.Bullets {
	class /* struct */ BulletEmittingArgs extends System.ValueType {

		// Properties:
		SourceUnit: HordeClassLibrary.World.Objects.Units.Unit;
		TargetUnit: HordeClassLibrary.World.Objects.Units.Unit;
		SourceArmament: HordeClassLibrary.UnitComponents.BattleSystem.UnitArmament;
		BulletConfig: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
		ShotParams: HordeClassLibrary.World.Objects.Bullets.ShotParams;
		LaunchPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		TargetPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		TargetLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region BulletState
declare namespace HordeClassLibrary.World.Objects.Bullets {
	abstract class BulletState extends System.Enum {
		/** BulletState.Unknown = 0 */ static readonly Unknown: BulletState;
		/** BulletState.Flying = 1 */ static readonly Flying: BulletState;
		/** BulletState.Collided = 2 */ static readonly Collided: BulletState;
		/** BulletState.OutOfScena = 3 */ static readonly OutOfScena: BulletState;
		/** BulletState.ReachedTheGoal = 4 */ static readonly ReachedTheGoal: BulletState;
	}
}
//#endregion

//#region BulletVisual
declare namespace HordeClassLibrary.World.Objects.Bullets {
	class BulletVisual extends System.Object {

		// Properties:
		CurrentAnimation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;
		readonly Animator: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Animator;
		readonly Direction: number;
		ColorsTab: any;
		readonly CurrentFrameNumber: number;
		readonly CurrentFrameSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;

		// Methods:
		SelectAnimationByDirection(
			animationsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog | null,
			direction: number
		): void;
	}
}
//#endregion

//#region BallistaArrowBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows {
	class BallistaArrowBullet
		extends HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.BaseArrowBullet
	{
		// Nothing to declare
	}
}
//#endregion

//#region BallistaArrowBullet.BallistaArrowBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.BallistaArrowBullet {
	class BallistaArrowBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseArrowBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows {
	abstract class BaseArrowBullet
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet
	{
		// Properties:
		readonly LastCollisionCheckCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region FireArrowBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows {
	class FireArrowBullet
		extends HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.BaseArrowBullet
	{
		// Nothing to declare
	}
}
//#endregion

//#region FireArrowBullet.FireArrowBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.FireArrowBullet {
	class FireArrowBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region SimpleArrowBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows {
	class SimpleArrowBullet
		extends HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.BaseArrowBullet
	{
		// Nothing to declare
	}
}
//#endregion

//#region SimpleArrowBullet.SimpleArrowBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.SimpleArrowBullet {
	class SimpleArrowBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseFireBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Fire {
	abstract class BaseFireBullet
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet
	{
		// Properties:
		readonly FireSpecialParams: HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.FireSpecialParams;
		readonly BurningCounter: number;
		readonly BurnStage: HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.Stuff.BurnStage;
		readonly Phase: HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.Stuff.FirePhase;

		// Methods:
		static MakeFire(
			sourceUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			firePosition: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer,
			fireConfig?: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig | null /* = null */
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BaseFireBullet.FireBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.BaseFireBullet {
	class FireBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region FireInForestBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Fire {
	class FireInForestBullet
		extends HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.BaseFireBullet
	{
		// Fields:
		ForestHealth: number;
		ForestCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		ForestBurningComplete: boolean;
	}
}
//#endregion

//#region FireOnUnitBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Fire {
	class FireOnUnitBullet
		extends HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.BaseFireBullet
	{
		// Fields:
		TotalDamage: number;
		MonitoredTargetHealth: number;
		MonitoredTargetAnim: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		// Properties:
		readonly NoDamageFrames: number;
	}
}
//#endregion

//#region BurnStage
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.Stuff {
	abstract class BurnStage extends System.Enum {
		/** BurnStage.Ignition = 0 */ static readonly Ignition: BurnStage;
		/** BurnStage.Burning = 1 */ static readonly Burning: BurnStage;
	}
}
//#endregion

//#region FirePhase
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.Stuff {
	abstract class FirePhase extends System.Enum {
		/** FirePhase.Little = 0 */ static readonly Little: FirePhase;
		/** FirePhase.Medium = 1 */ static readonly Medium: FirePhase;
		/** FirePhase.Big = 2 */ static readonly Big: FirePhase;
	}
}
//#endregion

//#region LightningBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Magic {
	class LightningBullet
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet
	{
		// Nothing to declare
	}
}
//#endregion

//#region LightningBullet.LightningBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Magic.LightningBullet {
	class LightningBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region LightningStormBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Magic {
	class LightningStormBullet
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet
	{
		// Properties:
		readonly LightningsLeft: number;
		readonly DelayCounter: number;
	}
}
//#endregion

//#region LightningStormBullet.LightningStormBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Magic.LightningStormBullet {
	class LightningStormBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseMeleBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Mele {
	abstract class BaseMeleBullet
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet
	{
		// Properties:
		readonly HitPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BaseMeleBullet.BaseMeleBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.BaseMeleBullet {
	abstract class BaseMeleBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region SimpleMeleBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Mele {
	class SimpleMeleBullet
		extends HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.BaseMeleBullet
	{
		// Nothing to declare
	}
}
//#endregion

//#region SimpleMeleBullet.SimpleMeleBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.SimpleMeleBullet {
	class SimpleMeleBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.BaseMeleBullet.BaseMeleBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BrokenFragmentBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Other {
	class BrokenFragmentBullet
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet
	{
		// Properties:
		readonly IsBounced: boolean;

		// Methods:
		static LaunchFragments(
			bulletConfig: HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig | null,
			sourceUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer,
			count: number
		): void;
	}
}
//#endregion

//#region BrokenFragmentBullet.BrokenFragmentBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Other.BrokenFragmentBullet {
	class BrokenFragmentBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region CatapultBombBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Other {
	class CatapultBombBullet
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet
	{
		// Nothing to declare
	}
}
//#endregion

//#region CatapultBombBullet.CatapultBombBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Other.CatapultBombBullet {
	class CatapultBombBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region FireballBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Other {
	class FireballBullet
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet
	{
		// Properties:
		readonly FramesCounter: number;
		readonly IsApproaching: boolean;
	}
}
//#endregion

//#region FireballBullet.FireballBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Other.FireballBullet {
	class FireballBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region FireballBullet.FireballV2BulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Other.FireballBullet {
	class FireballV2BulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region FireballBullet.DragonFireBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Other.FireballBullet {
	class DragonFireBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ScriptBullet
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Other {
	class ScriptBullet
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet
	{
		// Nothing to declare
	}
}
//#endregion

//#region ScriptBullet.ScriptBulletFactory
declare namespace HordeClassLibrary.World.Objects.Bullets.Implementations.Other.ScriptBullet {
	class ScriptBulletFactory
		extends HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ShotParams
declare namespace HordeClassLibrary.World.Objects.Bullets {
	class ShotParams extends System.Object {

		// Properties:
		readonly Damage: number;
		readonly AdditiveBulletSpeed: HordeResurrection.Basic.Primitives.PreciseFraction;

		// Methods:
		static CreateInstance(): HordeClassLibrary.World.Objects.Bullets.ShotParams;

		static CreateFromCitadelConfig(
			citadelCfg: HordeClassLibrary.HordeContent.Configs.Citadel.CitadelUnitConfig | null
		): HordeClassLibrary.World.Objects.Bullets.ShotParams;
	}
}
//#endregion

//#region BaseGear
declare namespace HordeClassLibrary.World.Objects.Gears {
	abstract class BaseGear
		extends HordeClassLibrary.World.Objects.AScenaObject
	{
		// Properties:
		readonly State: HordeClassLibrary.World.Objects.Gears.GearState;
		readonly Scena: HordeClassLibrary.World.ScenaComponents.Scena;
		readonly CreationFrame: number;

		// Methods:
		Initialize(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null
		): void;

		UpdateOnGameTick(): void;

		SetPendingState(): void;

		SetCompletedState(): void;

		ReturnToPool(): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region GearState
declare namespace HordeClassLibrary.World.Objects.Gears {
	abstract class GearState extends System.Enum {
		/** GearState.Unknown = 0 */ static readonly Unknown: GearState;
		/** GearState.InPool = 1 */ static readonly InPool: GearState;
		/** GearState.Pending = 2 */ static readonly Pending: GearState;
		/** GearState.InProcess = 3 */ static readonly InProcess: GearState;
		/** GearState.Completed = 4 */ static readonly Completed: GearState;
	}
}
//#endregion

//#region ARuleContext
declare namespace HordeClassLibrary.World.Objects.Rules {
	abstract class ARuleContext extends System.Object {

		// Properties:
		readonly Settlement: HordeClassLibrary.World.Settlements.Settlement;
		readonly RuleInstruction: HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction;

		// Methods:
		UpdateAfterGameTick(): void;

		Release(): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ExistenceRuleContext
declare namespace HordeClassLibrary.World.Objects.Rules {
	class ExistenceRuleContext
		extends HordeClassLibrary.World.Objects.Rules.ARuleContext
	{
		// Constructors:
		constructor(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			ruleInstruction: HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction | null
		);

		// Properties:
		readonly Instruction: HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ExistenceRuleInstruction;
	}
}
//#endregion

//#region PopulationRuleContext
declare namespace HordeClassLibrary.World.Objects.Rules {
	class PopulationRuleContext
		extends HordeClassLibrary.World.Objects.Rules.ARuleContext
	{
		// Constructors:
		constructor(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			ruleInstruction: HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction | null
		);

		// Properties:
		readonly FreePeopleLimit: number;
	}
}
//#endregion

//#region ProductionLimitRuleContext
declare namespace HordeClassLibrary.World.Objects.Rules {
	class ProductionLimitRuleContext
		extends HordeClassLibrary.World.Objects.Rules.ARuleContext
	{
		// Constructors:
		constructor(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			ruleInstruction: HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction | null
		);

		// Methods:
		IsAllowToProduceUnit(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		GetCurrentLimitForUnit(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): number | null;
	}
}
//#endregion

//#region UnitsAtSameTimeLimitRuleContext
declare namespace HordeClassLibrary.World.Objects.Rules {
	class UnitsAtSameTimeLimitRuleContext
		extends HordeClassLibrary.World.Objects.Rules.ARuleContext
	{
		// Constructors:
		constructor(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			ruleInstruction: HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction | null
		);

		// Methods:
		IsAllowToProduceUnit(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		GetCurrentLimitForUnit(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): number | null;
	}
}
//#endregion

//#region ASoundEffect
declare namespace HordeClassLibrary.World.Objects.SoundEffects {
	abstract class ASoundEffect
		extends HordeClassLibrary.World.Objects.AScenaObject
	{
		// Properties:
		readonly PositionPrecise: HordeResurrection.Basic.Primitives.Geometry.PreciseFractionVector;
		readonly Position: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Z: number;
		readonly State: HordeClassLibrary.World.Objects.SoundEffects.SoundEffectState;
		readonly Transition: HordeClassLibrary.World.Objects.SoundEffects.SoundEffectTransition;

		// Methods:
		Initialize(): void;

		Process(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null
		): void;

		MarkAsPaused(): void;

		MarkAsResumed(): void;

		MarkAsReleased(): void;

		// Events:
		Released: EventSource<System.EventHandler<HordeClassLibrary.World.Objects.SoundEffects.ASoundEffect.ReleasedEventArgs>>;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ASoundEffect.ReleasedEventArgs
declare namespace HordeClassLibrary.World.Objects.SoundEffects.ASoundEffect {
	class /* struct */ ReleasedEventArgs extends System.ValueType {

		// Fields:
		static readonly Void: HordeClassLibrary.World.Objects.SoundEffects.ASoundEffect.ReleasedEventArgs;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SimpleSoundEffect
declare namespace HordeClassLibrary.World.Objects.SoundEffects {
	class SimpleSoundEffect
		extends HordeClassLibrary.World.Objects.SoundEffects.ASoundEffect
	{
		// Constructors:
		constructor(
			sound: HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView | null,
			center: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly IsInstantiated: boolean;
		readonly Sound: HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView;
		SectionName: string;
		EmittingTime: Date | null;
		IsLooping: boolean;
		IsLoopingChanged: boolean;
		IsRegistered: boolean;

		// Methods:
		StopAndFree(): void;

		PauseSound(): void;

		ResumeSound(): void;

		EndSound(): void;

		ResetTransition(): void;
	}
}
//#endregion

//#region SoundEffectState
declare namespace HordeClassLibrary.World.Objects.SoundEffects {
	abstract class SoundEffectState extends System.Enum {
		/** SoundEffectState.Pending = 0 */ static readonly Pending: SoundEffectState;
		/** SoundEffectState.Initialized = 1 */ static readonly Initialized: SoundEffectState;
		/** SoundEffectState.Emitted = 2 */ static readonly Emitted: SoundEffectState;
		/** SoundEffectState.Paused = 3 */ static readonly Paused: SoundEffectState;
		/** SoundEffectState.Completed = 4 */ static readonly Completed: SoundEffectState;
		/** SoundEffectState.Released = 5 */ static readonly Released: SoundEffectState;
	}
}
//#endregion

//#region SoundEffectTransition
declare namespace HordeClassLibrary.World.Objects.SoundEffects {
	abstract class SoundEffectTransition extends System.Enum {
		/** SoundEffectTransition.None = 0 */ static readonly None: SoundEffectTransition;
		/** SoundEffectTransition.Emit = 1 */ static readonly Emit: SoundEffectTransition;
		/** SoundEffectTransition.SetPause = 2 */ static readonly SetPause: SoundEffectTransition;
		/** SoundEffectTransition.Resume = 3 */ static readonly Resume: SoundEffectTransition;
		/** SoundEffectTransition.Complete = 4 */ static readonly Complete: SoundEffectTransition;
	}
}
//#endregion

//#region CanControlDelegate
declare namespace HordeClassLibrary.World.Objects.Squads {
	interface /* delegate */ CanControlDelegate {
		(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;
	}
	/** TypeScript type stub for .Net delegate */
	class CanControlDelegate { constructor(func: CanControlDelegate); }
}
//#endregion

//#region Squad
declare namespace HordeClassLibrary.World.Objects.Squads {
	class Squad extends System.Object
		implements
			System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Objects.Units.Unit>,
			System.Collections.IEnumerable
	{
		// Constructors:
		constructor(
			units?: HordeClassLibrary.World.Objects.Units.UnitsCollection | null /* = null */
		);

		// Fields:
		static readonly EmptySquad: HordeClassLibrary.World.Objects.Squads.Squad;

		// Properties:
		readonly Count: number;
		readonly ChangesCounter: number;
		readonly AverageHealth: number | null;
		readonly AverageExperience: number | null;

		// Methods:
		GetAllowedCommands(
			transferDict: System.Collections.Generic.Dictionary<HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand, HordeClassLibrary.HordeContent.Configs.UnitCommandConfig> | null
		): void;

		Destroy(): void;

		UpdateUiVariables(): void;

		ResetAverageValues(): void;

		GiveOrder(
			commandArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs | null,
			canControlCallback: HordeClassLibrary.World.Objects.Squads.CanControlDelegate | null
		): void;

		ChangeCommandAutomaticMode(
			/*in*/ autoCommandSwitchArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.AutoCommandSwitchArgs,
			canControlCallback: HordeClassLibrary.World.Objects.Squads.CanControlDelegate | null
		): void;

		UnionWith(
			other: HordeClassLibrary.World.Objects.Squads.Squad | null
		): HordeClassLibrary.World.Objects.Squads.Squad;

		ExceptSquad(
			other: HordeClassLibrary.World.Objects.Squads.Squad | null
		): HordeClassLibrary.World.Objects.Squads.Squad;

		Copy(): HordeClassLibrary.World.Objects.Squads.Squad;

		GetCameraFocusPosition(): HordeResurrection.Basic.Primitives.Geometry.Point2D | null;

		GetFirstUnit(): HordeClassLibrary.World.Objects.Units.Unit;

		GetLastUnit(): HordeClassLibrary.World.Objects.Units.Unit;

		ContainsConfig(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		IsCommandAutomated(
			cmd: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		): boolean;

		GetEnumerator(): System.Collections.Generic.IEnumerator<HordeClassLibrary.World.Objects.Units.Unit>;

		GetEnumerator(): System.Collections.IEnumerator;
	}
}
//#endregion

//#region Squad.SquadGiveOrderEventArgs
declare namespace HordeClassLibrary.World.Objects.Squads.Squad {
	class SquadGiveOrderEventArgs
		extends System.EventArgs
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region SquadsNumberedCollection
declare namespace HordeClassLibrary.World.Objects.Squads {
	class SquadsNumberedCollection extends System.Object {

		// Constructors:
		constructor(
			squadsCount: number
		);

		// Methods:
		GetSquad(
			squadNumber: number
		): HordeClassLibrary.World.Objects.Squads.Squad;

		SetSquad(
			squad: HordeClassLibrary.World.Objects.Squads.Squad | null,
			squadNumber: number
		): void;

		Clear(): void;
	}
}
//#endregion

//#region ChangeTileOptions
declare namespace HordeClassLibrary.World.Objects.Tiles {
	class /* struct */ ChangeTileOptions extends System.ValueType {

		// Constructors:
		constructor();

		// Fields:
		static readonly Default: HordeClassLibrary.World.Objects.Tiles.ChangeTileOptions;

		// Properties:
		UpdateUnits: boolean;
		UpdateLumberCount: boolean;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region ITileConfigProvider
declare namespace HordeClassLibrary.World.Objects.Tiles {
	interface ITileConfigProvider {

		// Methods:
		GetTileConfigAt(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig;
	}
	/** TypeScript type stub for .Net interface */
	abstract class ITileConfigProvider {}
}
//#endregion

//#region KnownResourceTile
declare namespace HordeClassLibrary.World.Objects.Tiles {
	class KnownResourceTile extends System.Object {

		// Constructors:
		constructor(
			realTile: HordeClassLibrary.World.Objects.Tiles.ResourceTile | null,
			visibleNow: boolean
		);

		// Properties:
		readonly VisibleNow: boolean;
		readonly ResourceType: HordeClassLibrary.World.Objects.Tiles.ResourceTileType | null;
		readonly ResourceAmount: number | null;
		readonly TreesCount: number | null;
		readonly HasTrees: boolean;

		// Methods:
		UpdateTile(
			tile: HordeClassLibrary.World.Objects.Tiles.ResourceTile | null,
			visibleNow: boolean
		): void;

		ResetTrees(): void;
	}
}
//#endregion

//#region KnownTile
declare namespace HordeClassLibrary.World.Objects.Tiles {
	class KnownTile extends System.Object {

		// Constructors:
		constructor(
			realTile: HordeClassLibrary.World.Objects.Tiles.Tile | null,
			visibleNow: boolean
		);

		// Properties:
		readonly VisibleNow: boolean;
		readonly KnownCfg: HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig;
		readonly CurrentFrame: number | null;

		// Methods:
		UpdateTile(
			tile: HordeClassLibrary.World.Objects.Tiles.Tile | null,
			visibleNow: boolean
		): void;

		CfgChanged(
			actualCfg: HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig | null
		): boolean;

		SetKnownCfg(
			cfg: HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig | null
		): void;
	}
}
//#endregion

//#region ResourceTile
declare namespace HordeClassLibrary.World.Objects.Tiles {
	class ResourceTile extends System.Object {

		// Constructors:
		constructor(
			model: HordeClassLibrary.World.Objects.Tiles.ResourceTileModel | null
		);

		// Fields:
		static readonly /* const */ InfinityTrees: number; // = 2147483647

		// Properties:
		readonly ResourceType: HordeClassLibrary.World.Objects.Tiles.ResourceTileType;
		readonly ResourceAmount: number;
		readonly TreesCount: number;
		readonly HasTrees: boolean;

		// Methods:
		ChopDownTree(): boolean;

		SetTrees(
			num: number
		): void;

		TakeResources(
			amount: number
		): number;
	}
}
//#endregion

//#region ResourceTileModel
declare namespace HordeClassLibrary.World.Objects.Tiles {
	class ResourceTileModel extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		ResourceType: HordeClassLibrary.World.Objects.Tiles.ResourceTileType;
		ResourceAmount: number;
		TreesCount: number;
	}
}
//#endregion

//#region ResourceTileType
declare namespace HordeClassLibrary.World.Objects.Tiles {
	abstract class ResourceTileType extends System.Enum {
		/** ResourceTileType.None = 0 */ static readonly None: ResourceTileType;
		/** ResourceTileType.Gold = 1 */ static readonly Gold: ResourceTileType;
		/** ResourceTileType.Metal = 2 */ static readonly Metal: ResourceTileType;
	}
}
//#endregion

//#region Tile
declare namespace HordeClassLibrary.World.Objects.Tiles {
	class Tile extends System.Object {

		// Constructors:
		constructor(
			model: HordeClassLibrary.World.Objects.Tiles.TileModel | null
		);

		// Properties:
		readonly Cfg: HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig;
		readonly AnimationPhaseShift: number;
		readonly CurrentFrame: number;

		// Methods:
		ChangeConfig(
			newCfg: HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig | null
		): void;

		HasFire(): boolean;

		FiresIncrease(): void;

		FiresDecrease(): void;
	}
}
//#endregion

//#region TileConfigPicker
declare namespace HordeClassLibrary.World.Objects.Tiles {
	class TileConfigPicker extends System.Object {

		// Constructors:
		constructor(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null,
			randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer | null,
			tileProvider: HordeClassLibrary.World.Objects.Tiles.ITileConfigProvider | null
		);

		// Properties:
		readonly TileProvider: HordeClassLibrary.World.Objects.Tiles.ITileConfigProvider;

		// Methods:
		MakeRestoringMap(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeResurrection.Basic.Pool.PoolSlot<HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig[][]> | null;

		MakeReplacementMap(
			parameters: HordeClassLibrary.World.Objects.Tiles.TileConfigPicker.ReplacementParameters
		): HordeResurrection.Basic.Pool.PoolSlot<HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig[][]> | null;

		GetWorkRect(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeResurrection.Basic.Primitives.Geometry.Rect2D;
	}
}
//#endregion

//#region TileConfigPicker.ReplacementParameters
declare namespace HordeClassLibrary.World.Objects.Tiles.TileConfigPicker {
	class /* struct */ ReplacementParameters extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Objects.Tiles.TileConfigPicker.ReplacementParameters>
	{
		// Constructors:
		constructor(
			Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			Type: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType,
			Payload: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TilePayload
		);

		// Properties:
		Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Type: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType;
		Payload: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TilePayload;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region TileModel
declare namespace HordeClassLibrary.World.Objects.Tiles {
	class TileModel extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		Cfg: HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig;
		AnimationPhaseShift: number;
	}
}
//#endregion

//#region DeleteUnitParameters
declare namespace HordeClassLibrary.World.Objects.Units {
	class DeleteUnitParameters extends System.Object {

		// Constructors:
		constructor();

		constructor(
			unitToDelete: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		UnitToDelete: HordeClassLibrary.World.Objects.Units.Unit;
		Silent: boolean;
	}
}
//#endregion

//#region IKnownOrRealUnit
declare namespace HordeClassLibrary.World.Objects.Units {
	interface IKnownOrRealUnit {

		// Properties:
		readonly Cfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly Owner: HordeClassLibrary.World.Settlements.Settlement;
		readonly Rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly Position: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly MapLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
		readonly DrawLayer: HordeClassLibrary.World.Simple.DrawLayer;
		readonly RealUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly IsExistent: boolean;
		readonly IsAlive: boolean;
		readonly IsNotAlive: boolean;
		readonly IsNearDeath: boolean;
		readonly IsNotDead: boolean;
		readonly IsDead: boolean;

		// Methods:
		HasEffect(
			effect: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag
		): boolean;
	}
	/** TypeScript type stub for .Net interface */
	abstract class IKnownOrRealUnit {}
}
//#endregion

//#region KnownUnit
declare namespace HordeClassLibrary.World.Objects.Units {
	class KnownUnit extends System.Object
		implements HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit
	{
		// Constructors:
		constructor(
			mapOwner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		readonly MapOwner: HordeClassLibrary.World.Settlements.Settlement;
		readonly RealUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly VisibleNow: boolean;
		readonly Region: HordeClassLibrary.World.Objects.Units.KnownUnitRegion;
		readonly Rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly MapLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
		readonly IsExistent: boolean;
		readonly Cfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly Owner: HordeClassLibrary.World.Settlements.Settlement;
		readonly RenderData: HordeClassLibrary.HordeContent.ViewResources.Graphics.RenderData;
		readonly Position: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly DrawLayer: HordeClassLibrary.World.Simple.DrawLayer;
		readonly Effects: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag;
		readonly Health: number;
		readonly IsAlive: boolean;
		readonly IsNotAlive: boolean;
		readonly IsNearDeath: boolean;
		readonly IsNotDead: boolean;
		readonly IsDead: boolean;

		// Methods:
		HasEffect(
			effect: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag
		): boolean;

		CanBeCapturedNow(): boolean;

		Initialize(
			realUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		Deinitialize(): void;

		UpdateData(): void;

		UpdateVisibility(
			updateDataOnGrayFog: boolean
		): HordeClassLibrary.World.Objects.Units.KnownUnit.Visibility;

		GetAccess(): boolean;

		GetRenderAccess(): boolean;

		RestoreAccess(): void;
	}
}
//#endregion

//#region KnownUnit.Visibility
declare namespace HordeClassLibrary.World.Objects.Units.KnownUnit {
	abstract class Visibility extends System.Enum {
		/** Visibility.Visible = 0 */ static readonly Visible: Visibility;
		/** Visibility.InGrayFog = 1 */ static readonly InGrayFog: Visibility;
		/** Visibility.HasNoVisibleCells = 2 */ static readonly HasNoVisibleCells: Visibility;
	}
}
//#endregion

//#region KnownUnitCell
declare namespace HordeClassLibrary.World.Objects.Units {
	class KnownUnitCell extends System.Object {

		// Constructors:
		constructor(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			mapLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		);

		// Properties:
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly MapLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
		readonly KnownUnit: HordeClassLibrary.World.Objects.Units.KnownUnit;

		// Methods:
		SetKnownUnit(
			knownUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		): void;
	}
}
//#endregion

//#region KnownUnitRegion
declare namespace HordeClassLibrary.World.Objects.Units {
	class KnownUnitRegion extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly Rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		readonly MapLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
		readonly HasVisibleCells: boolean;
		readonly HasGrayFogCells: boolean;

		// Methods:
		Reset(): void;

		ChangeFogCounters(
			addFog: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell,
			removeFog: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell
		): void;
	}
}
//#endregion

//#region ProducedUnitParameters
declare namespace HordeClassLibrary.World.Objects.Units {
	class ProducedUnitParameters extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		ProducerUnit: HordeClassLibrary.World.Objects.Units.Unit;
		Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Direction: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection | null;
		CostPaid: boolean;
		TakeBackCostOnFailture: boolean;
		AutoBuild: boolean;
	}
}
//#endregion

//#region ReplaceUnitFlags
declare namespace HordeClassLibrary.World.Objects.Units {
	abstract class ReplaceUnitFlags extends System.EnumFlags {
		/** ReplaceUnitFlags.None = 0 */ static readonly None: ReplaceUnitFlags;
		/** ReplaceUnitFlags.PreserveHealthLevel = 1 */ static readonly PreserveHealthLevel: ReplaceUnitFlags;
		/** ReplaceUnitFlags.PreserveExperience = 2 */ static readonly PreserveExperience: ReplaceUnitFlags;
		/** ReplaceUnitFlags.PreserveOrders = 4 */ static readonly PreserveOrders: ReplaceUnitFlags;
		/** ReplaceUnitFlags.PreserveKillsCounter = 8 */ static readonly PreserveKillsCounter: ReplaceUnitFlags;
	}
}
//#endregion

//#region ReplaceUnitParameters
declare namespace HordeClassLibrary.World.Objects.Units {
	class ReplaceUnitParameters extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		OldUnit: HordeClassLibrary.World.Objects.Units.Unit;
		NewUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		Silent: boolean;
		Flags: HordeClassLibrary.World.Objects.Units.ReplaceUnitFlags;
		PreserveHealthLevel: boolean;
		PreserveExperience: boolean;
		PreserveOrders: boolean;
		PreserveKillsCounter: boolean;
	}
}
//#endregion

//#region SpawnUnitParameters
declare namespace HordeClassLibrary.World.Objects.Units {
	class SpawnUnitParameters extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Direction: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;
		IsDummy: boolean;
	}
}
//#endregion

//#region Unit
declare namespace HordeClassLibrary.World.Objects.Units {
	class Unit
		extends HordeClassLibrary.World.Objects.AScenaObject
		implements HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit
	{
		// Fields:
		PathFindQueueNode: HordeClassLibrary.PathFinders.UnitFpqNode;

		// Properties:
		readonly Name: string;
		readonly Cfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		Experience: number;
		Health: number;
		readonly HealthOld: number;
		readonly IsDummy: boolean;
		readonly CurrentSight: number;
		readonly CurrentForestVision: number;
		readonly HealthLevel: HordeClassLibrary.UnitComponents.Enumerations.UnitHealthLevel;
		readonly IsAlive: boolean;
		readonly IsNotAlive: boolean;
		readonly IsNearDeath: boolean;
		readonly IsNotDead: boolean;
		readonly IsDead: boolean;
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly MoveToCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		readonly CellCenter: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly ComebackCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly Rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		readonly MoveToRect: HordeResurrection.Basic.Primitives.Geometry.Rect2D | null;
		readonly Position: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly Direction: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;
		CompoundPart: HordeClassLibrary.UnitComponents.Enumerations.CompoundPart;
		readonly DrawLayer: HordeClassLibrary.World.Simple.DrawLayer;
		readonly MapLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
		LastHurtType: HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType | null;
		ReloadCounter: number;
		KillsCounter: number;
		readonly ScriptData: Microsoft.ClearScript.PropertyBag;
		readonly Owner: HordeClassLibrary.World.Settlements.Settlement;
		readonly Scena: HordeClassLibrary.World.ScenaComponents.Scena;
		readonly Randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer;
		readonly RandomSeed: number;
		readonly PseudoTickCounter: number;
		readonly CommandsMind: HordeClassLibrary.UnitComponents.Minds.CommandsMind;
		readonly OrdersMind: HordeClassLibrary.UnitComponents.Minds.OrdersMind;
		readonly CommunicationMind: HordeClassLibrary.UnitComponents.Minds.CommunicationMind;
		readonly BattleMind: HordeClassLibrary.UnitComponents.Minds.BattleMind;
		readonly MapMind: HordeClassLibrary.UnitComponents.Minds.MapMind;
		readonly VisualMind: HordeClassLibrary.UnitComponents.Minds.VisualMind;
		readonly SoundsMind: HordeClassLibrary.UnitComponents.Minds.SoundsMind;
		readonly EventsMind: HordeClassLibrary.UnitComponents.Minds.EventsMind;
		readonly InstinctsMind: HordeClassLibrary.UnitComponents.Minds.InstinctsMind;
		readonly EffectsMind: HordeClassLibrary.UnitComponents.Minds.EffectsMind;
		readonly IsUnderAttack: boolean;
		readonly IsRepairNow: boolean;
		readonly IsHealthChanged: boolean;
		readonly IsFullHealth: boolean;
		readonly LastTickTakenDamage: number;
		readonly WaitingForUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly WaitingNum: number;
		readonly RealUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly IsExistent: boolean;

		// Methods:
		SetAliveState(): void;

		CheckIndividualTimer(
			period: number
		): boolean;

		HasEffect(
			effect: HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag
		): boolean;

		ProcessDeath(): void;

		ProcessNearDeath(): void;

		Delete(
			silent?: boolean /* = false */
		): void;

		SwitchToDummy(): void;

		FinalizeSwitchingToDummy(): void;

		CheckHealthOnUpdate(): void;

		UpdateBeforeGameTick(): void;

		UpdateOnGameTick(): void;

		MakeDust(): void;

		MakeDustAndBeams(): void;

		ProcessBuildingCompletion(): void;

		HasProfession(
			profession: HordeClassLibrary.UnitComponents.Enumerations.UnitProfession
		): boolean;

		GetProfessionData<T extends HordeClassLibrary.UnitComponents.ProfessionData.IUnitProfessionData>(
			$T: typeof HordeClassLibrary.UnitComponents.ProfessionData.IUnitProfessionData
		): T;

		TryGetProfessionData<T extends HordeClassLibrary.UnitComponents.ProfessionData.IUnitProfessionData>(
			$T: typeof HordeClassLibrary.UnitComponents.ProfessionData.IUnitProfessionData,
			/*out*/ professionData: T | null
		): boolean;

		UpdateProfessionCommands(): void;

		GetPatternUnitFeatures(
			checkFeatures: HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature
		): HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature;

		SuggestMoveAwayOrder(
			requesterUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			requestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		SuggestStepAwayWaitingOrder(
			requesterUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			requestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			suggestedCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		CanMoveAwayNow(
			requesterUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		RepairRequiredNow(): boolean;

		CanBeRepairedNow(): boolean;

		RepairCompleted(): boolean;

		CanRepairLite(
			repairTarget: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		CanBeBuiltNow(): boolean;

		IsAbandonedUnfinishedBuilding(): boolean;

		AddHealth(
			val: number
		): void;

		SetHealth(
			val: number
		): void;

		SetWaitTarget(
			waitTarget: HordeClassLibrary.World.Objects.Units.Unit | null,
			waitWeight?: number /* = 1 */
		): void;

		UpdateWaitingVariables(): void;

		GetId(): HordeClassLibrary.World.Objects.Units.UnitIdLabel;

		ChangeOwner(
			newOwner: HordeClassLibrary.World.Settlements.Settlement | null
		): void;

		ChangeSight(
			newSight: number,
			newForestVision: number
		): void;

		CheckChaseDistance(): boolean;

		CheckNewTargetChaseDistance(): boolean;

		// Events:
		TickEnd: EventSource<System.EventHandler<HordeClassLibrary.World.Objects.Units.Unit.TickEndEventArgs>>;
	}
}
//#endregion

//#region Unit.TickEndEventArgs
declare namespace HordeClassLibrary.World.Objects.Units.Unit {
	class /* struct */ TickEndEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Objects.Units.Unit.TickEndEventArgs>
	{
		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region UnitIdLabel
declare namespace HordeClassLibrary.World.Objects.Units {
	class /* struct */ UnitIdLabel extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Objects.Units.UnitIdLabel>
	{
		// Constructors:
		constructor(
			Id: number,
			SettlementUid: string | null
		);

		// Properties:
		Id: number;
		SettlementUid: string;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region UnitModel
declare namespace HordeClassLibrary.World.Objects.Units {
	class UnitModel extends System.Object {

		// Constructors:
		constructor(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			positionModel: HordeClassLibrary.World.Objects.Units.UnitPositionModel | null
		);

		constructor();

		// Properties:
		Name: string;
		Cfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		Experience: number;
		Health: number;
		HealthOld: number;
		LifeState: HordeClassLibrary.UnitComponents.Enumerations.UnitLifeState;
		PositionModel: HordeClassLibrary.World.Objects.Units.UnitPositionModel;
		ProfessionsData: System.Collections.Generic.Dictionary<HordeClassLibrary.UnitComponents.Enumerations.UnitProfession, HordeClassLibrary.UnitComponents.ProfessionData.IUnitProfessionData>;
		IsDummy: boolean;
		CurrentSight: number;
		CurrentForestVision: number;
		IsCitadelUnit: boolean;
		CitadelSpriteLocalIndex: number;
		CitadelExtraData: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraData;

		// Methods:
		FromCitadelUnit(
			citadelUnit: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.CitadelUnit | null
		): void;
	}
}
//#endregion

//#region UnitModelsFactory
declare namespace HordeClassLibrary.World.Objects.Units {
	abstract class UnitModelsFactory {

		// Methods:
		static CreateProducedUnitModel(
			parameters: HordeClassLibrary.World.Objects.Units.ProducedUnitParameters | null
		): HordeClassLibrary.World.Objects.Units.UnitModel;

		static CreateSpawnedUnitModel(
			parameters: HordeClassLibrary.World.Objects.Units.SpawnUnitParameters | null
		): HordeClassLibrary.World.Objects.Units.UnitModel;

		static ProcessUnitReplacing(
			newUnitModel: HordeClassLibrary.World.Objects.Units.UnitModel | null,
			parameters: HordeClassLibrary.World.Objects.Units.ReplaceUnitParameters | null
		): void;

		static CreateDummyUnitModel(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): HordeClassLibrary.World.Objects.Units.UnitModel;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UnitPositionModel
declare namespace HordeClassLibrary.World.Objects.Units {
	class UnitPositionModel extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		Position: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		MoveToCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		ComebackCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Direction: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;
		CompoundPart: HordeClassLibrary.UnitComponents.Enumerations.CompoundPart;
		MapLayer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
		DrawLayer: HordeClassLibrary.World.Simple.DrawLayer;
		CurrentContainer: HordeClassLibrary.World.Objects.Units.Unit;

		// Methods:
		FromCitadelUnit(
			citadelUnit: HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.CitadelUnit | null,
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): void;
	}
}
//#endregion

//#region UnitsCollection
declare namespace HordeClassLibrary.World.Objects.Units {
	class UnitsCollection
		extends HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsCollection<HordeClassLibrary.World.Objects.Units.Unit>
	{
		// Constructors:
		constructor();

		constructor(
			otherCollection: HordeClassLibrary.World.Objects.Units.UnitsCollection | null
		);

		constructor(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Methods:
		Copy(): HordeClassLibrary.World.Objects.Units.UnitsCollection;

		UnionWith(
			other: HordeClassLibrary.World.Objects.Units.UnitsCollection | null
		): HordeClassLibrary.World.Objects.Units.UnitsCollection;

		ExceptWith(
			other: HordeClassLibrary.World.Objects.Units.UnitsCollection | null
		): HordeClassLibrary.World.Objects.Units.UnitsCollection;

		IntersectWith(
			other: HordeClassLibrary.World.Objects.Units.UnitsCollection | null
		): HordeClassLibrary.World.Objects.Units.UnitsCollection;
	}
}
//#endregion

//#region AnimBasedVisualEffect
declare namespace HordeClassLibrary.World.Objects.VisualEffects {
	abstract class AnimBasedVisualEffect
		extends HordeClassLibrary.World.Objects.VisualEffects.AVisualEffect
	{
		// Properties:
		readonly Cfg: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		readonly CurrentAnimation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;
		readonly Animator: HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Animator;
		DrawLayer: HordeClassLibrary.World.Simple.DrawLayer;
		TintColor: HordeResurrection.Basic.Primitives.HordeColor;
		MaskColor: HordeResurrection.Basic.Primitives.HordeColor;
		readonly MaskColorBgra: number;
		PixelMaskTab: any;
		ScaleX: number;
		ScaleY: number;
		readonly ZSpeed: number;
		readonly FrameSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly CurrentFrameNumber: number;

		// Methods:
		SetAnimation(
			animation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null,
			startFrameNumber: number | null
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AVisualEffect
declare namespace HordeClassLibrary.World.Objects.VisualEffects {
	abstract class AVisualEffect
		extends HordeClassLibrary.World.Objects.AScenaObject
	{
		// Properties:
		PositionPrecise: HordeResurrection.Basic.Primitives.Geometry.PreciseFractionVector;
		Position: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Z: number;
		readonly State: HordeClassLibrary.World.Objects.VisualEffects.VisualEffectState;
		Visible: boolean;
		FogOfWarMode: HordeClassLibrary.World.Objects.VisualEffects.VisualEffectFogOfWarMode;
		readonly ScriptData: Microsoft.ClearScript.PropertyBag;

		// Methods:
		Initialize(): void;

		Process(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null
		): void;

		CustomFogOfWarCheck(
			fogOfWar: HordeClassLibrary.World.Settlements.Modules.Vision.FogOfWarVision | null
		): boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AnimBasedVisualEffectCreationParams
declare namespace HordeClassLibrary.World.Objects.VisualEffects.CreationParameters {
	class AnimBasedVisualEffectCreationParams extends System.Object {

		// Constructors:
		constructor(
			effectConfig: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig | null,
			center: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		EffectConfig: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
		Center: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region BulletAnimEffectCreationParams
declare namespace HordeClassLibrary.World.Objects.VisualEffects.CreationParameters {
	class BulletAnimEffectCreationParams
		extends HordeClassLibrary.World.Objects.VisualEffects.CreationParameters.AnimBasedVisualEffectCreationParams
	{
		// Constructors:
		constructor(
			effectConfig: HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig | null,
			center: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		Direction: number;
	}
}
//#endregion

//#region AVisualEffectFactory
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Factories {
	abstract class AVisualEffectFactory extends System.Object {

		// Methods:
		CreateInstance(
			context: HordeClassLibrary.World.Context.BattleContext | null,
			creationParams: HordeClassLibrary.World.Objects.VisualEffects.CreationParameters.AnimBasedVisualEffectCreationParams | null
		): HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AVisualEffectFactory.CreateInstanceDelegate
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory {
	interface /* delegate */ CreateInstanceDelegate {
		(
			context: HordeClassLibrary.World.Context.BattleContext | null,
			creationParams: HordeClassLibrary.World.Objects.VisualEffects.CreationParameters.AnimBasedVisualEffectCreationParams | null
		): HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect;
	}
	/** TypeScript type stub for .Net delegate */
	class CreateInstanceDelegate { constructor(func: CreateInstanceDelegate); }
}
//#endregion

//#region BuildingFlagEffect
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations {
	class BuildingFlagEffect
		extends HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect
	{
		// Properties:
		readonly CurrentDirection: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;

		// Methods:
		UpdatePosition(
			location: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		Show(): void;

		Hide(): void;

		Remove(): void;
	}
}
//#endregion

//#region BuildingFlagEffect.BuildingFlagEffectFactory
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations.BuildingFlagEffect {
	class BuildingFlagEffectFactory
		extends HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region SingleAnimEffect
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations {
	class SingleAnimEffect
		extends HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect
	{
		// Nothing to declare
	}
}
//#endregion

//#region SingleAnimEffect.BulletAnimBasedEffectFactory
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleAnimEffect {
	class BulletAnimBasedEffectFactory
		extends HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region DecayEffect
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations {
	class DecayEffect
		extends HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect
	{
		// Properties:
		readonly DecayAnimation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;

		// Methods:
		SetDecayAnimation(
			firstAnimation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null,
			timeToShowFrame: number,
			decayAnimation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView | null
		): void;
	}
}
//#endregion

//#region DecayEffect.DecayEffectFactory
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations.DecayEffect {
	class DecayEffectFactory
		extends HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region MovingEffect
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations {
	class MovingEffect
		extends HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect
	{
		// Properties:
		readonly TargetPoint: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Methods:
		SetTargetAndSpeed(
			targetPoint: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			movingSpeed: HordeResurrection.Basic.Primitives.PreciseFraction
		): void;
	}
}
//#endregion

//#region MovingEffect.MovingEffectFactory
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations.MovingEffect {
	class MovingEffectFactory
		extends HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region SingleAnimEffect.SingleAnimEffectFactory
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleAnimEffect {
	class SingleAnimEffectFactory
		extends HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region SingleFrameEffect
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations {
	class SingleFrameEffect
		extends HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect
	{
		// Methods:
		SetTimeToShow(
			timeToShow: number
		): void;
	}
}
//#endregion

//#region SingleFrameEffect.SingleFrameEffectFactory
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleFrameEffect {
	class SingleFrameEffectFactory
		extends HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region StickyEffect
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations {
	class StickyEffect
		extends HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect
	{
		// Properties:
		readonly MonitoredUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly MonitoredAnimation: HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;
		readonly MonitoredHealth: number;

		// Methods:
		SetMonitoredUnit(
			monitoredUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
}
//#endregion

//#region StickyEffect.StickyEffectFactory
declare namespace HordeClassLibrary.World.Objects.VisualEffects.Implementations.StickyEffect {
	class StickyEffectFactory
		extends HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region GeometryVisualEffect
declare namespace HordeClassLibrary.World.Objects.VisualEffects {
	class GeometryVisualEffect
		extends HordeClassLibrary.World.Objects.VisualEffects.AVisualEffect
	{
		// Constructors:
		constructor(
			args: HordeClassLibrary.World.Objects.VisualEffects.GeometryVisualEffect.CreationArgs
		);

		// Fields:
		static readonly /* const */ InfiniteTTL: number; // = 2147483647

		// Properties:
		GeometryBuffer: any;
		TicksToLive: number;

		// Methods:
		Free(): void;
	}
}
//#endregion

//#region GeometryVisualEffect.CreationArgs
declare namespace HordeClassLibrary.World.Objects.VisualEffects.GeometryVisualEffect {
	class /* struct */ CreationArgs extends System.ValueType {

		// Properties:
		GeometryBuffer: any;
		TicksToLive: number;
		Center: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region StringVisualEffect
declare namespace HordeClassLibrary.World.Objects.VisualEffects {
	class StringVisualEffect
		extends HordeClassLibrary.World.Objects.VisualEffects.AVisualEffect
	{
		// Constructors:
		constructor(
			args: HordeClassLibrary.World.Objects.VisualEffects.StringVisualEffect.CreationArgs
		);

		// Fields:
		static readonly /* const */ InfiniteTTL: number; // = 2147483647

		// Properties:
		Text: string;
		TicksToLive: number;
		DrawLayer: HordeClassLibrary.World.Simple.DrawLayer;
		ColorBgra: number;
		Color: HordeResurrection.Basic.Primitives.HordeColor;
		Height: number;
		Font: any;

		// Methods:
		Free(): void;
	}
}
//#endregion

//#region StringVisualEffect.CreationArgs
declare namespace HordeClassLibrary.World.Objects.VisualEffects.StringVisualEffect {
	class /* struct */ CreationArgs extends System.ValueType {

		// Properties:
		Text: string;
		TicksToLive: number;
		Center: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		DrawLayer: HordeClassLibrary.World.Simple.DrawLayer;
		Color: HordeResurrection.Basic.Primitives.HordeColor;
		Height: number;
		Font: any;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region VisualEffectFogOfWarMode
declare namespace HordeClassLibrary.World.Objects.VisualEffects {
	abstract class VisualEffectFogOfWarMode extends System.Enum {
		/** VisualEffectFogOfWarMode.Default = 0 */ static readonly Default: VisualEffectFogOfWarMode;
		/** VisualEffectFogOfWarMode.Ignore = 1 */ static readonly Ignore: VisualEffectFogOfWarMode;
		/** VisualEffectFogOfWarMode.Custom = 2 */ static readonly Custom: VisualEffectFogOfWarMode;
	}
}
//#endregion

//#region VisualEffectState
declare namespace HordeClassLibrary.World.Objects.VisualEffects {
	abstract class VisualEffectState extends System.Enum {
		/** VisualEffectState.Uninitialized = 0 */ static readonly Uninitialized: VisualEffectState;
		/** VisualEffectState.Works = 1 */ static readonly Works: VisualEffectState;
		/** VisualEffectState.Completed = 2 */ static readonly Completed: VisualEffectState;
	}
}
//#endregion

//#region ScenaDescriptor
declare namespace HordeClassLibrary.World.ScenaComponents.Descriptors {
	class ScenaDescriptor extends System.Object {

		// Constructors:
		constructor(
			fileInfo: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaFileInfo | null
		);

		// Properties:
		readonly FileInfo: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaFileInfo;
		readonly HashInfo: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaHashInfo;
		readonly Format: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaFormat;
		readonly GameVersion: HordeClassLibrary.Basic.GameVersion.HordeVersion;
		readonly ScenaVersion: HordeClassLibrary.Basic.GameVersion.HordeVersion;
		readonly Name: string;
		readonly Description: string;
		readonly Size: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly ContentPackRequirements: System.Collections.Generic.List<string>;
		readonly Stamp: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaStamp;

		// Methods:
		CheckRequirements(): boolean;
	}
}
//#endregion

//#region ScenaDescriptorsCollection
declare namespace HordeClassLibrary.World.ScenaComponents.Descriptors {
	class ScenaDescriptorsCollection extends System.Object
		implements
			System.Collections.Generic.IEnumerable<HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor>,
			System.Collections.IEnumerable
	{
		// Constructors:
		constructor();

		// Methods:
		FindScenaByHashOrFileName(
			scenaStamp: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaStamp | null,
			checkIntegrity: boolean
		): HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor;

		FindScenaByHash(
			fileLength: number,
			hash: number[] | null
		): HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor;

		FindScenaByHash(
			scenaStamp: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaStamp | null
		): HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor;

		FindScenaByFileName(
			fileName: string | null
		): HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor;

		FindScenaByFileName(
			scenaStamp: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaStamp | null
		): HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor;

		ScanDirectory(
			directory: string | null
		): void;

		AddScenaFile(
			scenaPath: string | null
		): HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor;

		Clear(): void;

		GetEnumerator(): System.Collections.Generic.IEnumerator<HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor>;

		GetEnumerator(): System.Collections.IEnumerator;
	}
}
//#endregion

//#region ScenaFileInfo
declare namespace HordeClassLibrary.World.ScenaComponents.Descriptors {
	class ScenaFileInfo extends System.Object {

		// Constructors:
		constructor(
			filePath: string | null
		);

		// Properties:
		readonly FilePath: string;
		readonly FileName: string;
		readonly FileLength: number;
	}
}
//#endregion

//#region ScenaHashInfo
declare namespace HordeClassLibrary.World.ScenaComponents.Descriptors {
	class ScenaHashInfo extends System.Object {

		// Constructors:
		constructor(
			scenaFileInfo: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaFileInfo | null
		);

		// Properties:
		readonly ScenaFileInfo: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaFileInfo;
		readonly HashBytes: number[];
		readonly ShortHash: number;
		readonly Hash: string;
		readonly IsHashCalculated: boolean;

		// Methods:
		CompareHash(
			shortHash: number,
			fullHash: number[] | null
		): boolean;

		CompareFullHash(
			fullHash: number[] | null
		): boolean;
	}
}
//#endregion

//#region ScenaInLobby
declare namespace HordeClassLibrary.World.ScenaComponents.Descriptors {
	class ScenaInLobby extends System.Object {

		// Constructors:
		constructor(
			scenaDescriptor: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor | null
		);

		// Properties:
		readonly Format: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaFormat;
		readonly ScenaName: string;
		readonly Size: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly Rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		readonly Tileset: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaTileset;
		readonly LandscapeMap: HordeClassLibrary.World.Objects.Tiles.TileModel[][];
		readonly Settlements: System.Collections.Generic.Dictionary<string, HordeClassLibrary.World.Settlements.Models.SettlementModel>;
		readonly FileStamp: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaStamp;
		readonly IsLoaded: boolean;

		// Methods:
		GetStartResources(
			/*out*/ resourcesAmount: HordeClassLibrary.World.Simple.ResourcesAmount | null
		): boolean;

		IsSettlementPlayable(
			settlementUid: string | null
		): boolean;

		LoadBasicInfo(): void;

		GetMinimapPixels(): number[];

		GetMinimapData(): HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaMinimapData;
	}
}
//#endregion

//#region ScenaMinimapData
declare namespace HordeClassLibrary.World.ScenaComponents.Descriptors {
	class ScenaMinimapData extends System.Object {

		// Constructors:
		constructor(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D,
			textureData: number[] | null
		);

		// Properties:
		readonly Size: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly TextureData: number[];

		// Methods:
		ToBytes(): number[];

		static FromBytes(
			bytes: number[] | null
		): HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaMinimapData;
	}
}
//#endregion

//#region ScenaStamp
declare namespace HordeClassLibrary.World.ScenaComponents.Descriptors {
	class ScenaStamp extends System.Object {

		// Constructors:
		constructor(
			fileName: string | null,
			fileLength: number,
			hash: number[] | null,
			version: string | null
		);

		constructor();

		// Properties:
		readonly FileName: string;
		readonly FileLength: number;
		readonly Hash: string;
		readonly Version: string;
		readonly HashBytes: number[];
		readonly ShortHash: number;
	}
}
//#endregion

//#region LandscapeMapModification
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class /* struct */ LandscapeMapModification extends System.ValueType {

		// Constructors:
		constructor(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			curTile: HordeClassLibrary.World.Objects.Tiles.Tile | null
		);

		// Properties:
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly CurrentTile: HordeClassLibrary.World.Objects.Tiles.Tile;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region ResourcesMapModification
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class /* struct */ ResourcesMapModification extends System.ValueType {

		// Constructors:
		constructor(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			curTile: HordeClassLibrary.World.Objects.Tiles.ResourceTile | null
		);

		// Properties:
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly CurrentTile: HordeClassLibrary.World.Objects.Tiles.ResourceTile;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region ScenaFormat
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	abstract class ScenaFormat extends System.Enum {
		/** ScenaFormat.None = 0 */ static readonly None: ScenaFormat;
		/** ScenaFormat.NorthWind = 1 */ static readonly NorthWind: ScenaFormat;
		/** ScenaFormat.Citadel = 2 */ static readonly Citadel: ScenaFormat;
		/** ScenaFormat.Resurrection = 3 */ static readonly Resurrection: ScenaFormat;
	}
}
//#endregion

//#region ScenaGlobalObjects
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaGlobalObjects extends System.Object {

		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.ScenaComponents.Scena | null
		);

		// Properties:
		readonly Owner: HordeClassLibrary.World.ScenaComponents.Scena;
		readonly RallyPointFlagEffect: HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect;

		// Methods:
		Initialize(): void;

		Deinitialize(): void;
	}
}
//#endregion

//#region ScenaObjectsCollection
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	abstract class ScenaObjectsCollection<TScenaObject extends HordeClassLibrary.World.Objects.AScenaObject>
		extends System.Object /* but real BaseType out of API */
		implements
			System.Collections.Generic.IEnumerable<TScenaObject>,
			System.Collections.IEnumerable
	{
		// Properties:
		readonly Count: number;
		readonly Values: System.Collections.Generic.IEnumerable<TScenaObject>;

		// Methods:
		TryGet(
			id: number,
			/*out*/ obj: TScenaObject | null
		): boolean;

		GetEnumerator(): System.Collections.Generic.IEnumerator<TScenaObject>;

		GetEnumerator(): System.Collections.IEnumerator;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);

		// Some generics magic for TypeScript:
		private $ScenaObjectsCollection_TScenaObject: TScenaObject;
	}
}
//#endregion

//#region ScenaBulletsCollection
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaBulletsCollection
		extends HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsCollection<HordeClassLibrary.World.Objects.Bullets.BaseBullet>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ScenaSoundsCollection
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaSoundsCollection
		extends HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsCollection<HordeClassLibrary.World.Objects.SoundEffects.SimpleSoundEffect>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ScenaVisualEffectsCollection
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaVisualEffectsCollection
		extends HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsCollection<HordeClassLibrary.World.Objects.VisualEffects.AVisualEffect>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ScenaDecaysCollection
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaDecaysCollection
		extends HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsCollection<HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ScenaObjectsIdProvider
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaObjectsIdProvider extends System.Object {

		// Constructors:
		constructor();

		// Methods:
		GetNextId(): number;
	}
}
//#endregion

//#region ScenaObjectsRegistry
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaObjectsRegistry<TScenaObject extends HordeClassLibrary.World.Objects.AScenaObject>
		extends System.Object /* but real BaseType out of API */
		implements
			System.Collections.Generic.IEnumerable<TScenaObject>,
			System.Collections.IEnumerable
	{
		// Constructors:
		constructor(
			$TScenaObject: typeof HordeClassLibrary.World.Objects.AScenaObject,
			idProvider: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsIdProvider | null
		);

		constructor(
			$TScenaObject: typeof HordeClassLibrary.World.Objects.AScenaObject
		);

		// Properties:
		readonly Count: number;
		readonly Values: System.Collections.Generic.IEnumerable<TScenaObject>;

		// Methods:
		TryGet(
			id: number,
			/*out*/ obj: TScenaObject | null
		): boolean;

		GetEnumerator(): System.Collections.Generic.IEnumerator<TScenaObject>;

		GetEnumerator(): System.Collections.IEnumerator;

		// Events:
		ItemAdded: EventSource<System.EventHandler<HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry.ItemAddedEventArgs<TScenaObject>>>;
		ItemRemoved: EventSource<System.EventHandler<HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry.ItemRemovedEventArgs<TScenaObject>>>;

		// Some generics magic for TypeScript:
		private $ScenaObjectsRegistry_TScenaObject: TScenaObject;
	}
}
//#endregion

//#region ScenaObjectsRegistry.ItemAddedEventArgs
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry {
	class ItemAddedEventArgs<TScenaObject extends HordeClassLibrary.World.Objects.AScenaObject> extends System.Object
		implements System.IEquatable<HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry.ItemAddedEventArgs<TScenaObject>>
	{
		// Constructors:
		constructor(
			$TScenaObject: typeof HordeClassLibrary.World.Objects.AScenaObject,
			Item: TScenaObject | null
		);

		// Properties:
		Item: TScenaObject;

		// Some generics magic for TypeScript:
		private $ItemAddedEventArgs_TScenaObject: TScenaObject;
	}
}
//#endregion

//#region ScenaObjectsRegistry.ItemRemovedEventArgs
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry {
	class ItemRemovedEventArgs<TScenaObject extends HordeClassLibrary.World.Objects.AScenaObject> extends System.Object
		implements System.IEquatable<HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry.ItemRemovedEventArgs<TScenaObject>>
	{
		// Constructors:
		constructor(
			$TScenaObject: typeof HordeClassLibrary.World.Objects.AScenaObject,
			Item: TScenaObject | null
		);

		// Properties:
		Item: TScenaObject;

		// Some generics magic for TypeScript:
		private $ItemRemovedEventArgs_TScenaObject: TScenaObject;
	}
}
//#endregion

//#region ScenaUnitsRegistry
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaUnitsRegistry
		extends HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry<HordeClassLibrary.World.Objects.Units.Unit>
	{
		// Constructors:
		constructor(
			idProvider: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsIdProvider | null
		);
	}
}
//#endregion

//#region ScenaBulletsRegistry
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaBulletsRegistry
		extends HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry<HordeClassLibrary.World.Objects.Bullets.BaseBullet>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ScenaSoundsRegistry
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaSoundsRegistry
		extends HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry<HordeClassLibrary.World.Objects.SoundEffects.SimpleSoundEffect>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ScenaVisualEffectsRegistry
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaVisualEffectsRegistry
		extends HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry<HordeClassLibrary.World.Objects.VisualEffects.AVisualEffect>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ScenaDecaysRegistry
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaDecaysRegistry
		extends HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry<HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ScenaGearsRegistry
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaGearsRegistry
		extends HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry<HordeClassLibrary.World.Objects.Gears.BaseGear>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region ScenaSettlements
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaSettlements extends System.Object
		implements
			System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Settlements.Settlement>,
			System.Collections.IEnumerable
	{
		// Constructors:
		constructor(
			settlements: System.Collections.Generic.OrderedDictionary<string, HordeClassLibrary.World.Settlements.Settlement> | null
		);

		// Properties:
		readonly Count: number;

		// Indexer:
		readonly Item: $Indexer_ScenaSettlements;

		// Methods:
		GetByUid(
			patternSettlementUid: string | null
		): HordeClassLibrary.World.Settlements.Settlement;

		ApplyRules(
			rules: System.Collections.Generic.IEnumerable<HordeClassLibrary.HordeContent.Configs.Rules.RuleConfig> | null
		): void;

		GetEnumerator(): System.Collections.Generic.IEnumerator<HordeClassLibrary.World.Settlements.Settlement>;

		GetEnumerator(): System.Collections.IEnumerator;
	}

	/** This service type explains ClearScript access to .Net indexers. */
	abstract class $Indexer_ScenaSettlements {
		/** [ uid: string ] -> Settlement */
		public get(
			uid: string | null
		): HordeClassLibrary.World.Settlements.Settlement;
	}
}
//#endregion

//#region ScenaTileset
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaTileset extends System.Object
		implements System.IDisposable
	{
		// Constructors:
		constructor();

		constructor(
			citadelTileset: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelTileset | null
		);

		// Fields:
		static readonly TileFrameSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;

		// Properties:
		readonly TileConfigs: System.Collections.Generic.List<HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig>;

		// Methods:
		GetGraphicsFromCitadelTileset(
			citadelTileset: HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelTileset | null
		): void;

		GetTileByTypeAndMask(
			randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer | null,
			type: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType,
			tMask: HordeClassLibrary.World.Simple.TileMask
		): HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig;

		GetTileByMask(
			randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer | null,
			tMask: HordeClassLibrary.World.Simple.TileMask
		): HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig;

		Dispose(): void;
	}
}
//#endregion

//#region ScenaWind
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class ScenaWind extends System.Object {

		// Constructors:
		constructor(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null
		);

		// Properties:
		readonly Scena: HordeClassLibrary.World.ScenaComponents.Scena;
		readonly SpeedVector: HordeResurrection.Basic.Primitives.Geometry.PreciseFractionVector;
		readonly Direction: number;
		readonly UnitDirection: HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;
		readonly MaxSpeedComponent: HordeResurrection.Basic.Primitives.PreciseFraction;

		// Methods:
		ReinitializeStates(): void;

		UpdateOnGameTick(): void;

		ApplyDelta(
			speedDelta: HordeResurrection.Basic.Primitives.Geometry.PreciseFractionVector,
			boundToMinMax?: boolean /* = true */
		): void;

		SetSpeedVector(
			speedVector: HordeResurrection.Basic.Primitives.Geometry.PreciseFractionVector,
			boundToMinMax?: boolean /* = true */
		): void;
	}
}
//#endregion

//#region UnitsMap
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class UnitsMap extends System.Object {

		// Constructors:
		constructor(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null
		);

		// Properties:
		readonly UnitsTree: HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapTree;

		// Indexer:
		readonly Item: $Indexer_UnitsMap;

		// Methods:
		GetDeadUnitsEnumerator(
			x: number,
			y: number
		): System.Collections.Generic.IEnumerator<HordeClassLibrary.World.Objects.Units.Unit>;

		GetUnitsInCell(
			x: number,
			y: number
		): System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Objects.Units.Unit>;

		GetUnitsArrayInCell(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			unitInCellBuffer?: HordeClassLibrary.World.Objects.Units.Unit[] | null /* = null */
		): System.Collections.Generic.IList<HordeClassLibrary.World.Objects.Units.Unit>;

		GetUpperUnit(
			x: number,
			y: number
		): HordeClassLibrary.World.Objects.Units.Unit;

		GetUpperUnit(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.World.Objects.Units.Unit;

		GetById(
			id: HordeClassLibrary.World.Objects.Units.UnitIdLabel
		): HordeClassLibrary.World.Objects.Units.Unit;

		GetSquadFromRect(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			filterCallback: System.Func_1<HordeClassLibrary.World.Objects.Units.Unit, boolean> | System.Func | null
		): HordeClassLibrary.World.Objects.Squads.Squad;

		GetSquadByIds(
			ids: HordeClassLibrary.World.Objects.Units.UnitIdLabel[] | null,
			filterCallback: System.Func_1<HordeClassLibrary.World.Objects.Units.Unit, boolean> | System.Func | null
		): HordeClassLibrary.World.Objects.Squads.Squad;

		UnitsCount(): number;

		CreateMapChangesObtainer(
			name: string | null
		): HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapModification>;

		CreateOwnerChangesObtainer(
			name: string | null
		): HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsOwnerModification>;

		CreateSightChangesObtainer(
			name: string | null
		): HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsSightModification>;

		IsUnitInCell(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			x: number,
			y: number
		): boolean | null;

		IsContainsUnit(
			x: number,
			y: number,
			layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		): boolean | null;

		IsContainsUnitWithFlags(
			x: number,
			y: number,
			layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer,
			flags: HordeClassLibrary.UnitComponents.Enumerations.UnitFlags
		): boolean | null;

		IsContainsUnitWithoutFlag(
			x: number,
			y: number,
			layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer,
			flags: HordeClassLibrary.UnitComponents.Enumerations.UnitFlags
		): boolean | null;

		HasBuildingAtCell(
			x: number,
			y: number
		): boolean | null;

		HasBridgeAtCell(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean | null;

		// Events:
		UnitMapChanged: EventSource<System.EventHandler<HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapModification>>;
		UnitOwnerChanged: EventSource<System.EventHandler<HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsOwnerModification>>;
		UnitSightChanged: EventSource<System.EventHandler<HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsSightModification>>;
		UnitEffectChanged: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.Minds.EffectsMind.EffectChangedEventArgs>>;
	}

	/** This service type explains ClearScript access to .Net indexers. */
	abstract class $Indexer_UnitsMap {
		/** [ x: number, y: number, l: UnitMapLayer ] -> Unit */
		public get(
			x: number,
			y: number,
			l: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		): HordeClassLibrary.World.Objects.Units.Unit;

		/** [ cell: Point2D, l: UnitMapLayer ] -> Unit */
		public get(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			l: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		): HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region UnitsMapCell
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class UnitsMapCell extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly DeadUnits: HordeClassLibrary.World.Objects.Units.UnitsCollection;
		readonly UpperUnit: HordeClassLibrary.World.Objects.Units.Unit;

		// Indexer:
		readonly Item: $Indexer_UnitsMapCell;

		// Methods:
		AddUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		RemoveFromUnitMap(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		GetUnitsInCell(): System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Objects.Units.Unit>;

		GetUnitsArrayInCell(
			unitsInCellBuffer?: HordeClassLibrary.World.Objects.Units.Unit[] | null /* = null */
		): HordeClassLibrary.World.Objects.Units.Unit[];

		IsUnitInCell(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		IsContainsUnit(
			layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		): boolean;

		IsContainsUnitWithFlags(
			layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer,
			flags: HordeClassLibrary.UnitComponents.Enumerations.UnitFlags
		): boolean;

		IsContainsUnitWithAnyFlag(
			layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer,
			flags: HordeClassLibrary.UnitComponents.Enumerations.UnitFlags
		): boolean;

		IsContainsUnitWithoutFlag(
			layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer,
			flags: HordeClassLibrary.UnitComponents.Enumerations.UnitFlags
		): boolean;
	}

	/** This service type explains ClearScript access to .Net indexers. */
	abstract class $Indexer_UnitsMapCell {
		/** [ l: UnitMapLayer ] -> Unit */
		public get(
			l: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		): HordeClassLibrary.World.Objects.Units.Unit;

		/** [ l: UnitMapLayer ] <- Unit */
		public set(
			l: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer,
			value: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
}
//#endregion

//#region UnitsMapModificationType
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	abstract class UnitsMapModificationType extends System.Enum {
		/** UnitsMapModificationType.UnitAdded = 0 */ static readonly UnitAdded: UnitsMapModificationType;
		/** UnitsMapModificationType.UnitRemoved = 1 */ static readonly UnitRemoved: UnitsMapModificationType;
	}
}
//#endregion

//#region UnitsMapModification
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class /* struct */ UnitsMapModification extends System.ValueType {

		// Constructors:
		constructor(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer,
			modificationType: HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapModificationType
		);

		// Properties:
		readonly Unit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly Rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		readonly Layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
		readonly ModificationType: HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapModificationType;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region UnitsMapTree
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class UnitsMapTree extends System.Object {

		// Constructors:
		constructor(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null
		);

		// Methods:
		Recreate(): void;

		GetUnitsInBox(
			box: HordeResurrection.Basic.Primitives.Geometry.Box3D
		): HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsQueryResult;
	}
}
//#endregion

//#region UnitsOwnerModification
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class /* struct */ UnitsOwnerModification extends System.ValueType {

		// Constructors:
		constructor(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			oldOwner: HordeClassLibrary.World.Settlements.Settlement | null,
			newOwner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		readonly Unit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly OldOwner: HordeClassLibrary.World.Settlements.Settlement;
		readonly NewOwner: HordeClassLibrary.World.Settlements.Settlement;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region UnitsQueryResult
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class /* struct */ UnitsQueryResult extends System.ValueType {

		// Constructors:
		constructor();

		// Properties:
		Count: number;
		Units: HordeClassLibrary.World.Objects.Units.Unit[];
		Positions: number[];

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region UnitsSightModification
declare namespace HordeClassLibrary.World.ScenaComponents.Intrinsics {
	class /* struct */ UnitsSightModification extends System.ValueType {

		// Constructors:
		constructor(
			unit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		Unit: HordeClassLibrary.World.Objects.Units.Unit;
		OldSight: number;
		NewSight: number;
		OldForestVision: number;
		NewForestVision: number;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region Scena
declare namespace HordeClassLibrary.World.ScenaComponents {
	class Scena extends System.Object
		implements System.IDisposable
	{
		// Constructors:
		constructor(
			scenaDescriptor: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor | null,
			context: HordeClassLibrary.World.Context.BattleContext | null
		);

		// Properties:
		readonly FileStamp: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaStamp;
		readonly Format: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaFormat;
		readonly ScenaName: string;
		readonly Size: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly SizePixels: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly CustomScenario: HordeClassLibrary.World.ScenaComponents.Structure.ScenaScenario;
		readonly Context: HordeClassLibrary.World.Context.BattleContext;
		readonly Tileset: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaTileset;
		readonly LandscapeMap: HordeClassLibrary.World.ScenaComponents.Scena.ScenaLandscape;
		readonly ResourcesMap: HordeClassLibrary.World.ScenaComponents.Scena.ScenaResourcesMap;
		readonly Settlements: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaSettlements;
		readonly UnitsMap: HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMap;
		readonly Wind: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaWind;
		readonly Messages: HordeClassLibrary.World.Simple.GameMessagesCollection;
		readonly Watcher: HordeClassLibrary.World.ScenaComponents.Watcher.ScenaWatcher;
		readonly Rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		readonly RectPixels: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		readonly IsInitialized: boolean;
		readonly ObjectController: HordeClassLibrary.World.ScenaComponents.Scena.ScenaObjectController;
		readonly Decays: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaDecaysRegistry;
		readonly VisualEffects: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaVisualEffectsRegistry;
		readonly SoundEffects: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaSoundsRegistry;
		readonly Bullets: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaBulletsRegistry;
		readonly Gears: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaGearsRegistry;
		readonly GlobalObjects: HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaGlobalObjects;
		readonly PathMap: HordeClassLibrary.World.ScenaComponents.Scena.ScenaPathMap;

		// Methods:
		UpdateOnGameTick(): void;

		GetRealScena(): HordeClassLibrary.World.ScenaComponents.Scena;

		Dispose(): void;

		PointInScena(
			x: number,
			y: number
		): boolean;

		PointInScena(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		RectInScena(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): boolean;

		FixScenaPoint(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		FixScenaPoints(
			/*ref*/ pointsSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		): void;

		RemoveOutOfScenaPoints(
			/*ref*/ pointsSet: System.Collections.Generic.HashSet<HordeResurrection.Basic.Primitives.Geometry.Point2D> | null
		): void;

		RectIntersectWithScena(
			rx: number,
			ry: number,
			w: number,
			h: number
		): HordeResurrection.Basic.Primitives.Geometry.Rect2D;

		RectIntersectWithScena(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): HordeResurrection.Basic.Primitives.Geometry.Rect2D;

		ForAllCellsInRect(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			action: System.Action_1<HordeResurrection.Basic.Primitives.Geometry.Point2D> | System.Action | null
		): void;

		LoadScena(): void;

		LoadBasicInfo(): void;
	}
}
//#endregion

//#region Scena.ScenaLandscape
declare namespace HordeClassLibrary.World.ScenaComponents.Scena {
	class ScenaLandscape extends System.Object
		implements HordeClassLibrary.World.Objects.Tiles.ITileConfigProvider
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.ScenaComponents.Scena | null
		);

		// Indexer:
		readonly Item: $Indexer_ScenaLandscape;

		// Methods:
		Initialize(
			tilesMap: HordeClassLibrary.World.Objects.Tiles.Tile[][] | null
		): void;

		UpdateOnGameTick(): void;

		CreateChangesObtainer(
			name: string | null
		): HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<HordeClassLibrary.World.ScenaComponents.Intrinsics.LandscapeMapModification>;

		ChangeCellPayload(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			payload: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TilePayload
		): void;

		ReplaceTileAt(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			type: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType,
			payload: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TilePayload
		): void;

		ChopTreeAt(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		ChangeTileConfig(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			newTileConfig: HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig | null,
			changeOptions?: HordeClassLibrary.World.Objects.Tiles.ChangeTileOptions | null /* = null */
		): void;

		GetTileConfigAt(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig;

		// Events:
		MapChanged: EventSource<System.EventHandler<HordeClassLibrary.World.ScenaComponents.Intrinsics.LandscapeMapModification>>;
	}

	/** This service type explains ClearScript access to .Net indexers. */
	abstract class $Indexer_ScenaLandscape {
		/** [ x: number, y: number ] -> Tile */
		public get(
			x: number,
			y: number
		): HordeClassLibrary.World.Objects.Tiles.Tile;

		/** [ cell: Point2D ] -> Tile */
		public get(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.World.Objects.Tiles.Tile;
	}
}
//#endregion

//#region Scena.ScenaObjectController
declare namespace HordeClassLibrary.World.ScenaComponents.Scena {
	class ScenaObjectController extends System.Object {

		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.ScenaComponents.Scena | null
		);

		// Methods:
		Initialize(): void;

		Deinitialize(): void;

		RegisterDecayEffect(
			decay: HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect | null
		): void;

		RegisterVisualEffect(
			viewEffect: HordeClassLibrary.World.Objects.VisualEffects.AVisualEffect | null
		): void;

		RegisterSoundEffect(
			soundEffect: HordeClassLibrary.World.Objects.SoundEffects.SimpleSoundEffect | null
		): void;

		RegisterBullet(
			bull: HordeClassLibrary.World.Objects.Bullets.BaseBullet | null
		): void;

		RegisterGear(
			gear: HordeClassLibrary.World.Objects.Gears.BaseGear | null
		): void;

		UtterSound(
			soundsCatalog: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog | null,
			sectionName: string | null,
			position: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			isLooping?: boolean /* = false */
		): void;
	}
}
//#endregion

//#region Scena.ScenaPathMap
declare namespace HordeClassLibrary.World.ScenaComponents.Scena {
	class ScenaPathMap extends System.Object {

		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.ScenaComponents.Scena | null
		);

		// Methods:
		Initialize(): void;

		GetFreePathfinderMap(): number[];

		StorePathfinderMap(
			map: number[] | null
		): void;
	}
}
//#endregion

//#region Scena.ScenaResourcesMap
declare namespace HordeClassLibrary.World.ScenaComponents.Scena {
	class ScenaResourcesMap extends System.Object {

		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.ScenaComponents.Scena | null
		);

		// Properties:
		readonly ChopsToFellTree: number;
		readonly TreesOnCellCount: number;

		// Indexer:
		readonly Item: $Indexer_ScenaResourcesMap;

		// Methods:
		Initialize(
			resourcesMap: HordeClassLibrary.World.Objects.Tiles.ResourceTile[][] | null
		): void;

		UpdateOnGameTick(): void;

		CreateChangesObtainer(
			name: string | null
		): HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<HordeClassLibrary.World.ScenaComponents.Intrinsics.ResourcesMapModification>;

		HasTreesInCell(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		// Events:
		MapChanged: EventSource<System.EventHandler<HordeClassLibrary.World.ScenaComponents.Intrinsics.ResourcesMapModification>>;
	}

	/** This service type explains ClearScript access to .Net indexers. */
	abstract class $Indexer_ScenaResourcesMap {
		/** [ x: number, y: number ] -> ResourceTile */
		public get(
			x: number,
			y: number
		): HordeClassLibrary.World.Objects.Tiles.ResourceTile;

		/** [ cell: Point2D ] -> ResourceTile */
		public get(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.World.Objects.Tiles.ResourceTile;
	}
}
//#endregion

//#region ScenaLogic
declare namespace HordeClassLibrary.World.ScenaComponents {
	class ScenaLogic extends System.Object {

		// Constructors:
		constructor();

		// Methods:
		UpdateOnGameTick(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null
		): void;

		CalculateGameHash(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null
		): number;
	}
}
//#endregion

//#region ScenaScenario
declare namespace HordeClassLibrary.World.ScenaComponents.Structure {
	class ScenaScenario extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly Rules: System.Collections.Generic.List<HordeClassLibrary.HordeContent.Configs.Rules.RuleConfig>;
	}
}
//#endregion

//#region ScenaChangesObtainersCollection
declare namespace HordeClassLibrary.World.ScenaComponents.TickChanges {
	class ScenaChangesObtainersCollection extends System.Object {

		// Constructors:
		constructor(
			name: string | null
		);

		// Properties:
		readonly UnitsMapChangesObtainer: HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapModification>;
		readonly UnitsOwnerChangesObtainer: HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsOwnerModification>;
		readonly LandscapeMapChangesObtainer: HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<HordeClassLibrary.World.ScenaComponents.Intrinsics.LandscapeMapModification>;
		readonly ResourcesMapChangesObtainer: HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<HordeClassLibrary.World.ScenaComponents.Intrinsics.ResourcesMapModification>;
		readonly Name: string;

		// Methods:
		AttachScena(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null
		): void;

		DettachScena(): void;

		SkipChanges(): void;
	}
}
//#endregion

//#region TickChangesObtainer
declare namespace HordeClassLibrary.World.ScenaComponents.TickChanges {
	class TickChangesObtainer<TModification> extends System.Object {

		// Methods:
		GetNewChanges(): System.Collections.Generic.IEnumerable<TModification>;

		SkipChanges(): void;

		// Some generics magic for TypeScript:
		private $TickChangesObtainer_TModification: TModification;
	}
}
//#endregion

//#region ScenaWatcher
declare namespace HordeClassLibrary.World.ScenaComponents.Watcher {
	class ScenaWatcher extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly UnitsRegistration: HordeClassLibrary.World.ScenaComponents.Watcher.UnitsRegistrationWatcher;
	}
}
//#endregion

//#region UnitsRegistrationWatcher
declare namespace HordeClassLibrary.World.ScenaComponents.Watcher {
	class UnitsRegistrationWatcher extends System.Object {

		// Constructors:
		constructor();

		// Methods:
		CheckRegistration(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null,
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
}
//#endregion

//#region AlmostDefeatCondition
declare namespace HordeClassLibrary.World.Settlements.Existence {
	abstract class AlmostDefeatCondition extends System.Enum {
		/** AlmostDefeatCondition.LossProducingBuildings = 0 */ static readonly LossProducingBuildings: AlmostDefeatCondition;
		/** AlmostDefeatCondition.LossProducingUnits = 1 */ static readonly LossProducingUnits: AlmostDefeatCondition;
		/** AlmostDefeatCondition.LossAllUnits = 2 */ static readonly LossAllUnits: AlmostDefeatCondition;
		/** AlmostDefeatCondition.Custom = 3 */ static readonly Custom: AlmostDefeatCondition;
		/** AlmostDefeatCondition.Disabled = 4 */ static readonly Disabled: AlmostDefeatCondition;
	}
}
//#endregion

//#region ExistenceStatus
declare namespace HordeClassLibrary.World.Settlements.Existence {
	abstract class ExistenceStatus extends System.Enum {
		/** ExistenceStatus.NotInBattle = 0 */ static readonly NotInBattle: ExistenceStatus;
		/** ExistenceStatus.CombatNow = 1 */ static readonly CombatNow: ExistenceStatus;
		/** ExistenceStatus.AlmostDefeat = 2 */ static readonly AlmostDefeat: ExistenceStatus;
		/** ExistenceStatus.TotalDefeat = 3 */ static readonly TotalDefeat: ExistenceStatus;
		/** ExistenceStatus.Victory = 4 */ static readonly Victory: ExistenceStatus;
	}
}
//#endregion

//#region TotalDefeatCondition
declare namespace HordeClassLibrary.World.Settlements.Existence {
	abstract class TotalDefeatCondition extends System.Enum {
		/** TotalDefeatCondition.AlliesDefeated = 0 */ static readonly AlliesDefeated: TotalDefeatCondition;
		/** TotalDefeatCondition.SameAsAlmostDefeat = 1 */ static readonly SameAsAlmostDefeat: TotalDefeatCondition;
		/** TotalDefeatCondition.Custom = 2 */ static readonly Custom: TotalDefeatCondition;
		/** TotalDefeatCondition.Disabled = 3 */ static readonly Disabled: TotalDefeatCondition;
	}
}
//#endregion

//#region VictoryCondition
declare namespace HordeClassLibrary.World.Settlements.Existence {
	abstract class VictoryCondition extends System.Enum {
		/** VictoryCondition.NonAlliesDefeated = 0 */ static readonly NonAlliesDefeated: VictoryCondition;
		/** VictoryCondition.Custom = 1 */ static readonly Custom: VictoryCondition;
		/** VictoryCondition.Disabled = 2 */ static readonly Disabled: VictoryCondition;
	}
}
//#endregion

//#region AntiFogLantern
declare namespace HordeClassLibrary.World.Settlements.FogOfWar {
	class AntiFogLantern
		extends HordeClassLibrary.World.Objects.Gears.BaseGear
	{
		// Properties:
		readonly Owner: HordeClassLibrary.World.Settlements.Settlement;
		readonly Region: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		readonly Countdown: HordeResurrection.Basic.Debugger.Countdowns.Countdown;

		// Methods:
		static Create(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			region: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			ticks: number
		): HordeClassLibrary.World.Settlements.FogOfWar.AntiFogLantern;

		Emit(): void;

		Cancel(): void;

		EmitFor(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): boolean;

		CancelFor(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): boolean;
	}
}
//#endregion

//#region AntiFogLanternCollection
declare namespace HordeClassLibrary.World.Settlements.FogOfWar {
	class AntiFogLanternCollection extends System.Object
		implements
			System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Settlements.FogOfWar.AntiFogLantern>,
			System.Collections.IEnumerable
	{
		// Constructors:
		constructor();

		// Methods:
		Add(
			antiFogLantern: HordeClassLibrary.World.Settlements.FogOfWar.AntiFogLantern | null
		): void;

		Remove(
			antiFogLantern: HordeClassLibrary.World.Settlements.FogOfWar.AntiFogLantern | null
		): void;

		GetEnumerator(): System.Collections.Generic.IEnumerator<HordeClassLibrary.World.Settlements.FogOfWar.AntiFogLantern>;

		GetEnumerator(): System.Collections.IEnumerator;
	}
}
//#endregion

//#region EasingItem
declare namespace HordeClassLibrary.World.Settlements.FogOfWar {
	class /* struct */ EasingItem extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.FogOfWar.EasingItem>
	{
		// Constructors:
		constructor(
			Rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			EasingTicks: number,
			RaiseEvent: boolean
		);

		// Properties:
		Rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		EasingTicks: number;
		RaiseEvent: boolean;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region EasingCollection
declare namespace HordeClassLibrary.World.Settlements.FogOfWar {
	class EasingCollection extends System.Object {

		// Constructors:
		constructor(
			hideAction: System.Action_2<HordeResurrection.Basic.Primitives.Geometry.Rect2D, boolean> | System.Action | null
		);

		// Properties:
		readonly HideAction: System.Action_2<HordeResurrection.Basic.Primitives.Geometry.Rect2D, boolean> | System.Action;

		// Methods:
		ProcessAll(): void;

		AddItem(
			item: HordeClassLibrary.World.Settlements.FogOfWar.EasingItem
		): void;

		Clear(): void;
	}
}
//#endregion

//#region FogOfWarConstants
declare namespace HordeClassLibrary.World.Settlements.FogOfWar {
	abstract class FogOfWarConstants {

		// Fields:
		static readonly FogTypesNumber: number;
		static readonly EasingTicks: number;
		static readonly LanternAfterUnitDeathTicks: number;
		static readonly LanternAfterBuildingDeathTicks: number;
		static readonly FogColors: System.Collections.Generic.Dictionary<HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell, HordeResurrection.Basic.Primitives.HordeColor>;
		static readonly GrayFogAlpha: number;
		static readonly FogColorsBGRA: number[];
		static readonly /* const */ SecondaryFogDistance: number; // = 5

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region FogOfWarInCell
declare namespace HordeClassLibrary.World.Settlements.FogOfWar {
	abstract class FogOfWarInCell extends System.Enum {
		/** FogOfWarInCell.NoFog = 0 */ static readonly NoFog: FogOfWarInCell;
		/** FogOfWarInCell.Gray = 1 */ static readonly Gray: FogOfWarInCell;
		/** FogOfWarInCell.Black = 2 */ static readonly Black: FogOfWarInCell;
	}
}
//#endregion

//#region FogOfWarSettings
declare namespace HordeClassLibrary.World.Settlements.FogOfWar {
	class FogOfWarSettings extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly DefaultFog: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell;
		readonly DerivativeFog: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell;

		// Methods:
		SetFog(
			blackFog: boolean,
			grayFog: boolean
		): void;
	}
}
//#endregion

//#region SecondaryFogOfWarInCell
declare namespace HordeClassLibrary.World.Settlements.FogOfWar {
	abstract class SecondaryFogOfWarInCell extends System.Enum {
		/** SecondaryFogOfWarInCell.NoFog = 0 */ static readonly NoFog: SecondaryFogOfWarInCell;
		/** SecondaryFogOfWarInCell.HalfGray = 1 */ static readonly HalfGray: SecondaryFogOfWarInCell;
		/** SecondaryFogOfWarInCell.Gray = 2 */ static readonly Gray: SecondaryFogOfWarInCell;
		/** SecondaryFogOfWarInCell.HalfBlack = 3 */ static readonly HalfBlack: SecondaryFogOfWarInCell;
		/** SecondaryFogOfWarInCell.Black = 4 */ static readonly Black: SecondaryFogOfWarInCell;
	}
}
//#endregion

//#region ASettlementHelper
declare namespace HordeClassLibrary.World.Settlements.Helpers {
	abstract class ASettlementHelper extends System.Object {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region UnitProductHelper
declare namespace HordeClassLibrary.World.Settlements.Helpers {
	class UnitProductHelper
		extends HordeClassLibrary.World.Settlements.Helpers.ASettlementHelper
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Methods:
		IsEnoughResources(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		IsDiscovered(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		AreRequirementsSatisfied(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		IsSatisfiesRules(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		CanBeProduced(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		CanProduce(
			producerCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		GetEffectiveProduceList(
			producerCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			skipUndiscovered?: boolean /* = false */
		): HordeResurrection.Basic.Pool.PoolSlot<System.Collections.Generic.List<HordeClassLibrary.UnitComponents.Misc.ProduceListItemInfo>>;

		HasAnyInEffectiveProduceList(
			producerCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;
	}
}
//#endregion

//#region SettlementDiplomacyModel
declare namespace HordeClassLibrary.World.Settlements.Models {
	class SettlementDiplomacyModel extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		Statuses: System.Collections.Generic.Dictionary<HordeClassLibrary.World.Settlements.Models.SettlementModel, HordeClassLibrary.World.Simple.DiplomacyStatus>;

		// Methods:
		FillFromCitadelStruct(
			citadelNation: HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.CitadelScenaNation | null,
			settlements: System.Collections.Generic.IReadOnlyList<HordeClassLibrary.World.Settlements.Models.SettlementModel> | null
		): void;
	}
}
//#endregion

//#region SettlementModel
declare namespace HordeClassLibrary.World.Settlements.Models {
	class SettlementModel extends System.Object {

		// Constructors:
		constructor(
			uid: string | null
		);

		constructor();

		// Properties:
		IsDummy: boolean;
		Uid: string;
		Force: HordeClassLibrary.HordeContent.Configs.Army.Force;
		ColorsTab: HordeResurrection.Basic.Primitives.HordeColor[];
		ColorsTabDecays: HordeResurrection.Basic.Primitives.HordeColor[];
		MaskColor: HordeResurrection.Basic.Primitives.HordeColor;
		MinimapColor: HordeResurrection.Basic.Primitives.HordeColor;
		LeaderName: string;
		TownName: string;
		Units: System.Collections.Generic.List<HordeClassLibrary.World.Objects.Units.UnitModel>;
		Diplomacy: HordeClassLibrary.World.Settlements.Models.SettlementDiplomacyModel;
		Resources: HordeClassLibrary.World.Simple.ResourcesAmount;
		CensusModel: HordeClassLibrary.World.Settlements.Models.SettlementPopulationCensusModel;

		// Methods:
		FillFromCitadelScenaNation(
			citadelNation: HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.CitadelScenaNation | null
		): void;
	}
}
//#endregion

//#region SettlementPopulationCensusModel
declare namespace HordeClassLibrary.World.Settlements.Models {
	class SettlementPopulationCensusModel extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		BusyPeople: number;
		ReservedPeople: number;
		PeoplePotentialByHouses: number;
		PeoplePotentialByTerritory: number;
		MaxPeople: number;
		TotalSalarySlots: number;
		PopulationTerritoryArea: number;
		PeopleIncomeTimer: number;
		PeopleIncomeLevels: System.Collections.Generic.List<HordeClassLibrary.World.Settlements.Modules.Misc.PeopleIncomeLevel>;
		LastPeopleIncomeLevel: number;
		OneSalarySize: HordeClassLibrary.World.Simple.ResourcesAmount;
		TaxFactor: HordeClassLibrary.World.Simple.ResourcesAmount;
		TitheFactor: HordeClassLibrary.World.Simple.ResourcesAmount;
		TaxAndSalaryUpdatePeriod: number;

		// Methods:
		FillFromCitadelStruct(): void;
	}
}
//#endregion

//#region ASettlementModule
declare namespace HordeClassLibrary.World.Settlements.Modules {
	abstract class ASettlementModule extends System.Object {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BuildingSitesCollection
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	class BuildingSitesCollection extends System.Object {

		// Constructors:
		constructor(
			size: HordeResurrection.Basic.Primitives.Geometry.Size2D
		);

		// Methods:
		Deinitialize(): void;

		RegisterBuildingPlaces(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null
		): void;

		RegisterBuildingPlace(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null,
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		UnregisterBuildingPlaces(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null
		): void;

		UnregisterBuildingPlace(
			order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null,
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		HasBuildDataIn(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		HasReservingFor(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		CountReservingFor(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): number;

		GetBuildDataEnumeratorInCell(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): System.Collections.Generic.IEnumerator<HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.BuildData>;

		ForEachBuildDataIn(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			callback: System.Func_1<HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.BuildData, boolean> | System.Func | null
		): void;

		AnyBuildDataIn(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			predicate: System.Func_1<HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.BuildData, boolean> | System.Func | null
		): boolean;

		// Events:
		SiteRegistration: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.SiteRegistrationEventArgs>>;
		SiteUnregistration: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.SiteUnregistrationEventArgs>>;
	}
}
//#endregion

//#region BuildingSitesCollection.SiteRegistrationEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection {
	class /* struct */ SiteRegistrationEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.SiteRegistrationEventArgs>
	{
		// Constructors:
		constructor(
			BuildData: HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.BuildData
		);

		// Properties:
		BuildData: HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.BuildData;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region BuildingSitesCollection.SiteUnregistrationEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection {
	class /* struct */ SiteUnregistrationEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.SiteUnregistrationEventArgs>
	{
		// Constructors:
		constructor(
			BuildData: HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.BuildData
		);

		// Properties:
		BuildData: HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.BuildData;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region BuildingSitesCollection.BuildData
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection {
	class /* struct */ BuildData extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.BuildData>
	{
		// Constructors:
		constructor(
			ProductCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			Order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase | null,
			Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		ProductCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		Order: HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase;
		Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region HypotheticalProductsCollection
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	class HypotheticalProductsCollection extends System.Object {

		// Constructors:
		constructor();

		// Methods:
		AddProducer(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		RemoveProducer(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		CanProduce(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		WhoCanProduce(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			producersToFillList: System.Collections.Generic.List<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig> | null
		): boolean;
	}
}
//#endregion

//#region KnownMapModification
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	class /* struct */ KnownMapModification extends System.ValueType {

		// Constructors:
		constructor(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			oldVisibility: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell | null,
			newVisibility: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell | null
		);

		// Properties:
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly OldVisibility: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell | null;
		readonly NewVisibility: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell | null;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region MapChangedCallbackDelegate
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	interface /* delegate */ MapChangedCallbackDelegate {
		(
			args: HordeClassLibrary.World.Settlements.Modules.Misc.KnownUnitsMapChangedEventArgs
		): void;
	}
	/** TypeScript type stub for .Net delegate */
	class MapChangedCallbackDelegate { constructor(func: MapChangedCallbackDelegate); }
}
//#endregion

//#region CountFogInRectDelegate
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	interface /* delegate */ CountFogInRectDelegate {
		(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			countersBuff: number[] | null
		): void;
	}
	/** TypeScript type stub for .Net delegate */
	class CountFogInRectDelegate { constructor(func: CountFogInRectDelegate); }
}
//#endregion

//#region KnownUnitsMapChangedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	class /* struct */ KnownUnitsMapChangedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.Misc.KnownUnitsMapChangedEventArgs>
	{
		// Constructors:
		constructor(
			KnownUnit: HordeClassLibrary.World.Objects.Units.KnownUnit | null,
			Rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			Layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		);

		// Properties:
		KnownUnit: HordeClassLibrary.World.Objects.Units.KnownUnit;
		Rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		Layer: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region PeopleIncomeLevel
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	class PeopleIncomeLevel extends System.Object {

		// Constructors:
		constructor(
			growthBuildings: number,
			people: number,
			incomePeriod: number
		);

		// Properties:
		People: number;
		GrowthBuildings: number;
		IncomePeriod: number;

		// Methods:
		IsReached(
			growthBuildings: number,
			people: number
		): boolean;
	}
}
//#endregion

//#region ProfessionEntry
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	class ProfessionEntry extends System.Object
		implements
			System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Objects.Units.Unit>,
			System.Collections.IEnumerable
	{
		// Properties:
		readonly Count: number;

		// Methods:
		First(): HordeClassLibrary.World.Objects.Units.Unit;

		GetEnumerator(): System.Collections.Generic.IEnumerator<HordeClassLibrary.World.Objects.Units.Unit>;

		GetEnumerator(): System.Collections.IEnumerator;

		// Events:
		Added: EventSource<System.EventHandler<HordeClassLibrary.World.Objects.Units.Unit>>;
		Removed: EventSource<System.EventHandler<HordeClassLibrary.World.Objects.Units.Unit>>;
	}
}
//#endregion

//#region ReservedPeople
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	class ReservedPeople extends System.Object {

		// Constructors:
		constructor(
			ownerModel: HordeClassLibrary.World.Settlements.Models.SettlementPopulationCensusModel | null
		);

		// Properties:
		readonly UnitsWhoReservedPeople: System.Collections.Generic.HashSet<HordeClassLibrary.World.Objects.Units.Unit>;
		readonly Reserved: number;

		// Methods:
		Reserve(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): void;

		Release(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): void;

		ReleaseIfReserved(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		RememberReserver(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;
	}
}
//#endregion

//#region ResourcesBonus
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	class ResourcesBonus extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly MetalFactor: number;
		readonly GoldFactor: number;
		readonly LumberFactor: number;
	}
}
//#endregion

//#region UnitConfigsSet
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	class UnitConfigsSet extends System.Object
		implements
			System.Collections.Generic.IEnumerable<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>,
			System.Collections.IEnumerable
	{
		// Constructors:
		constructor();

		// Methods:
		Add(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		Remove(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		Has(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		Contains(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		GetEnumerator(): System.Collections.Generic.IEnumerator<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>;

		GetEnumerator(): System.Collections.IEnumerator;
	}
}
//#endregion

//#region UnitProducersMap
declare namespace HordeClassLibrary.World.Settlements.Modules.Misc {
	class UnitProducersMap extends System.Object {

		// Constructors:
		constructor();

		// Methods:
		AddProducer(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		RemoveProducer(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		HasProducersFor(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		TryFillProducersSet(
			productCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			producersSetToFill: System.Collections.Generic.HashSet<HordeClassLibrary.World.Objects.Units.Unit> | null
		): boolean;
	}
}
//#endregion

//#region SettlementBuildingInProgressObserver
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementBuildingInProgressObserver extends System.Object {

		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			settlementUnits: HordeClassLibrary.World.Settlements.Modules.SettlementUnits | null
		);

		// Methods:
		HandleAddedUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			raiseEvents?: boolean /* = true */
		): void;

		HandleRemovedUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			raiseEvents?: boolean /* = true */
		): void;

		CountBuildInProgressOfType(
			reqCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): number;

		// Events:
		BuildingBegin: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver.BuildingBeginEventArgs>>;
		BuildingComplete: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver.BuildingCompleteEventArgs>>;
	}
}
//#endregion

//#region SettlementBuildingInProgressObserver.BuildingBeginEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver {
	class /* struct */ BuildingBeginEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver.BuildingBeginEventArgs>
	{
		// Constructors:
		constructor(
			Unit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		Unit: HordeClassLibrary.World.Objects.Units.Unit;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementBuildingInProgressObserver.BuildingCompleteEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver {
	class /* struct */ BuildingCompleteEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver.BuildingCompleteEventArgs>
	{
		// Constructors:
		constructor(
			Unit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		Unit: HordeClassLibrary.World.Objects.Units.Unit;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementDiplomacy
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementDiplomacy
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Methods:
		IsWarStatus(
			other: HordeClassLibrary.World.Settlements.Settlement | null
		): boolean;

		IsNeutralStatus(
			other: HordeClassLibrary.World.Settlements.Settlement | null
		): boolean;

		IsAllianceStatus(
			other: HordeClassLibrary.World.Settlements.Settlement | null
		): boolean;

		GetDiplomacyStatus(
			other: HordeClassLibrary.World.Settlements.Settlement | null
		): HordeClassLibrary.World.Simple.DiplomacyStatus;

		GetPartnerDiplomacyStatus(
			other: HordeClassLibrary.World.Settlements.Settlement | null
		): HordeClassLibrary.World.Simple.DiplomacyStatus;

		Discover(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): void;

		DeclarePeace(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): void;

		DeclareAlliance(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): void;

		DeclareWar(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): void;

		CanControlUnitsOf(
			otherSettlement: HordeClassLibrary.World.Settlements.Settlement | null
		): boolean;

		CanDisbandUnitsOf(
			otherSettlement: HordeClassLibrary.World.Settlements.Settlement | null
		): boolean;

		CanSeeUnitsOf(
			otherSettlement: HordeClassLibrary.World.Settlements.Settlement | null
		): boolean;

		static CanSeeUnitsOn(
			status: HordeClassLibrary.World.Simple.DiplomacyStatus
		): boolean;

		GetAlliedSettlements(): System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Settlements.Settlement>;

		GetUnorderedAlliedSettlements(): System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Settlements.Settlement>;

		// Events:
		StatusChanged: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementDiplomacy.StatusChangedEventArgs>>;
	}
}
//#endregion

//#region SettlementDiplomacy.StatusChangedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementDiplomacy {
	class /* struct */ StatusChangedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementDiplomacy.StatusChangedEventArgs>
	{
		// Constructors:
		constructor(
			Source: HordeClassLibrary.World.Settlements.Settlement | null,
			Target: HordeClassLibrary.World.Settlements.Settlement | null,
			OldStatus: HordeClassLibrary.World.Simple.DiplomacyStatus,
			NewStatus: HordeClassLibrary.World.Simple.DiplomacyStatus
		);

		// Properties:
		Source: HordeClassLibrary.World.Settlements.Settlement;
		Target: HordeClassLibrary.World.Settlements.Settlement;
		OldStatus: HordeClassLibrary.World.Simple.DiplomacyStatus;
		NewStatus: HordeClassLibrary.World.Simple.DiplomacyStatus;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementEvents
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementEvents
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		readonly HasTotalDefeatEvent: boolean;
		readonly TickEvents: HordeClassLibrary.World.Settlements.Modules.SettlementEvents.TickEventType;

		// Methods:
		AddTickEvent(
			eventType: HordeClassLibrary.World.Settlements.Modules.SettlementEvents.TickEventType,
			eventArgs?: System.EventArgs | null /* = null */
		): void;

		// Events:
		InterfaceSoundUttered: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementEvents.InterfaceSoundUtteredEventArgs>>;
	}
}
//#endregion

//#region SettlementEvents.TickEventType
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementEvents {
	abstract class TickEventType extends System.EnumFlags {
		/** TickEventType.None = 0 */ static readonly None: TickEventType;
		/** TickEventType.Victory = 1 */ static readonly Victory: TickEventType;
		/** TickEventType.AlmostDefeat = 2 */ static readonly AlmostDefeat: TickEventType;
		/** TickEventType.TotalDefeat = 4 */ static readonly TotalDefeat: TickEventType;
	}
}
//#endregion

//#region SettlementEvents.InterfaceSoundUtteredEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementEvents {
	class /* struct */ InterfaceSoundUtteredEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementEvents.InterfaceSoundUtteredEventArgs>
	{
		// Constructors:
		constructor(
			Sound: HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums.InterfaceFromSettlementSounds
		);

		// Properties:
		Sound: HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums.InterfaceFromSettlementSounds;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementExistence
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementExistence
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Properties:
		readonly IsNotInBattle: boolean;
		readonly IsCombatNow: boolean;
		readonly IsAlmostDefeat: boolean;
		readonly IsTotalDefeat: boolean;
		readonly IsVictory: boolean;
		readonly ChangesDateTime: Date;
		readonly HasEnemyOnBattleStart: boolean;

		// Methods:
		AddToCombat(): void;

		PostInitialize(): void;

		CheckAlmostDefeatCondition(): boolean;

		CheckTotalDefeatCondition(): boolean;

		CheckVictoryCondition(): boolean;

		CheckNonAlliesDefeatedForVictory(): boolean;

		CheckAlliesDefeatedForTotalDefeat(): boolean;

		FindCombatNonAlly(): boolean;

		CheckNonAlliesDefeated(): boolean;

		CheckAlliesDefeated(): boolean;

		ForceVictory(
			silent?: boolean /* = false */
		): void;

		ForceAlmostDefeat(
			silent?: boolean /* = false */
		): void;

		ForceTotalDefeat(
			silent?: boolean /* = false */
		): void;

		TechnicalDefeat(
			silent?: boolean /* = false */
		): void;

		ForceResetToCombat(): void;

		ForceResetToNotInBattle(): void;

		// Events:
		ExistenceChanged: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementExistence.ExistenceChangedEventArgs>>;
		VictoryEvent: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementExistence.VictoryEventArgs>>;
	}
}
//#endregion

//#region SettlementExistence.ExistenceChangedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementExistence {
	class /* struct */ ExistenceChangedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementExistence.ExistenceChangedEventArgs>
	{
		// Constructors:
		constructor(
			OldValue: HordeClassLibrary.World.Settlements.Existence.ExistenceStatus,
			NewValue: HordeClassLibrary.World.Settlements.Existence.ExistenceStatus
		);

		// Properties:
		OldValue: HordeClassLibrary.World.Settlements.Existence.ExistenceStatus;
		NewValue: HordeClassLibrary.World.Settlements.Existence.ExistenceStatus;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementExistence.VictoryEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementExistence {
	class /* struct */ VictoryEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementExistence.VictoryEventArgs>
	{
		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementMap
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementMap
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Methods:
		UpdateOnGameTick(): void;

		GetKnownTile(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.World.Objects.Tiles.KnownTile;

		GetKnownTile(
			i: number,
			j: number
		): HordeClassLibrary.World.Objects.Tiles.KnownTile;

		GetKnownResourceTile(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.World.Objects.Tiles.KnownResourceTile;

		GetKnownResourceTile(
			i: number,
			j: number
		): HordeClassLibrary.World.Objects.Tiles.KnownResourceTile;

		GetKnownUnit(
			i: number,
			j: number,
			l: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		): HordeClassLibrary.World.Objects.Units.KnownUnit;

		GetKnownUnit(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			l: HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer
		): HordeClassLibrary.World.Objects.Units.KnownUnit;

		GetUpperKnownUnit(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.World.Objects.Units.KnownUnit;

		GetUpperKnownUnit(
			i: number,
			j: number
		): HordeClassLibrary.World.Objects.Units.KnownUnit;

		HasBridgeAtCell(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean | null;

		CreateKnownMapChangesObtainer(
			name: string | null
		): HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<HordeClassLibrary.World.Settlements.Modules.Misc.KnownMapModification>;

		// Events:
		KnownUnitsMapChanged: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.Misc.KnownUnitsMapChangedEventArgs>>;
	}
}
//#endregion

//#region SettlementMinimapData
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementMinimapData
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Fields:
		static readonly UnknownCellColor: number;

		// Properties:
		readonly ReadyForRender: boolean;
		readonly HasChanges: boolean;

		// Methods:
		Initialize(): void;

		UpdateOnGameTick(): void;

		GetMinimapPixels(): number[];
	}
}
//#endregion

//#region SettlementNameModule
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementNameModule
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		readonly CurrentPlayerNames: HordeClassLibrary.World.Settlements.Modules.SettlementNameModule.PlayerNames;
		readonly AllPlayerNames: HordeClassLibrary.World.Settlements.Modules.SettlementNameModule.PlayerNames;
	}
}
//#endregion

//#region SettlementNameModule.PlayerNames
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementNameModule {
	class PlayerNames extends System.Object {

		// Constructors:
		constructor(
			defaultName: string | null
		);

		// Properties:
		readonly DefaultName: string;
		readonly DefaultNameAsArray: string[];
		readonly Names: System.Collections.Generic.IEnumerable<string>;
		readonly MultiLine: string;
	}
}
//#endregion

//#region SettlementPopulationCensus
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementPopulationCensus
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			model: HordeClassLibrary.World.Settlements.Models.SettlementPopulationCensusModel | null
		);

		// Fields:
		static readonly DefaultOneSalarySize: HordeClassLibrary.World.Simple.ResourcesAmount;
		static readonly DefaultTaxFactor: HordeClassLibrary.World.Simple.ResourcesAmount;
		static readonly DefaultTitheFactor: HordeClassLibrary.World.Simple.ResourcesAmount;
		static readonly /* const */ DefaultTaxAndSalaryUpdatePeriod: number; // = 9000

		// Properties:
		readonly PopulationTerritory: number[];
		readonly BusyPeople: number;
		readonly ReservedPeople: HordeClassLibrary.World.Settlements.Modules.Misc.ReservedPeople;
		readonly BusyAndReservedPeople: number;
		readonly PeoplePotentialByHouses: number;
		readonly PeoplePotentialByTerritory: number;
		readonly MaxPeople: number;
		readonly TotalSalarySlots: number;
		readonly IsPopulationGrowth: boolean;
		readonly PopulationGrowth: number;
		readonly LackOfPeople: boolean;
		readonly PopulationTerritoryArea: number;
		readonly OneSalarySize: HordeClassLibrary.World.Simple.ResourcesAmount;
		readonly MustRunTaxAndSalaryUpdate: boolean;
		readonly TicksToNextTaxAndSalary: number;

		// Methods:
		static GetDefaultPeopleIncomeLevels(): System.Collections.Generic.List<HordeClassLibrary.World.Settlements.Modules.Misc.PeopleIncomeLevel>;

		GetTaxAmount(): HordeClassLibrary.World.Simple.ResourcesAmount;

		GetSalaryAmount(): HordeClassLibrary.World.Simple.ResourcesAmount;

		GetPeopleIncomePeriod(
			/*out*/ incomeLevelNum: number
		): number;

		CheckIncomePeopleLimits(
			incomeLevelNum: number
		): System.ValueTuple<boolean, boolean>;
	}
}
//#endregion

//#region SettlementProduction
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementProduction
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		DevelopmentLevel: number;
		readonly BuildingSites: HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection;
		readonly DevelopmentLevelSpeedFactors: System.Collections.Generic.List<number>;

		// Methods:
		static GetDefaultDevelopmentLevelSpeedFactors(): System.Collections.Generic.List<number>;

		UpdateOnGameTick(): void;

		GetSpeedupFactor(
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): number;

		GetOneProduceContributionTime(
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			producersCount?: number /* = 1 */
		): number;

		GetTotalProductionTime(
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			producersCount?: number /* = 1 */
		): number;

		GetOneProduceContributionCost(
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			producersCount?: number /* = 1 */
		): HordeClassLibrary.World.Simple.ResourcesAmountF;

		EstimateTotalBuildTime(
			productUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): number;

		GetOneRepairContributionTime(
			repairedUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			repairersCount?: number /* = 1 */
		): number;

		GetTotalRepairTime(
			repairedUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			repairersCount?: number /* = 1 */
		): number;

		GetOneRepairContributionCost(
			repairedUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			repairersCount?: number /* = 1 */
		): HordeClassLibrary.World.Simple.ResourcesAmountF;

		CountTrainingInProgressOfType(
			reqCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): number;

		RegisterUnitTrainingInProgress(
			motionProduce: HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionProduce | null
		): void;

		UnregisterTrainingInProgressUnit(
			motionProduce: HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionProduce | null
		): void;

		CountProducingNowUnits(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): number;
	}
}
//#endregion

//#region SettlementResources
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementResources
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			resources: HordeClassLibrary.World.Simple.ResourcesAmount | null
		);

		// Properties:
		Metal: number;
		Gold: number;
		Lumber: number;
		FreePeople: number;
		readonly Bonus: HordeClassLibrary.World.Settlements.Modules.Misc.ResourcesBonus;

		// Methods:
		IsEnoughResources(
			required: HordeClassLibrary.World.Simple.ResourcesAmount | null
		): boolean;

		GetCopy(): HordeClassLibrary.World.Simple.ResourcesAmount;

		AddResources(
			amount: HordeClassLibrary.World.Simple.ResourcesAmount | null,
			safe?: boolean /* = false */
		): void;

		TakeResources(
			amount: HordeClassLibrary.World.Simple.ResourcesAmount | null
		): void;

		TakeResourcesIfEnough(
			amount: HordeClassLibrary.World.Simple.ResourcesAmount | null
		): boolean;

		SetResources(
			amount: HordeClassLibrary.World.Simple.ResourcesAmount | null
		): void;

		// Events:
		AmountChanged: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementResources.AmountChangedEventArgs>>;
	}
}
//#endregion

//#region SettlementResources.AmountChangedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementResources {
	class AmountChangedEventArgs
		extends System.EventArgs
	{
		// Constructors:
		constructor();

		// Properties:
		NewValue: HordeClassLibrary.World.Simple.ResourcesAmount;
	}
}
//#endregion

//#region SettlementTechTree
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementTechTree
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		readonly AvailableProducts: HordeClassLibrary.World.Settlements.Modules.Misc.UnitProducersMap;
		readonly HypotheticalProducts: HordeClassLibrary.World.Settlements.Modules.Misc.HypotheticalProductsCollection;
		readonly RequirementsSatisfiedProducts: HordeClassLibrary.World.Settlements.Modules.Misc.UnitConfigsSet;

		// Methods:
		UnitDiscovered(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		HasUnmetRequirements(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		GetUnmetRequirements(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): System.Collections.Generic.HashSet<HordeClassLibrary.HordeContent.Configs.Units.UnitConfig>;
	}
}
//#endregion

//#region SettlementUnits
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementUnits
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
		implements
			System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Objects.Units.Unit>,
			System.Collections.IEnumerable
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		readonly Count: number;
		readonly Professions: HordeClassLibrary.World.Settlements.Modules.SettlementUnitsProfessionCenter;
		readonly CombatObserver: HordeClassLibrary.World.Settlements.Modules.SettlementUnitsCombatObserver;
		readonly BuildingInProgressObserver: HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver;

		// Methods:
		UpdateAfterGameTick(): void;

		CreateProductUnit(
			parameters: HordeClassLibrary.World.Objects.Units.ProducedUnitParameters | null
		): HordeClassLibrary.World.Objects.Units.Unit;

		SpawnUnit(
			parameters: HordeClassLibrary.World.Objects.Units.SpawnUnitParameters | null,
			silent?: boolean /* = false */
		): HordeClassLibrary.World.Objects.Units.Unit;

		ReplaceUnit(
			parameters: HordeClassLibrary.World.Objects.Units.ReplaceUnitParameters | null
		): HordeClassLibrary.World.Objects.Units.Unit;

		DeleteUnit(
			parameters: HordeClassLibrary.World.Objects.Units.DeleteUnitParameters | null
		): boolean;

		CreateDummyUnit(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): HordeClassLibrary.World.Objects.Units.Unit;

		GetProductConfigByUid(
			producerCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			productUid: string | null
		): HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;

		GetById(
			id: number
		): HordeClassLibrary.World.Objects.Units.Unit;

		GetCastleOrAnyUnit(): HordeClassLibrary.World.Objects.Units.Unit;

		GetEnumerator(): System.Collections.Generic.IEnumerator<HordeClassLibrary.World.Objects.Units.Unit>;

		GetEnumerator(): System.Collections.IEnumerator;

		// Events:
		UnitsInitialized: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsInitializedEventArgs>>;
		UnitsFullyInitialized: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsFullyInitializedEventArgs>>;
		UnitsListChanged: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsListChangedEventArgs>>;
		UnitProduced: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitProducedEventArgs>>;
		UnitSpawned: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitSpawnedEventArgs>>;
		UnitReplaced: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitReplacedEventArgs>>;
		UnitDeletion: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitDeletionEventArgs>>;
		UnitDeathEvent: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitDeathEventArgs>>;
		UnitDummyStateChangedEvent: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitDummyStateChangedEventArgs>>;
		UnitOwnerChangedEvent: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitOwnerChangedEventArgs>>;
		UnitHealthChanged: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitHealthChangedEventArgs>>;
		UnitOrderChanged: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitOrderChangedEventArgs>>;
		UnitLifeStateChanged: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitLifeStateChangedEventArgs>>;
		UnitBuildingComplete: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitBuildingCompleteEventArgs>>;
		UnitMovedToCell: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.UnitMovedToCellEventArgs>>;
		UnitCauseDamage: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.CauseDamageEventArgs>>;
		UnitTakeDamage: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.TakeDamageEventArgs>>;
		UnitTakeDamageByUnknownSource: EventSource<System.EventHandler<HordeClassLibrary.UnitComponents.EventArgs.TakeDamageByUnknownSourceEventArgs>>;
	}
}
//#endregion

//#region SettlementUnits.UnitsInitializedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementUnits {
	class /* struct */ UnitsInitializedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsInitializedEventArgs>
	{
		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementUnits.UnitsFullyInitializedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementUnits {
	class /* struct */ UnitsFullyInitializedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsFullyInitializedEventArgs>
	{
		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementUnits.UnitsListChangedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementUnits {
	class /* struct */ UnitsListChangedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsListChangedEventArgs>
	{
		// Constructors:
		constructor(
			Unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			IsAdded: boolean
		);

		// Properties:
		Unit: HordeClassLibrary.World.Objects.Units.Unit;
		IsAdded: boolean;
		readonly IsRemoved: boolean;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementUnits.UnitProducedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementUnits {
	class /* struct */ UnitProducedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitProducedEventArgs>
	{
		// Constructors:
		constructor(
			Unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			ProducerUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		Unit: HordeClassLibrary.World.Objects.Units.Unit;
		ProducerUnit: HordeClassLibrary.World.Objects.Units.Unit;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementUnits.UnitSpawnedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementUnits {
	class /* struct */ UnitSpawnedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitSpawnedEventArgs>
	{
		// Constructors:
		constructor(
			Unit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		Unit: HordeClassLibrary.World.Objects.Units.Unit;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementUnits.UnitReplacedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementUnits {
	class /* struct */ UnitReplacedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitReplacedEventArgs>
	{
		// Constructors:
		constructor(
			OldUnit: HordeClassLibrary.World.Objects.Units.Unit | null,
			NewUnit: HordeClassLibrary.World.Objects.Units.Unit | null
		);

		// Properties:
		OldUnit: HordeClassLibrary.World.Objects.Units.Unit;
		NewUnit: HordeClassLibrary.World.Objects.Units.Unit;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementUnitsCombatObserver
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementUnitsCombatObserver extends System.Object {

		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			settlementUnits: HordeClassLibrary.World.Settlements.Modules.SettlementUnits | null
		);

		// Methods:
		HandleAddedUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			silent?: boolean /* = false */
		): void;

		HandleRemovedUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			silent?: boolean /* = false */
		): void;

		TryRegisterReadyToCombatUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			silent?: boolean /* = false */
		): void;

		TryUnregisterReadyToCombatUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null,
			silent?: boolean /* = false */
		): void;

		IsUnitReadyToCombat(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		TryRegisterNearDeathUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		TryUnregisterNearDeathUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		// Events:
		CombatUnitsListChanged: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementUnitsCombatObserver.CombatUnitsListChangedEventArgs>>;
	}
}
//#endregion

//#region SettlementUnitsCombatObserver.CombatUnitsListChangedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementUnitsCombatObserver {
	class /* struct */ CombatUnitsListChangedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementUnitsCombatObserver.CombatUnitsListChangedEventArgs>
	{
		// Constructors:
		constructor(
			Unit: HordeClassLibrary.World.Objects.Units.Unit | null,
			IsAdded: boolean
		);

		// Properties:
		Unit: HordeClassLibrary.World.Objects.Units.Unit;
		IsAdded: boolean;
		readonly IsRemoved: boolean;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region SettlementUnitsProfessionCenter
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementUnitsProfessionCenter extends System.Object {

		// Constructors:
		constructor(
			settlementUnits: HordeClassLibrary.World.Settlements.Modules.SettlementUnits | null
		);

		// Properties:
		readonly ChangesCounter: number;
		readonly BySpecification: System.Collections.Generic.IReadOnlyDictionary<HordeClassLibrary.UnitComponents.Enumerations.UnitSpecification, HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry>;
		readonly MainBuildings: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly Barracks: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly Factories: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly Stables: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly Sawmills: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly MetalStocks: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly Workers: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly AllUnitsExceptPassive: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly ProducingUnits: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly ProducingBuildings: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly ActiveBuildings: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly DevelopmentBoosterBuildings: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly MaxGrowthSpeedIncreaseBuildings: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly FreeWorkers: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
		readonly Unarmed: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;

		// Methods:
		Initialize(): void;

		Deinitialize(): void;

		TryGetBySpecification(
			specification: HordeClassLibrary.UnitComponents.Enumerations.UnitSpecification,
			/*out*/ professionEntry: HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry | null
		): boolean;

		CountUnitsOfType(
			reqCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): number;

		CountUnitsWithSpecification(
			specification: HordeClassLibrary.UnitComponents.Enumerations.UnitSpecification
		): number;
	}
}
//#endregion

//#region SettlementVision
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class SettlementVision
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		readonly FogOfWar: HordeClassLibrary.World.Settlements.Modules.Vision.FogOfWarVision;
		readonly ForestVision: HordeClassLibrary.World.Settlements.Modules.Vision.ForestVision;
		readonly VisionModules: System.Collections.Immutable.ImmutableArray<HordeClassLibrary.World.Settlements.Modules.Vision.ASettlementVisionModule>;

		// Methods:
		UpdateOnGameTick(): void;

		CanSeeUnit(
			u: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null
		): boolean;

		CanSeeUnit(
			u: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null,
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): boolean;

		CanSeeUnit(
			u: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			ignoreFog?: boolean /* = false */
		): boolean;

		CanSeeUnitExt(
			u: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			ignoreFog?: boolean /* = false */
		): HordeClassLibrary.UnitComponents.Enumerations.UnitVisibility;

		// Events:
		VisionChanged: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementVision.VisionChangedEventArgs>>;
	}
}
//#endregion

//#region SettlementVision.VisionChangedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.SettlementVision {
	class /* struct */ VisionChangedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.SettlementVision.VisionChangedEventArgs>
	{
		// Constructors:
		constructor(
			Region: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		);

		// Properties:
		Region: HordeResurrection.Basic.Primitives.Geometry.Rect2D;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region StandAloneModule
declare namespace HordeClassLibrary.World.Settlements.Modules {
	class StandAloneModule
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Properties:
		readonly IsStandAlone: boolean;

		// Methods:
		SetNotAlone(): void;

		SetStandAlone(): void;
	}
}
//#endregion

//#region ASettlementVisionModule
declare namespace HordeClassLibrary.World.Settlements.Modules.Vision {
	abstract class ASettlementVisionModule
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Methods:
		UpdateOnGameTick(): void;

		ExploreByUnitsOf(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			raiseGeneralEvent?: boolean /* = false */
		): boolean;

		HideByUnitsOf(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			raiseGeneralEvent?: boolean /* = false */
		): boolean;

		IsCellVisible(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region FogOfWarVision
declare namespace HordeClassLibrary.World.Settlements.Modules.Vision {
	class FogOfWarVision
		extends HordeClassLibrary.World.Settlements.Modules.Vision.ASettlementVisionModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			vision: HordeClassLibrary.World.Settlements.Modules.SettlementVision | null
		);

		// Properties:
		readonly InitializationFrame: number;
		readonly AntiFogLanterns: HordeClassLibrary.World.Settlements.FogOfWar.AntiFogLanternCollection;
		readonly DefaultFog: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell;
		readonly DerivativeFog: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell;

		// Methods:
		InitializeFogArrays(
			defaultFog: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell,
			derivativeFog: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell,
			raiseEvent?: boolean /* = true */
		): void;

		ReinitializeFogArrays(
			raiseEvent?: boolean /* = true */
		): void;

		Explore(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			raiseEvent?: boolean /* = true */
		): boolean;

		Hide(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			raiseEvent?: boolean /* = true */
		): boolean;

		AddEasing(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			raiseEvent?: boolean /* = true */
		): void;

		IsNoFogAt(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		IsDiscovered(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		IsRegionDiscovered(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): boolean;

		HasOneNoFogInRegion(
			rect: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): boolean;

		GetFogInCell(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell;

		GetSecondaryFog(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.World.Settlements.FogOfWar.SecondaryFogOfWarInCell;

		GetFogColor(
			fog: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell
		): number;

		// Events:
		FogChanged: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.Vision.FogOfWarVision.FogChangedEventArgs>>;
	}
}
//#endregion

//#region FogOfWarVision.FogChangedEventArgs
declare namespace HordeClassLibrary.World.Settlements.Modules.Vision.FogOfWarVision {
	class /* struct */ FogChangedEventArgs extends System.ValueType
		implements System.IEquatable<HordeClassLibrary.World.Settlements.Modules.Vision.FogOfWarVision.FogChangedEventArgs>
	{
		// Constructors:
		constructor(
			Region: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			Reinitilization: boolean
		);

		// Properties:
		Region: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		Reinitilization: boolean;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region ForestVision
declare namespace HordeClassLibrary.World.Settlements.Modules.Vision {
	class ForestVision
		extends HordeClassLibrary.World.Settlements.Modules.Vision.ASettlementVisionModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null,
			vision: HordeClassLibrary.World.Settlements.Modules.SettlementVision | null
		);
	}
}
//#endregion

//#region IRuleContextsCollection
declare namespace HordeClassLibrary.World.Settlements.Rules {
	interface IRuleContextsCollection {

		// Methods:
		ProcessNewContext(
			context: HordeClassLibrary.World.Objects.Rules.ARuleContext | null
		): void;

		RemoveAll(): void;

		UpdateAfterGameTick(): void;
	}
	/** TypeScript type stub for .Net interface */
	abstract class IRuleContextsCollection {}
}
//#endregion

//#region RulesOverseer
declare namespace HordeClassLibrary.World.Settlements.Rules {
	class RulesOverseer
		extends HordeClassLibrary.World.Settlements.Modules.ASettlementModule
	{
		// Constructors:
		constructor(
			owner: HordeClassLibrary.World.Settlements.Settlement | null
		);

		// Methods:
		UpdateAfterGameTick(): void;

		AddRule(
			ruleCfg: HordeClassLibrary.HordeContent.Configs.Rules.RuleConfig | null
		): void;

		RemoveAllRules(): void;

		GetExistenceRule(): HordeClassLibrary.World.Settlements.Rules.ExistenceRuleWrapper;

		GetFreePeopleLimit(): number;

		CanProduceUnit(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): boolean;

		GetCurrentLimitForUnit(
			uCfg: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null
		): number | null;
	}
}
//#endregion

//#region ExistenceRuleWrapper
declare namespace HordeClassLibrary.World.Settlements.Rules {
	class ExistenceRuleWrapper extends System.Object {

		// Constructors:
		constructor(
			ruleInstruction: HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ExistenceRuleInstruction | null
		);

		// Properties:
		readonly AlmostDefeatCondition: HordeClassLibrary.World.Settlements.Existence.AlmostDefeatCondition;
		readonly TotalDefeatCondition: HordeClassLibrary.World.Settlements.Existence.TotalDefeatCondition;
		readonly VictoryCondition: HordeClassLibrary.World.Settlements.Existence.VictoryCondition;
	}
}
//#endregion

//#region Settlement
declare namespace HordeClassLibrary.World.Settlements {
	class Settlement extends System.Object {

		// Constructors:
		constructor(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null,
			model: HordeClassLibrary.World.Settlements.Models.SettlementModel | null,
			number?: number /* = 0 */
		);

		// Properties:
		readonly Uid: string;
		readonly Force: HordeClassLibrary.HordeContent.Configs.Army.Force;
		readonly TownName: string;
		readonly LeaderName: string;
		readonly IsDummy: boolean;
		readonly ColorsTab: any;
		readonly ColorsTabDecays: any;
		readonly SettlementColor: HordeResurrection.Basic.Primitives.HordeColor;
		readonly SettlementMinimapColor: number;
		readonly Nation: HordeClassLibrary.World.Nation;
		readonly Scena: HordeClassLibrary.World.ScenaComponents.Scena;
		readonly PrivateRandomizer: HordeResurrection.Basic.Primitives.HordeRandomizer;
		readonly Events: HordeClassLibrary.World.Settlements.Modules.SettlementEvents;
		readonly Units: HordeClassLibrary.World.Settlements.Modules.SettlementUnits;
		readonly DummyUnits: System.Collections.Generic.IEnumerable<HordeClassLibrary.World.Objects.Units.Unit>;
		readonly Resources: HordeClassLibrary.World.Settlements.Modules.SettlementResources;
		readonly Census: HordeClassLibrary.World.Settlements.Modules.SettlementPopulationCensus;
		readonly Diplomacy: HordeClassLibrary.World.Settlements.Modules.SettlementDiplomacy;
		readonly TechTree: HordeClassLibrary.World.Settlements.Modules.SettlementTechTree;
		readonly Production: HordeClassLibrary.World.Settlements.Modules.SettlementProduction;
		readonly RulesOverseer: HordeClassLibrary.World.Settlements.Rules.RulesOverseer;
		readonly Vision: HordeClassLibrary.World.Settlements.Modules.SettlementVision;
		readonly Map: HordeClassLibrary.World.Settlements.Modules.SettlementMap;
		readonly Minimap: HordeClassLibrary.World.Settlements.Modules.SettlementMinimapData;
		readonly Existence: HordeClassLibrary.World.Settlements.Modules.SettlementExistence;
		readonly StandAlone: HordeClassLibrary.World.Settlements.Modules.StandAloneModule;
		readonly NameModule: HordeClassLibrary.World.Settlements.Modules.SettlementNameModule;
		readonly ProductHelper: HordeClassLibrary.World.Settlements.Helpers.UnitProductHelper;
		readonly Messages: HordeClassLibrary.World.Simple.GameMessagesCollection;

		// Methods:
		InitializeMaps(): void;

		InitializeModules(): void;

		Deinitialize(): void;

		UpdateData(): void;

		UpdateScience(): void;

		UtterInterfaceSound(
			sound: HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums.InterfaceFromSettlementSounds
		): void;
	}
}
//#endregion

//#region SettlementConstants
declare namespace HordeClassLibrary.World.Settlements {
	class SettlementConstants extends System.Object {

		// Constructors:
		constructor();

		// Methods:
		static GetMinimapColor(
			n: number
		): HordeResurrection.Basic.Primitives.HordeColor;

		static SetMinimapColors(
			colors: number[] | null
		): void;
	}
}
//#endregion

//#region TerritoryMapData
declare namespace HordeClassLibrary.World.Settlements.Territory {
	abstract class TerritoryMapData extends System.EnumFlags {
		/** TerritoryMapData.None = 0 */ static readonly None: TerritoryMapData;
		/** TerritoryMapData.Top = 1 */ static readonly Top: TerritoryMapData;
		/** TerritoryMapData.Right = 2 */ static readonly Right: TerritoryMapData;
		/** TerritoryMapData.Bottom = 4 */ static readonly Bottom: TerritoryMapData;
		/** TerritoryMapData.Left = 8 */ static readonly Left: TerritoryMapData;
		/** TerritoryMapData.AllSidesMask = 15 */ static readonly AllSidesMask: TerritoryMapData;
		/** TerritoryMapData.Active = 16 */ static readonly Active: TerritoryMapData;
		/** TerritoryMapData.CastleOk = 32 */ static readonly CastleOk: TerritoryMapData;
		/** TerritoryMapData.CanBePlaced = 64 */ static readonly CanBePlaced: TerritoryMapData;
		/** TerritoryMapData.CanNotBePlacedMask = 191 */ static readonly CanNotBePlacedMask: TerritoryMapData;
	}
}
//#endregion

//#region TerritoryPlanner
declare namespace HordeClassLibrary.World.Settlements.Territory {
	class TerritoryPlanner extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly Configuration: HordeClassLibrary.World.Settlements.Territory.TerritoryPlannerConfiguration;
		readonly KnownMapChangesObtainer: HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<HordeClassLibrary.World.Settlements.Modules.Misc.KnownMapModification>;

		// Methods:
		Reset(): void;

		Replan(): void;

		ChangeConfiguration(
			workSettlement: HordeClassLibrary.World.Settlements.Settlement | null,
			workUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			checkDistances: boolean
		): void;

		UpdateOnGameTick(): void;

		GetOrCreateTerritory(): HordeClassLibrary.World.Settlements.Territory.TerritoryMapData[][];

		CanBuildAt(
			targetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;
	}
}
//#endregion

//#region TerritoryPlannerConfiguration
declare namespace HordeClassLibrary.World.Settlements.Territory {
	class TerritoryPlannerConfiguration extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly CastleRequired: boolean;
		readonly DistanceCheckRequired: boolean;
		readonly RequiredMask: HordeClassLibrary.World.Settlements.Territory.TerritoryMapData;
	}
}
//#endregion

//#region DiplomacyStatus
declare namespace HordeClassLibrary.World.Simple {
	abstract class DiplomacyStatus extends System.Enum {
		/** DiplomacyStatus.Unknown = 0 */ static readonly Unknown: DiplomacyStatus;
		/** DiplomacyStatus.Neutral = 1 */ static readonly Neutral: DiplomacyStatus;
		/** DiplomacyStatus.Alliance = 2 */ static readonly Alliance: DiplomacyStatus;
		/** DiplomacyStatus.War = 3 */ static readonly War: DiplomacyStatus;
		/** DiplomacyStatus.Suzerain = 4 */ static readonly Suzerain: DiplomacyStatus;
		/** DiplomacyStatus.Vassal = 5 */ static readonly Vassal: DiplomacyStatus;
	}
}
//#endregion

//#region DrawLayer
declare namespace HordeClassLibrary.World.Simple {
	abstract class DrawLayer extends System.Enum {
		/** DrawLayer.Floor = 0 */ static readonly Floor: DrawLayer;
		/** DrawLayer.FloorCovering = 1 */ static readonly FloorCovering: DrawLayer;
		/** DrawLayer.Decays = 2 */ static readonly Decays: DrawLayer;
		/** DrawLayer.Units = 3 */ static readonly Units: DrawLayer;
		/** DrawLayer.OpenGates = 4 */ static readonly OpenGates: DrawLayer;
		/** DrawLayer.Bullets = 5 */ static readonly Bullets: DrawLayer;
		/** DrawLayer.Smoke = 6 */ static readonly Smoke: DrawLayer;
		/** DrawLayer.Birds = 7 */ static readonly Birds: DrawLayer;
	}
}
//#endregion

//#region FpsCounter
declare namespace HordeClassLibrary.World.Simple {
	class FpsCounter extends System.Object {

		// Constructors:
		constructor();

		// Fields:
		static readonly /* const */ DefaultRefreshPeriodInSeconds: number; // = 2
		static readonly /* const */ DefaultForceRefreshPeriodInSeconds: number; // = 3
		static readonly /* const */ DefaultMinFramesCountToRefresh: number; // = 10

		// Properties:
		RefreshPeriod: string;
		ForceRefreshPeriod: string;
		MinFramesCountToRefresh: number;
		readonly CurrentFps: number;

		// Methods:
		Update(
			totalTime: string
		): void;

		NextFrame(): void;

		TicksToSeconds(
			ticks: number
		): number;
	}
}
//#endregion

//#region GameLoopCounters
declare namespace HordeClassLibrary.World.Simple {
	class GameLoopCounters extends System.Object {

		// Constructors:
		constructor();

		// Fields:
		static readonly /* const */ UnitsUpdatePeriod: number; // = 2
		static readonly /* const */ TilesUpdatePeriod: number; // = 10

		// Properties:
		readonly ScenaFrame: number;
		readonly UnitsFrame: number;
		readonly MustRunUnitsUpdate: boolean;
		readonly TilesFrame: number;
		readonly MustRunTilesUpdate: boolean;

		// Methods:
		UpdateOnGameTick(): void;
	}
}
//#endregion

//#region GameMessage
declare namespace HordeClassLibrary.World.Simple {
	class GameMessage extends System.Object
		implements System.IEquatable<HordeClassLibrary.World.Simple.GameMessage>
	{
		// Constructors:
		constructor(
			Text: string | null,
			Color?: HordeResurrection.Basic.Primitives.HordeColor | null /* = null */,
			Sound?: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog | null /* = null */,
			SoundSection?: string | null /* = null */
		);

		// Fields:
		static readonly ErrorColor: HordeResurrection.Basic.Primitives.HordeColor;

		// Properties:
		Text: string;
		Color: HordeResurrection.Basic.Primitives.HordeColor;
		Sound: HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog;
		SoundSection: string;

		// Methods:
		static CreateWithNoSound(
			text: string | null,
			color?: HordeResurrection.Basic.Primitives.HordeColor | null /* = null */
		): HordeClassLibrary.World.Simple.GameMessage;

		static CreateWithDefaultSound(
			text: string | null,
			color?: HordeResurrection.Basic.Primitives.HordeColor | null /* = null */
		): HordeClassLibrary.World.Simple.GameMessage;
	}
}
//#endregion

//#region GameMessagesCollection
declare namespace HordeClassLibrary.World.Simple {
	class GameMessagesCollection extends System.Object {

		// Constructors:
		constructor();

		// Methods:
		ForEach(
			callback: System.Action_1<HordeClassLibrary.World.Simple.GameMessage> | System.Action | null
		): void;

		AddMessage(
			message: HordeClassLibrary.World.Simple.GameMessage | null
		): void;

		ClearMessages(): void;
	}
}
//#endregion

//#region ResourcesAmount
declare namespace HordeClassLibrary.World.Simple {
	class ResourcesAmount extends System.Object {

		// Constructors:
		constructor();

		constructor(
			gold: number,
			metal: number,
			lumber: number,
			people: number
		);

		constructor(
			other: HordeClassLibrary.World.Simple.ResourcesAmount | null
		);

		constructor(
			citadelResources: HordeClassLibrary.Miscellaneous.Citadel.Structures.Other.CitadelResourcesAmount | null
		);

		// Fields:
		static readonly NoResources: HordeClassLibrary.World.Simple.ResourcesAmount;
		static readonly InfiniteResources: HordeClassLibrary.World.Simple.ResourcesAmount;

		// Properties:
		Gold: number;
		Metal: number;
		Lumber: number;
		People: number;
		readonly IsNone: boolean;
		readonly HasNegativeValue: boolean;

		// Methods:
		Copy(): HordeClassLibrary.World.Simple.ResourcesAmount;

		CopyWith(
			gold?: number | null /* = null */,
			metal?: number | null /* = null */,
			lumber?: number | null /* = null */,
			people?: number | null /* = null */
		): HordeClassLibrary.World.Simple.ResourcesAmount;

		Add(
			amount: HordeClassLibrary.World.Simple.ResourcesAmount | null,
			safe?: boolean /* = false */
		): void;

		Subtract(
			amount: HordeClassLibrary.World.Simple.ResourcesAmount | null
		): void;

		Update(
			amount: HordeClassLibrary.World.Simple.ResourcesAmount | null
		): void;

		BoundTo(
			minValue?: number /* = 0 */,
			maxValue?: number /* = 2147483647 */
		): HordeClassLibrary.World.Simple.ResourcesAmount;

		BoundTo(
			minAmount?: HordeClassLibrary.World.Simple.ResourcesAmount | null /* = null */,
			maxAmount?: HordeClassLibrary.World.Simple.ResourcesAmount | null /* = null */
		): HordeClassLibrary.World.Simple.ResourcesAmount;

		IsEnough(
			required: HordeClassLibrary.World.Simple.ResourcesAmount | null
		): boolean;

		FromCitadelResources(
			citadelResources: HordeClassLibrary.Miscellaneous.Citadel.Structures.Other.CitadelResourcesAmount | null
		): void;

		Equals(
			other: HordeClassLibrary.World.Simple.ResourcesAmount | null
		): boolean;

		Equals(
			citadelRes: HordeClassLibrary.Miscellaneous.Citadel.Structures.Other.CitadelResourcesAmount | null
		): boolean;
	}
}
//#endregion

//#region ResourcesAmountF
declare namespace HordeClassLibrary.World.Simple {
	class ResourcesAmountF extends System.Object {

		// Constructors:
		constructor();

		constructor(
			gold: number,
			metal: number,
			lumber: number,
			people: number
		);

		constructor(
			resourcesAmount: HordeClassLibrary.World.Simple.ResourcesAmount | null
		);

		constructor(
			resourcesAmount: HordeClassLibrary.World.Simple.ResourcesAmountF | null
		);

		// Fields:
		static readonly NoResources: HordeClassLibrary.World.Simple.ResourcesAmountF;

		// Properties:
		Gold: number;
		Metal: number;
		Lumber: number;
		People: number;

		// Methods:
		CeilingToResourcesAmount(
			prevRemainder: HordeClassLibrary.World.Simple.ResourcesAmountF | null,
			/*out*/ newRemainer: HordeClassLibrary.World.Simple.ResourcesAmountF | null
		): HordeClassLibrary.World.Simple.ResourcesAmount;
	}
}
//#endregion

//#region TileMask
declare namespace HordeClassLibrary.World.Simple {
	class /* struct */ TileMask extends System.ValueType {

		// Constructors:
		constructor(
			quadType: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileQuadType | null,
			payload: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TilePayload | null
		);

		constructor(
			tCfg: HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig | null
		);

		// Properties:
		LeftUp: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileQuadType | null;
		RightUp: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileQuadType | null;
		LeftDown: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileQuadType | null;
		RightDown: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileQuadType | null;
		Payload: HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TilePayload | null;

		// Methods:
		IsMatch(
			tCfg: HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig | null
		): boolean;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region Types shorthand
// ----------------------------------------------------- //
// ---------========= Types shorthand =========--------- //
// ----------------------------------------------------- //
/*
export const HordeVersion = HordeClassLibrary.Basic.GameVersion.HordeVersion;
export type HordeVersion = HordeClassLibrary.Basic.GameVersion.HordeVersion;
export const IHasId = HordeClassLibrary.Basic.Interfaces.IHasId;
export type IHasId = HordeClassLibrary.Basic.Interfaces.IHasId;
export const AllContent = HordeClassLibrary.HordeContent.AllContent;
export type AllContent = HordeClassLibrary.HordeContent.AllContent;
export const BulletFactoriesLibrary = HordeClassLibrary.HordeContent.BulletFactoriesLibrary;
export type BulletFactoriesLibrary = HordeClassLibrary.HordeContent.BulletFactoriesLibrary;
export const AConfigsBookAny = HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBookAny;
export type AConfigsBookAny = HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBookAny;
export const AConfigsBook = HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook;
export type AConfigsBook<TConfig> = HordeClassLibrary.HordeContent.ConfigBooks.AConfigsBook<TConfig>;
export const BulletsBook = HordeClassLibrary.HordeContent.ConfigBooks.BulletsBook;
export type BulletsBook = HordeClassLibrary.HordeContent.ConfigBooks.BulletsBook;
export const CitadelArmiesBook = HordeClassLibrary.HordeContent.ConfigBooks.CitadelArmiesBook;
export type CitadelArmiesBook = HordeClassLibrary.HordeContent.ConfigBooks.CitadelArmiesBook;
export const FontsBook = HordeClassLibrary.HordeContent.ConfigBooks.FontsBook;
export type FontsBook = HordeClassLibrary.HordeContent.ConfigBooks.FontsBook;
export const ForcesBook = HordeClassLibrary.HordeContent.ConfigBooks.ForcesBook;
export type ForcesBook = HordeClassLibrary.HordeContent.ConfigBooks.ForcesBook;
export const GuiParamsBook = HordeClassLibrary.HordeContent.ConfigBooks.GuiParamsBook;
export type GuiParamsBook = HordeClassLibrary.HordeContent.ConfigBooks.GuiParamsBook;
export const MindCharactersBook = HordeClassLibrary.HordeContent.ConfigBooks.MindCharactersBook;
export type MindCharactersBook = HordeClassLibrary.HordeContent.ConfigBooks.MindCharactersBook;
export const RulesBook = HordeClassLibrary.HordeContent.ConfigBooks.RulesBook;
export type RulesBook = HordeClassLibrary.HordeContent.ConfigBooks.RulesBook;
export const SoundEffectsBook = HordeClassLibrary.HordeContent.ConfigBooks.SoundEffectsBook;
export type SoundEffectsBook = HordeClassLibrary.HordeContent.ConfigBooks.SoundEffectsBook;
export const StringsBook = HordeClassLibrary.HordeContent.ConfigBooks.StringsBook;
export type StringsBook = HordeClassLibrary.HordeContent.ConfigBooks.StringsBook;
export const UnitCommandsBook = HordeClassLibrary.HordeContent.ConfigBooks.UnitCommandsBook;
export type UnitCommandsBook = HordeClassLibrary.HordeContent.ConfigBooks.UnitCommandsBook;
export const UnitConfigsBook = HordeClassLibrary.HordeContent.ConfigBooks.UnitConfigsBook;
export type UnitConfigsBook = HordeClassLibrary.HordeContent.ConfigBooks.UnitConfigsBook;
export const IConfigurableCatalogsBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract.IConfigurableCatalogsBook;
export type IConfigurableCatalogsBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract.IConfigurableCatalogsBook;
export const ACatalogsBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract.ACatalogsBook;
export type ACatalogsBook<TConfig> = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract.ACatalogsBook<TConfig>;
export const AExternalResourcesInfoBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract.AExternalResourcesInfoBook;
export type AExternalResourcesInfoBook<TConfig> = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Abstract.AExternalResourcesInfoBook<TConfig>;
export const SoundCatalogsBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Audio.SoundCatalogsBook;
export type SoundCatalogsBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Audio.SoundCatalogsBook;
export const SoundResourcesBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Audio.SoundResourcesBook;
export type SoundResourcesBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Audio.SoundResourcesBook;
export const AnimationAtlasesBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Graphics.AnimationAtlasesBook;
export type AnimationAtlasesBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Graphics.AnimationAtlasesBook;
export const AnimationCatalogsBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Graphics.AnimationCatalogsBook;
export type AnimationCatalogsBook = HordeClassLibrary.HordeContent.ConfigBooks.ViewResources.Graphics.AnimationCatalogsBook;
export const VisualEffectsBook = HordeClassLibrary.HordeContent.ConfigBooks.VisualEffectsBook;
export type VisualEffectsBook = HordeClassLibrary.HordeContent.ConfigBooks.VisualEffectsBook;
export const ConfigsContainerData = HordeClassLibrary.HordeContent.ConfigBoxes.ConfigsContainerData;
export type ConfigsContainerData = HordeClassLibrary.HordeContent.ConfigBoxes.ConfigsContainerData;
export const AnimationAtlasData = HordeClassLibrary.HordeContent.ConfigBoxes.Implementation.AnimationAtlasData;
export type AnimationAtlasData = HordeClassLibrary.HordeContent.ConfigBoxes.Implementation.AnimationAtlasData;
export const UnitConfigsContainerData = HordeClassLibrary.HordeContent.ConfigBoxes.Implementation.UnitConfigsContainerData;
export type UnitConfigsContainerData = HordeClassLibrary.HordeContent.ConfigBoxes.Implementation.UnitConfigsContainerData;
export const PreConfigContentType = HordeClassLibrary.HordeContent.ConfigBoxes.PreConfigContentType;
export type PreConfigContentType = HordeClassLibrary.HordeContent.ConfigBoxes.PreConfigContentType;
export const AConfig = HordeClassLibrary.HordeContent.Configs.AConfig;
export type AConfig = HordeClassLibrary.HordeContent.Configs.AConfig;
export const Force = HordeClassLibrary.HordeContent.Configs.Army.Force;
export type Force = HordeClassLibrary.HordeContent.Configs.Army.Force;
export const ForceTechnologyMap = HordeClassLibrary.HordeContent.Configs.Army.ForceTechnologyMap;
export type ForceTechnologyMap = HordeClassLibrary.HordeContent.Configs.Army.ForceTechnologyMap;
export const BulletConfig = HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
export type BulletConfig = HordeClassLibrary.HordeContent.Configs.Bullets.BulletConfig;
export const ABulletSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams;
export type ABulletSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ABulletSpecialParams;
export const BallistaArrowSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.BallistaArrowSpecialParams;
export type BallistaArrowSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.BallistaArrowSpecialParams;
export const BrokenFragmentSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.BrokenFragmentSpecialParams;
export type BrokenFragmentSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.BrokenFragmentSpecialParams;
export const CatapultBombSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.CatapultBombSpecialParams;
export type CatapultBombSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.CatapultBombSpecialParams;
export const FireArrowSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.FireArrowSpecialParams;
export type FireArrowSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.FireArrowSpecialParams;
export const FireballSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.FireballSpecialParams;
export type FireballSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.FireballSpecialParams;
export const FireSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.FireSpecialParams;
export type FireSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.FireSpecialParams;
export const LightningSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.LightningSpecialParams;
export type LightningSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.LightningSpecialParams;
export const LightningStormSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.LightningStormSpecialParams;
export type LightningStormSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.LightningStormSpecialParams;
export const ScriptBulletSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ScriptBulletSpecialParams;
export type ScriptBulletSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.ScriptBulletSpecialParams;
export const SimpleArrowSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.SimpleArrowSpecialParams;
export type SimpleArrowSpecialParams = HordeClassLibrary.HordeContent.Configs.Bullets.SpecialParams.SimpleArrowSpecialParams;
export const CitadelArmy = HordeClassLibrary.HordeContent.Configs.Citadel.CitadelArmy;
export type CitadelArmy = HordeClassLibrary.HordeContent.Configs.Citadel.CitadelArmy;
export const CitadelUnitConfig = HordeClassLibrary.HordeContent.Configs.Citadel.CitadelUnitConfig;
export type CitadelUnitConfig = HordeClassLibrary.HordeContent.Configs.Citadel.CitadelUnitConfig;
export const AConfigsFactory = HordeClassLibrary.HordeContent.Configs.ConfigFactories.AConfigsFactory;
export type AConfigsFactory = HordeClassLibrary.HordeContent.Configs.ConfigFactories.AConfigsFactory;
export const ConfigCreationParams = HordeClassLibrary.HordeContent.Configs.ConfigFactories.ConfigCreationParams;
export type ConfigCreationParams = HordeClassLibrary.HordeContent.Configs.ConfigFactories.ConfigCreationParams;
export const FontConfig = HordeClassLibrary.HordeContent.Configs.Fonts.FontConfig;
export type FontConfig = HordeClassLibrary.HordeContent.Configs.Fonts.FontConfig;
export const SymbolConfig = HordeClassLibrary.HordeContent.Configs.Fonts.SymbolConfig;
export type SymbolConfig = HordeClassLibrary.HordeContent.Configs.Fonts.SymbolConfig;
export const ControlHorizontalAlignment = HordeClassLibrary.HordeContent.Configs.Interface.Controls.Enums.ControlHorizontalAlignment;
export type ControlHorizontalAlignment = HordeClassLibrary.HordeContent.Configs.Interface.Controls.Enums.ControlHorizontalAlignment;
export const ControlVerticalAlignment = HordeClassLibrary.HordeContent.Configs.Interface.Controls.Enums.ControlVerticalAlignment;
export type ControlVerticalAlignment = HordeClassLibrary.HordeContent.Configs.Interface.Controls.Enums.ControlVerticalAlignment;
export const ControlOrientation = HordeClassLibrary.HordeContent.Configs.Interface.Controls.Enums.ControlOrientation;
export type ControlOrientation = HordeClassLibrary.HordeContent.Configs.Interface.Controls.Enums.ControlOrientation;
export const GuiParams = HordeClassLibrary.HordeContent.Configs.Interface.GuiParams;
export type GuiParams = HordeClassLibrary.HordeContent.Configs.Interface.GuiParams;
export const MindCharacterConfig = HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig;
export type MindCharacterConfig = HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig;
export const ARuleInstruction = HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction;
export type ARuleInstruction = HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ARuleInstruction;
export const ExistenceRuleInstruction = HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ExistenceRuleInstruction;
export type ExistenceRuleInstruction = HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ExistenceRuleInstruction;
export const PopulationRuleInstruction = HordeClassLibrary.HordeContent.Configs.Rules.Instructions.PopulationRuleInstruction;
export type PopulationRuleInstruction = HordeClassLibrary.HordeContent.Configs.Rules.Instructions.PopulationRuleInstruction;
export const ProductionLimitInstruction = HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ProductionLimitInstruction;
export type ProductionLimitInstruction = HordeClassLibrary.HordeContent.Configs.Rules.Instructions.ProductionLimitInstruction;
export const UnitsAtSameTimeLimitInstruction = HordeClassLibrary.HordeContent.Configs.Rules.Instructions.UnitsAtSameTimeLimitInstruction;
export type UnitsAtSameTimeLimitInstruction = HordeClassLibrary.HordeContent.Configs.Rules.Instructions.UnitsAtSameTimeLimitInstruction;
export const RuleConfig = HordeClassLibrary.HordeContent.Configs.Rules.RuleConfig;
export type RuleConfig = HordeClassLibrary.HordeContent.Configs.Rules.RuleConfig;
export const SoundEffectConfig = HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
export type SoundEffectConfig = HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundEffectConfig;
export const SoundPlayMode = HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundPlayMode;
export type SoundPlayMode = HordeClassLibrary.HordeContent.Configs.SoundEffects.SoundPlayMode;
export const StringConfig = HordeClassLibrary.HordeContent.Configs.StringConfig;
export type StringConfig = HordeClassLibrary.HordeContent.Configs.StringConfig;
export const UnitConfigsCounter = HordeClassLibrary.HordeContent.Configs.Stuff.UnitConfigsCounter;
export type UnitConfigsCounter = HordeClassLibrary.HordeContent.Configs.Stuff.UnitConfigsCounter;
export const ForcesCounter = HordeClassLibrary.HordeContent.Configs.Stuff.ForcesCounter;
export type ForcesCounter = HordeClassLibrary.HordeContent.Configs.Stuff.ForcesCounter;
export const ConfigTypeInfo = HordeClassLibrary.HordeContent.Configs.Stuff.ConfigTypeInfo;
export type ConfigTypeInfo<TConfig> = HordeClassLibrary.HordeContent.Configs.Stuff.ConfigTypeInfo<TConfig>;
export const ConfigReferenceBase = HordeClassLibrary.HordeContent.Configs.Stuff.References.ConfigReferenceBase;
export type ConfigReferenceBase = HordeClassLibrary.HordeContent.Configs.Stuff.References.ConfigReferenceBase;
export const ConfigReference = HordeClassLibrary.HordeContent.Configs.Stuff.References.ConfigReference;
export type ConfigReference<TConfig> = HordeClassLibrary.HordeContent.Configs.Stuff.References.ConfigReference<TConfig>;
export const ConfigReferencesHelper = HordeClassLibrary.HordeContent.Configs.Stuff.References.ConfigReferencesHelper;
export type ConfigReferencesHelper = HordeClassLibrary.HordeContent.Configs.Stuff.References.ConfigReferencesHelper;
export const ViewResourceReferenceBase = HordeClassLibrary.HordeContent.Configs.Stuff.References.ViewResourceReferenceBase;
export type ViewResourceReferenceBase = HordeClassLibrary.HordeContent.Configs.Stuff.References.ViewResourceReferenceBase;
export const ViewResourceReference = HordeClassLibrary.HordeContent.Configs.Stuff.References.ViewResourceReference;
export type ViewResourceReference<TViewResource> = HordeClassLibrary.HordeContent.Configs.Stuff.References.ViewResourceReference<TViewResource>;
export const WorkerReferenceBase = HordeClassLibrary.HordeContent.Configs.Stuff.References.WorkerReferenceBase;
export type WorkerReferenceBase = HordeClassLibrary.HordeContent.Configs.Stuff.References.WorkerReferenceBase;
export const WorkerReference = HordeClassLibrary.HordeContent.Configs.Stuff.References.WorkerReference;
export type WorkerReference<TWorker> = HordeClassLibrary.HordeContent.Configs.Stuff.References.WorkerReference<TWorker>;
export const TilePayload = HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TilePayload;
export type TilePayload = HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TilePayload;
export const TileQuadType = HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileQuadType;
export type TileQuadType = HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileQuadType;
export const TileSound = HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileSound;
export type TileSound = HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileSound;
export const TileType = HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType;
export type TileType = HordeClassLibrary.HordeContent.Configs.Tiles.Stuff.TileType;
export const TileConfig = HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig;
export type TileConfig = HordeClassLibrary.HordeContent.Configs.Tiles.TileConfig;
export const UnitCommandConfig = HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;
export type UnitCommandConfig = HordeClassLibrary.HordeContent.Configs.UnitCommandConfig;
export const BuildingConfig = HordeClassLibrary.HordeContent.Configs.Units.BuildingConfig;
export type BuildingConfig = HordeClassLibrary.HordeContent.Configs.Units.BuildingConfig;
export const AUnitProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams;
export type AUnitProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.AUnitProfessionParams;
export const CapturableProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.CapturableProfessionParams;
export type CapturableProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.CapturableProfessionParams;
export const CompoundProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.CompoundProfessionParams;
export type CompoundProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.CompoundProfessionParams;
export const HarvesterProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.HarvesterProfessionParams;
export type HarvesterProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.HarvesterProfessionParams;
export const MetalStockProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MetalStockProfessionParams;
export type MetalStockProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MetalStockProfessionParams;
export const MineProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MineProfessionParams;
export type MineProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MineProfessionParams;
export const MovableProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MovableProfessionParams;
export type MovableProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.MovableProfessionParams;
export const ReparableProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.ReparableProfessionParams;
export type ReparableProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.ReparableProfessionParams;
export const SawmillProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.SawmillProfessionParams;
export type SawmillProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.SawmillProfessionParams;
export const UnitProducerProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.UnitProducerProfessionParams;
export type UnitProducerProfessionParams = HordeClassLibrary.HordeContent.Configs.Units.ProfessionParams.UnitProducerProfessionParams;
export const UnitConfig = HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
export type UnitConfig = HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
export const UnitConfigDefaultValues = HordeClassLibrary.HordeContent.Configs.Units.UnitConfigDefaultValues;
export type UnitConfigDefaultValues = HordeClassLibrary.HordeContent.Configs.Units.UnitConfigDefaultValues;
export const UnitTechConfig = HordeClassLibrary.HordeContent.Configs.Units.UnitTechConfig;
export type UnitTechConfig = HordeClassLibrary.HordeContent.Configs.Units.UnitTechConfig;
export const AViewResourcesCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.AViewResourcesCatalog;
export type AViewResourcesCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.AViewResourcesCatalog;
export const ISectionItem = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.CatalogSections.ISectionItem;
export type ISectionItem = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.CatalogSections.ISectionItem;
export const ACatalogsFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.Factory.ACatalogsFactory;
export type ACatalogsFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Abstract.Factory.ACatalogsFactory;
export const AllCatalogFactories = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.AllCatalogFactories;
export type AllCatalogFactories = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.AllCatalogFactories;
export const BuildingSoundsCatalogFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.Factory.BuildingSoundsCatalogFactory;
export type BuildingSoundsCatalogFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.Factory.BuildingSoundsCatalogFactory;
export const SimpleSoundsCatalogFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.Factory.SimpleSoundsCatalogFactory;
export type SimpleSoundsCatalogFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.Factory.SimpleSoundsCatalogFactory;
export const UnitSoundsCatalogFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.Factory.UnitSoundsCatalogFactory;
export type UnitSoundsCatalogFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.Factory.UnitSoundsCatalogFactory;
export const BuildingSoundSections = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums.BuildingSoundSections;
export type BuildingSoundSections = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums.BuildingSoundSections;
export const ChatSoundSections = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums.ChatSoundSections;
export type ChatSoundSections = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums.ChatSoundSections;
export const UncategorizedSoundSections = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums.UncategorizedSoundSections;
export type UncategorizedSoundSections = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums.UncategorizedSoundSections;
export const UnitSoundSections = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums.UnitSoundSections;
export type UnitSoundSections = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums.UnitSoundSections;
export const UnitTraceSoundSections = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums.UnitTraceSoundSections;
export type UnitTraceSoundSections = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SectionEnums.UnitTraceSoundSections;
export const SoundsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog;
export type SoundsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Audio.SoundsCatalog;
export const BaseAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.BaseAnimationsCatalog;
export type BaseAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.BaseAnimationsCatalog;
export const ButtonAnimationsCatalogFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Factory.ButtonAnimationsCatalogFactory;
export type ButtonAnimationsCatalogFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Factory.ButtonAnimationsCatalogFactory;
export const SimpleAnimationsCatalogFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Factory.SimpleAnimationsCatalogFactory;
export type SimpleAnimationsCatalogFactory = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Factory.SimpleAnimationsCatalogFactory;
export const BackgroundAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BackgroundAnimationsCatalog;
export type BackgroundAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BackgroundAnimationsCatalog;
export const BulletAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;
export type BulletAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.BulletAnimationsCatalog;
export const ButtonAnimationState = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationState;
export type ButtonAnimationState = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationState;
export const ButtonAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationsCatalog;
export type ButtonAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.ButtonAnimationsCatalog;
export const DecayAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.DecayAnimationsCatalog;
export type DecayAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.DecayAnimationsCatalog;
export const FontCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.FontCatalog;
export type FontCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.FontCatalog;
export const SimpleAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.SimpleAnimationsCatalog;
export type SimpleAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.SimpleAnimationsCatalog;
export const UnitAnimationCatalogKeyProvider = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.UnitAnimationCatalogKeyProvider;
export type UnitAnimationCatalogKeyProvider = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.UnitAnimationCatalogKeyProvider;
export const UnitAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.UnitAnimationsCatalog;
export type UnitAnimationsCatalog = HordeClassLibrary.HordeContent.Configs.ViewResourceCatalogs.Graphics.Specialization.UnitAnimationsCatalog;
export const AExternalResourceInfo = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Abstract.AExternalResourceInfo;
export type AExternalResourceInfo = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Abstract.AExternalResourceInfo;
export const MetaInformationKeys = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Abstract.MetaInformationKeys;
export type MetaInformationKeys = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Abstract.MetaInformationKeys;
export const SoundCategory = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.SoundCategory;
export type SoundCategory = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.SoundCategory;
export const SoundResourceInfo = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.SoundResourceInfo;
export type SoundResourceInfo = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.SoundResourceInfo;
export const XenkoAudioParams = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.XenkoAudioParams;
export type XenkoAudioParams = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.XenkoAudioParams;
export const AnimationAtlas = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlas;
export type AnimationAtlas = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlas;
export const AnimationAtlasItem = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlasItem;
export type AnimationAtlasItem = HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Graphics.AnimationAtlasItem;
export const GravityAccelerationMode = HordeClassLibrary.HordeContent.Configs.VisualEffects.GravityAccelerationMode;
export type GravityAccelerationMode = HordeClassLibrary.HordeContent.Configs.VisualEffects.GravityAccelerationMode;
export const AVisualEffectSpecialParams = HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.AVisualEffectSpecialParams;
export type AVisualEffectSpecialParams = HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.AVisualEffectSpecialParams;
export const BulletAnimEffectSpecialParams = HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.BulletAnimEffectSpecialParams;
export type BulletAnimEffectSpecialParams = HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.BulletAnimEffectSpecialParams;
export const MovingEffectSpecialParams = HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.MovingEffectSpecialParams;
export type MovingEffectSpecialParams = HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.MovingEffectSpecialParams;
export const SingleAnimEffectSpecialParams = HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.SingleAnimEffectSpecialParams;
export type SingleAnimEffectSpecialParams = HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.SingleAnimEffectSpecialParams;
export const SingleFrameEffectSpecialParams = HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.SingleFrameEffectSpecialParams;
export type SingleFrameEffectSpecialParams = HordeClassLibrary.HordeContent.Configs.VisualEffects.SpecialParams.SingleFrameEffectSpecialParams;
export const VisualEffectConfig = HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
export type VisualEffectConfig = HordeClassLibrary.HordeContent.Configs.VisualEffects.VisualEffectConfig;
export const ContentPack = HordeClassLibrary.HordeContent.ContentPacks.ContentPack;
export type ContentPack = HordeClassLibrary.HordeContent.ContentPacks.ContentPack;
export const GetInfoResult = HordeClassLibrary.HordeContent.ContentPacks.ContentPackFromZip.GetInfoResult;
export type GetInfoResult = HordeClassLibrary.HordeContent.ContentPacks.ContentPackFromZip.GetInfoResult;
export const InstallResult = HordeClassLibrary.HordeContent.ContentPacks.ContentPackFromZip.InstallResult;
export type InstallResult = HordeClassLibrary.HordeContent.ContentPacks.ContentPackFromZip.InstallResult;
export const ContentPackInfo = HordeClassLibrary.HordeContent.ContentPacks.ContentPackInfo;
export type ContentPackInfo = HordeClassLibrary.HordeContent.ContentPacks.ContentPackInfo;
export const EnableResultStatus = HordeClassLibrary.HordeContent.ContentPacks.Loader.ContentPacksRegistry.EnableResultStatus;
export type EnableResultStatus = HordeClassLibrary.HordeContent.ContentPacks.Loader.ContentPacksRegistry.EnableResultStatus;
export const ContentPackStatus = HordeClassLibrary.HordeContent.ContentPacks.Loader.ContentPackStatus;
export type ContentPackStatus = HordeClassLibrary.HordeContent.ContentPacks.Loader.ContentPackStatus;
export const ContentHashBuilder = HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentHashBuilder;
export type ContentHashBuilder = HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentHashBuilder;
export const ContentStamp = HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp;
export type ContentStamp = HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStamp;
export const ContentStampsCollection = HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStampsCollection;
export type ContentStampsCollection = HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStampsCollection;
export const ContentStampsCollectionDiff = HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStampsCollectionDiff;
export type ContentStampsCollectionDiff = HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStampsCollectionDiff;
export const EffectFactoriesLibrary = HordeClassLibrary.HordeContent.EffectFactoriesLibrary;
export type EffectFactoriesLibrary = HordeClassLibrary.HordeContent.EffectFactoriesLibrary;
export const ConfigPatchVariant = HordeClassLibrary.HordeContent.PatchSystem.ConfigPatchVariant;
export type ConfigPatchVariant = HordeClassLibrary.HordeContent.PatchSystem.ConfigPatchVariant;
export const UnitWorkersLibrary = HordeClassLibrary.HordeContent.UnitWorkersLibrary;
export type UnitWorkersLibrary = HordeClassLibrary.HordeContent.UnitWorkersLibrary;
export const AViewResource = HordeClassLibrary.HordeContent.ViewResources.Abstract.AViewResource;
export type AViewResource = HordeClassLibrary.HordeContent.ViewResources.Abstract.AViewResource;
export const InputItemBuilderSounds = HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums.InputItemBuilderSounds;
export type InputItemBuilderSounds = HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums.InputItemBuilderSounds;
export const InputItemSounds = HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums.InputItemSounds;
export type InputItemSounds = HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums.InputItemSounds;
export const InterfaceFromSettlementSounds = HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums.InterfaceFromSettlementSounds;
export type InterfaceFromSettlementSounds = HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums.InterfaceFromSettlementSounds;
export const SoundRegistryKey = HordeClassLibrary.HordeContent.ViewResources.Audio.SoundRegistryKey;
export type SoundRegistryKey = HordeClassLibrary.HordeContent.ViewResources.Audio.SoundRegistryKey;
export const SoundView = HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView;
export type SoundView = HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView;
export const AnimationView = HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;
export type AnimationView = HordeClassLibrary.HordeContent.ViewResources.Graphics.AnimationView;
export const ImageFrameDefinition = HordeClassLibrary.HordeContent.ViewResources.Graphics.ExternalLoading.ImageFrameDefinition;
export type ImageFrameDefinition = HordeClassLibrary.HordeContent.ViewResources.Graphics.ExternalLoading.ImageFrameDefinition;
export const ImageMaskPixel = HordeClassLibrary.HordeContent.ViewResources.Graphics.ImageMaskPixel;
export type ImageMaskPixel = HordeClassLibrary.HordeContent.ViewResources.Graphics.ImageMaskPixel;
export const Animator = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Animator;
export type Animator = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Animator;
export const AnimatorScript = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScript;
export type AnimatorScript = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScript;
export const AnimatorScriptBlock = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScriptBlock;
export type AnimatorScriptBlock = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorScriptBlock;
export const AnimatorState = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorState;
export type AnimatorState = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.AnimatorState;
export const FramesSwitcher = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.FramesSwitcher;
export type FramesSwitcher = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.FramesSwitcher;
export const SwitchDirection = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.FramesSwitcher.SwitchDirection;
export type SwitchDirection = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.FramesSwitcher.SwitchDirection;
export const AnimatorScriptFlowTasks = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptFlowTasks;
export type AnimatorScriptFlowTasks = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptFlowTasks;
export const AnimatorScriptTasks = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptTasks;
export type AnimatorScriptTasks = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.AnimatorScriptTasks;
export const AnimatorScriptTaskParametersBase = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.AnimatorScriptTaskParametersBase;
export type AnimatorScriptTaskParametersBase = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.AnimatorScriptTaskParametersBase;
export const BuildingFlagTaskParameters = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.BuildingFlagTaskParameters;
export type BuildingFlagTaskParameters = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.BuildingFlagTaskParameters;
export const ProduceNoiseTaskParameters = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.ProduceNoiseTaskParameters;
export type ProduceNoiseTaskParameters = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.ProduceNoiseTaskParameters;
export const ProduceSmokeTaskParameters = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.ProduceSmokeTaskParameters;
export type ProduceSmokeTaskParameters = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.ProduceSmokeTaskParameters;
export const ProduceTraceTaskParameters = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.ProduceTraceTaskParameters;
export type ProduceTraceTaskParameters = HordeClassLibrary.HordeContent.ViewResources.Graphics.InternalLogic.Tasks.Parameters.ProduceTraceTaskParameters;
export const RenderData = HordeClassLibrary.HordeContent.ViewResources.Graphics.RenderData;
export type RenderData = HordeClassLibrary.HordeContent.ViewResources.Graphics.RenderData;
export const TileAnimation = HordeClassLibrary.HordeContent.ViewResources.Graphics.Tiles.TileAnimation;
export type TileAnimation = HordeClassLibrary.HordeContent.ViewResources.Graphics.Tiles.TileAnimation;
export const TileAnimationFrame = HordeClassLibrary.HordeContent.ViewResources.Graphics.Tiles.TileAnimationFrame;
export type TileAnimationFrame = HordeClassLibrary.HordeContent.ViewResources.Graphics.Tiles.TileAnimationFrame;
export const SetTileCanvasDelegate = HordeClassLibrary.HordeContent.ViewResources.Graphics.Tiles.TilesetToCanvasesConverter.SetTileCanvasDelegate;
export type SetTileCanvasDelegate = HordeClassLibrary.HordeContent.ViewResources.Graphics.Tiles.TilesetToCanvasesConverter.SetTileCanvasDelegate;
export const WorkersLibrary = HordeClassLibrary.HordeContent.WorkersLibrary;
export type WorkersLibrary = HordeClassLibrary.HordeContent.WorkersLibrary;
export const Bresenhams = HordeClassLibrary.Miscellaneous.Bresenhams;
export type Bresenhams = HordeClassLibrary.Miscellaneous.Bresenhams;
export const PlotFunction = HordeClassLibrary.Miscellaneous.Bresenhams.PlotFunction;
export type PlotFunction = HordeClassLibrary.Miscellaneous.Bresenhams.PlotFunction;
export const BresenhamsAdvanced = HordeClassLibrary.Miscellaneous.BresenhamsAdvanced;
export type BresenhamsAdvanced = HordeClassLibrary.Miscellaneous.BresenhamsAdvanced;
export const PlotFunction = HordeClassLibrary.Miscellaneous.BresenhamsAdvanced.PlotFunction;
export type PlotFunction = HordeClassLibrary.Miscellaneous.BresenhamsAdvanced.PlotFunction;
export const CitadelArmyType = HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelArmyType;
export type CitadelArmyType = HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelArmyType;
export const CitadelArmyCanonType = HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelArmyCanonType;
export type CitadelArmyCanonType = HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelArmyCanonType;
export const CitadelDiplomacyStatus = HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelDiplomacyStatus;
export type CitadelDiplomacyStatus = HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelDiplomacyStatus;
export const CitadelMapResource = HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelMapResource;
export type CitadelMapResource = HordeClassLibrary.Miscellaneous.Citadel.Enumerations.CitadelMapResource;
export const CitadelSpriteInfo = HordeClassLibrary.Miscellaneous.Citadel.Structures.Graphics.CitadelSpriteInfo;
export type CitadelSpriteInfo = HordeClassLibrary.Miscellaneous.Citadel.Structures.Graphics.CitadelSpriteInfo;
export const CitadelResourcesAmount = HordeClassLibrary.Miscellaneous.Citadel.Structures.Other.CitadelResourcesAmount;
export type CitadelResourcesAmount = HordeClassLibrary.Miscellaneous.Citadel.Structures.Other.CitadelResourcesAmount;
export const CitadelScena = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.CitadelScena;
export type CitadelScena = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.CitadelScena;
export const CitadelScenaNation = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.CitadelScenaNation;
export type CitadelScenaNation = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.CitadelScenaNation;
export const CitadelScenaReadMode = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.CitadelScenaReadMode;
export type CitadelScenaReadMode = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.CitadelScenaReadMode;
export const CitadelScenaHeader = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaHeader;
export type CitadelScenaHeader = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaHeader;
export const CitadelScenaSectionHeaderBase = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionHeaderBase;
export type CitadelScenaSectionHeaderBase = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionHeaderBase;
export const CitadelScenaSectionHeaderMap = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionHeaderMap;
export type CitadelScenaSectionHeaderMap = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionHeaderMap;
export const CitadelScenaSectionHeaderObe = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionHeaderObe;
export type CitadelScenaSectionHeaderObe = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionHeaderObe;
export const CitadelScenaSectionInfo = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionInfo;
export type CitadelScenaSectionInfo = HordeClassLibrary.Miscellaneous.Citadel.Structures.Scena.Headers.CitadelScenaSectionInfo;
export const CitadelSegmentData = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentData;
export type CitadelSegmentData = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentData;
export const CitadelSegmentVariant = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentVariant;
export type CitadelSegmentVariant = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentVariant;
export const CitadelSegmentType = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentType;
export type CitadelSegmentType = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentType;
export const CitadelSegmentQuadType = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentQuadType;
export type CitadelSegmentQuadType = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentQuadType;
export const CitadelSegmentSound = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentSound;
export type CitadelSegmentSound = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentSound;
export const CitadelSegmentsDataSequenceContext = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentsDataSequenceContext;
export type CitadelSegmentsDataSequenceContext = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelSegmentsDataSequenceContext;
export const CitadelTileset = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelTileset;
export type CitadelTileset = HordeClassLibrary.Miscellaneous.Citadel.Structures.Tiles.CitadelTileset;
export const CitadelUnit = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.CitadelUnit;
export type CitadelUnit = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.CitadelUnit;
export const CitadelUnitFlags = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.CitadelUnitFlags;
export type CitadelUnitFlags = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.CitadelUnitFlags;
export const CitadelUnitSpecification = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.CitadelUnitSpecification;
export type CitadelUnitSpecification = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.CitadelUnitSpecification;
export const CitadelUnitExtraData = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraData;
export type CitadelUnitExtraData = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraData;
export const CitadelUnitExtraDataDescriptor = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataDescriptor;
export type CitadelUnitExtraDataDescriptor = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataDescriptor;
export const CitadelUnitExtraDataFieldDescriptor = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataFieldDescriptor;
export type CitadelUnitExtraDataFieldDescriptor = HordeClassLibrary.Miscellaneous.Citadel.Structures.Units.ExtraData.CitadelUnitExtraDataFieldDescriptor;
export const ConfiguratorAction = HordeClassLibrary.Miscellaneous.ConfiguratorAction;
export type ConfiguratorAction = HordeClassLibrary.Miscellaneous.ConfiguratorAction;
export const AStarMiniPathFinder = HordeClassLibrary.PathFinders.AStarMini.AStarMiniPathFinder;
export type AStarMiniPathFinder = HordeClassLibrary.PathFinders.AStarMini.AStarMiniPathFinder;
export const PathFindersPool = HordeClassLibrary.PathFinders.AStarMini.AStarMiniPathFinder.PathFindersPool;
export type PathFindersPool = HordeClassLibrary.PathFinders.AStarMini.AStarMiniPathFinder.PathFindersPool;
export const AStarOptions = HordeClassLibrary.PathFinders.AStar.AStarOptions;
export type AStarOptions = HordeClassLibrary.PathFinders.AStar.AStarOptions;
export const AStarPathFinder = HordeClassLibrary.PathFinders.AStar.AStarPathFinder;
export type AStarPathFinder = HordeClassLibrary.PathFinders.AStar.AStarPathFinder;
export const PathFindersPool = HordeClassLibrary.PathFinders.AStar.AStarPathFinder.PathFindersPool;
export type PathFindersPool = HordeClassLibrary.PathFinders.AStar.AStarPathFinder.PathFindersPool;
export const BasePathFinder = HordeClassLibrary.PathFinders.BasePathFinder;
export type BasePathFinder = HordeClassLibrary.PathFinders.BasePathFinder;
export const CellPassabilityStatus = HordeClassLibrary.PathFinders.CellPassabilityStatus;
export type CellPassabilityStatus = HordeClassLibrary.PathFinders.CellPassabilityStatus;
export const CpfMain = HordeClassLibrary.PathFinders.ContourPathFinder.CpfMain;
export type CpfMain = HordeClassLibrary.PathFinders.ContourPathFinder.CpfMain;
export const CpfNearestPointsSet = HordeClassLibrary.PathFinders.ContourPathFinder.CpfNearestPointsSet;
export type CpfNearestPointsSet = HordeClassLibrary.PathFinders.ContourPathFinder.CpfNearestPointsSet;
export const CpfOptions = HordeClassLibrary.PathFinders.ContourPathFinder.CpfOptions;
export type CpfOptions = HordeClassLibrary.PathFinders.ContourPathFinder.CpfOptions;
export const MarkCellDelegate = HordeClassLibrary.PathFinders.MarkCellDelegate;
export type MarkCellDelegate = HordeClassLibrary.PathFinders.MarkCellDelegate;
export const FillAlgo = HordeClassLibrary.PathFinders.FillAlgo;
export type FillAlgo = HordeClassLibrary.PathFinders.FillAlgo;
export const Path2D = HordeClassLibrary.PathFinders.Path2D;
export type Path2D = HordeClassLibrary.PathFinders.Path2D;
export const PathFinderContext = HordeClassLibrary.PathFinders.PathFinderContext;
export type PathFinderContext = HordeClassLibrary.PathFinders.PathFinderContext;
export const PathFindersStatistic = HordeClassLibrary.PathFinders.PathFindersStatistic;
export type PathFindersStatistic = HordeClassLibrary.PathFinders.PathFindersStatistic;
export const PathFinderStatus = HordeClassLibrary.PathFinders.PathFinderStatus;
export type PathFinderStatus = HordeClassLibrary.PathFinders.PathFinderStatus;
export const SpeedAtCellByKnownMapDelegate = HordeClassLibrary.PathFinders.SpeedAtCellByKnownMapDelegate;
export type SpeedAtCellByKnownMapDelegate = HordeClassLibrary.PathFinders.SpeedAtCellByKnownMapDelegate;
export const SpeedAtCellByRealMapDelegate = HordeClassLibrary.PathFinders.SpeedAtCellByRealMapDelegate;
export type SpeedAtCellByRealMapDelegate = HordeClassLibrary.PathFinders.SpeedAtCellByRealMapDelegate;
export const IsBorderDelegateOld = HordeClassLibrary.PathFinders.IsBorderDelegateOld;
export type IsBorderDelegateOld = HordeClassLibrary.PathFinders.IsBorderDelegateOld;
export const IsBorderDelegate = HordeClassLibrary.PathFinders.IsBorderDelegate;
export type IsBorderDelegate = HordeClassLibrary.PathFinders.IsBorderDelegate;
export const UnitFpqNode = HordeClassLibrary.PathFinders.UnitFpqNode;
export type UnitFpqNode = HordeClassLibrary.PathFinders.UnitFpqNode;
export const ScriptWorkersRegistry = HordeClassLibrary.Scripting.Misc.ScriptWorkersRegistry;
export type ScriptWorkersRegistry = HordeClassLibrary.Scripting.Misc.ScriptWorkersRegistry;
export const HordeContentApi = HordeClassLibrary.Scripting.ScriptApi.HordeContentApi;
export type HordeContentApi = HordeClassLibrary.Scripting.ScriptApi.HordeContentApi;
export const ScriptMachineDebugApi = HordeClassLibrary.Scripting.ScriptApi.ScriptMachineDebugApi;
export type ScriptMachineDebugApi = HordeClassLibrary.Scripting.ScriptApi.ScriptMachineDebugApi;
export const ScriptUtils = HordeClassLibrary.Scripting.ScriptApi.ScriptUtils;
export type ScriptUtils = HordeClassLibrary.Scripting.ScriptApi.ScriptUtils;
export const OnErrorAction = HordeClassLibrary.Scripting.ScriptMachine.OnErrorAction;
export type OnErrorAction = HordeClassLibrary.Scripting.ScriptMachine.OnErrorAction;
export const UnitArmament = HordeClassLibrary.UnitComponents.BattleSystem.UnitArmament;
export type UnitArmament = HordeClassLibrary.UnitComponents.BattleSystem.UnitArmament;
export const CanNotAttackCause = HordeClassLibrary.UnitComponents.Enumerations.CanNotAttackCause;
export type CanNotAttackCause = HordeClassLibrary.UnitComponents.Enumerations.CanNotAttackCause;
export const CanNotBuildReason = HordeClassLibrary.UnitComponents.Enumerations.CanNotBuildReason;
export type CanNotBuildReason = HordeClassLibrary.UnitComponents.Enumerations.CanNotBuildReason;
export const CaptureCondition = HordeClassLibrary.UnitComponents.Enumerations.CaptureCondition;
export type CaptureCondition = HordeClassLibrary.UnitComponents.Enumerations.CaptureCondition;
export const CompoundPart = HordeClassLibrary.UnitComponents.Enumerations.CompoundPart;
export type CompoundPart = HordeClassLibrary.UnitComponents.Enumerations.CompoundPart;
export const PatternUnitFeature = HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature;
export type PatternUnitFeature = HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature;
export const ResourceItemType = HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType;
export type ResourceItemType = HordeClassLibrary.UnitComponents.Enumerations.ResourceItemType;
export const UnitAnimDirection = HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection;
export type UnitAnimDirection = HordeClassLibrary.UnitComponents.Enumerations.UnitAnimDirection;
export const UnitAnimState = HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState;
export type UnitAnimState = HordeClassLibrary.UnitComponents.Enumerations.UnitAnimState;
export const UnitBehaviorByOrderFlag = HordeClassLibrary.UnitComponents.Enumerations.UnitBehaviorByOrderFlag;
export type UnitBehaviorByOrderFlag = HordeClassLibrary.UnitComponents.Enumerations.UnitBehaviorByOrderFlag;
export const UnitDirection = HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;
export type UnitDirection = HordeClassLibrary.UnitComponents.Enumerations.UnitDirection;
export const UnitEffectFlag = HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag;
export type UnitEffectFlag = HordeClassLibrary.UnitComponents.Enumerations.UnitEffectFlag;
export const UnitEventFlag = HordeClassLibrary.UnitComponents.Enumerations.UnitEventFlag;
export type UnitEventFlag = HordeClassLibrary.UnitComponents.Enumerations.UnitEventFlag;
export const UnitFlags = HordeClassLibrary.UnitComponents.Enumerations.UnitFlags;
export type UnitFlags = HordeClassLibrary.UnitComponents.Enumerations.UnitFlags;
export const UnitGrayFogBehavior = HordeClassLibrary.UnitComponents.Enumerations.UnitGrayFogBehavior;
export type UnitGrayFogBehavior = HordeClassLibrary.UnitComponents.Enumerations.UnitGrayFogBehavior;
export const UnitHealthLevel = HordeClassLibrary.UnitComponents.Enumerations.UnitHealthLevel;
export type UnitHealthLevel = HordeClassLibrary.UnitComponents.Enumerations.UnitHealthLevel;
export const UnitHurtType = HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType;
export type UnitHurtType = HordeClassLibrary.UnitComponents.Enumerations.UnitHurtType;
export const UnitLifeState = HordeClassLibrary.UnitComponents.Enumerations.UnitLifeState;
export type UnitLifeState = HordeClassLibrary.UnitComponents.Enumerations.UnitLifeState;
export const UnitMapLayer = HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
export type UnitMapLayer = HordeClassLibrary.UnitComponents.Enumerations.UnitMapLayer;
export const UnitMoveType = HordeClassLibrary.UnitComponents.Enumerations.UnitMoveType;
export type UnitMoveType = HordeClassLibrary.UnitComponents.Enumerations.UnitMoveType;
export const UnitNotificationFlag = HordeClassLibrary.UnitComponents.Enumerations.UnitNotificationFlag;
export type UnitNotificationFlag = HordeClassLibrary.UnitComponents.Enumerations.UnitNotificationFlag;
export const UnitProfession = HordeClassLibrary.UnitComponents.Enumerations.UnitProfession;
export type UnitProfession = HordeClassLibrary.UnitComponents.Enumerations.UnitProfession;
export const UnitQueryFlag = HordeClassLibrary.UnitComponents.Enumerations.UnitQueryFlag;
export type UnitQueryFlag = HordeClassLibrary.UnitComponents.Enumerations.UnitQueryFlag;
export const UnitSpecification = HordeClassLibrary.UnitComponents.Enumerations.UnitSpecification;
export type UnitSpecification = HordeClassLibrary.UnitComponents.Enumerations.UnitSpecification;
export const UnitState = HordeClassLibrary.UnitComponents.Enumerations.UnitState;
export type UnitState = HordeClassLibrary.UnitComponents.Enumerations.UnitState;
export const UnitVisibility = HordeClassLibrary.UnitComponents.Enumerations.UnitVisibility;
export type UnitVisibility = HordeClassLibrary.UnitComponents.Enumerations.UnitVisibility;
export const BaseUnitEventArgs = HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs;
export type BaseUnitEventArgs = HordeClassLibrary.UnitComponents.EventArgs.BaseUnitEventArgs;
export const CauseDamageEventArgs = HordeClassLibrary.UnitComponents.EventArgs.CauseDamageEventArgs;
export type CauseDamageEventArgs = HordeClassLibrary.UnitComponents.EventArgs.CauseDamageEventArgs;
export const ComradeIsAttackedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.ComradeIsAttackedEventArgs;
export type ComradeIsAttackedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.ComradeIsAttackedEventArgs;
export const MoveAwayRequestEventArgs = HordeClassLibrary.UnitComponents.EventArgs.MoveAwayRequestEventArgs;
export type MoveAwayRequestEventArgs = HordeClassLibrary.UnitComponents.EventArgs.MoveAwayRequestEventArgs;
export const MoveOutRequestEventArgs = HordeClassLibrary.UnitComponents.EventArgs.MoveOutRequestEventArgs;
export type MoveOutRequestEventArgs = HordeClassLibrary.UnitComponents.EventArgs.MoveOutRequestEventArgs;
export const StepAwayRequestEventArgs = HordeClassLibrary.UnitComponents.EventArgs.StepAwayRequestEventArgs;
export type StepAwayRequestEventArgs = HordeClassLibrary.UnitComponents.EventArgs.StepAwayRequestEventArgs;
export const TakeDamageByUnknownSourceEventArgs = HordeClassLibrary.UnitComponents.EventArgs.TakeDamageByUnknownSourceEventArgs;
export type TakeDamageByUnknownSourceEventArgs = HordeClassLibrary.UnitComponents.EventArgs.TakeDamageByUnknownSourceEventArgs;
export const TakeDamageEventArgs = HordeClassLibrary.UnitComponents.EventArgs.TakeDamageEventArgs;
export type TakeDamageEventArgs = HordeClassLibrary.UnitComponents.EventArgs.TakeDamageEventArgs;
export const UnitBuildingCompleteEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitBuildingCompleteEventArgs;
export type UnitBuildingCompleteEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitBuildingCompleteEventArgs;
export const UnitDeathEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitDeathEventArgs;
export type UnitDeathEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitDeathEventArgs;
export const UnitDeletionEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitDeletionEventArgs;
export type UnitDeletionEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitDeletionEventArgs;
export const UnitDummyStateChangedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitDummyStateChangedEventArgs;
export type UnitDummyStateChangedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitDummyStateChangedEventArgs;
export const UnitHealthChangedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitHealthChangedEventArgs;
export type UnitHealthChangedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitHealthChangedEventArgs;
export const UnitLifeStateChangedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitLifeStateChangedEventArgs;
export type UnitLifeStateChangedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitLifeStateChangedEventArgs;
export const UnitMovedToCellEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitMovedToCellEventArgs;
export type UnitMovedToCellEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitMovedToCellEventArgs;
export const UnitNearDeathEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitNearDeathEventArgs;
export type UnitNearDeathEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitNearDeathEventArgs;
export const UnitOrderChangedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitOrderChangedEventArgs;
export type UnitOrderChangedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitOrderChangedEventArgs;
export const UnitOwnerChangedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitOwnerChangedEventArgs;
export type UnitOwnerChangedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitOwnerChangedEventArgs;
export const UnitReplacedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitReplacedEventArgs;
export type UnitReplacedEventArgs = HordeClassLibrary.UnitComponents.EventArgs.UnitReplacedEventArgs;
export const UnitEventHandler = HordeClassLibrary.UnitComponents.Events.UnitEventHandler;
export type UnitEventHandler = HordeClassLibrary.UnitComponents.Events.UnitEventHandler;
export const AUnitMind = HordeClassLibrary.UnitComponents.Minds.AUnitMind;
export type AUnitMind = HordeClassLibrary.UnitComponents.Minds.AUnitMind;
export const BattleMind = HordeClassLibrary.UnitComponents.Minds.BattleMind;
export type BattleMind = HordeClassLibrary.UnitComponents.Minds.BattleMind;
export const CommandsMind = HordeClassLibrary.UnitComponents.Minds.CommandsMind;
export type CommandsMind = HordeClassLibrary.UnitComponents.Minds.CommandsMind;
export const AutomaticCommandModeChangedEventArgs = HordeClassLibrary.UnitComponents.Minds.CommandsMind.AutomaticCommandModeChangedEventArgs;
export type AutomaticCommandModeChangedEventArgs = HordeClassLibrary.UnitComponents.Minds.CommandsMind.AutomaticCommandModeChangedEventArgs;
export const CommunicationMind = HordeClassLibrary.UnitComponents.Minds.CommunicationMind;
export type CommunicationMind = HordeClassLibrary.UnitComponents.Minds.CommunicationMind;
export const FilterCallbackDelegate = HordeClassLibrary.UnitComponents.Minds.CommunicationMind.FilterCallbackDelegate;
export type FilterCallbackDelegate = HordeClassLibrary.UnitComponents.Minds.CommunicationMind.FilterCallbackDelegate;
export const FilterPassCallbackDelegate = HordeClassLibrary.UnitComponents.Minds.CommunicationMind.FilterPassCallbackDelegate;
export type FilterPassCallbackDelegate = HordeClassLibrary.UnitComponents.Minds.CommunicationMind.FilterPassCallbackDelegate;
export const EffectsMind = HordeClassLibrary.UnitComponents.Minds.EffectsMind;
export type EffectsMind = HordeClassLibrary.UnitComponents.Minds.EffectsMind;
export const EffectChangedEventArgs = HordeClassLibrary.UnitComponents.Minds.EffectsMind.EffectChangedEventArgs;
export type EffectChangedEventArgs = HordeClassLibrary.UnitComponents.Minds.EffectsMind.EffectChangedEventArgs;
export const EventsMind = HordeClassLibrary.UnitComponents.Minds.EventsMind;
export type EventsMind = HordeClassLibrary.UnitComponents.Minds.EventsMind;
export const InstinctsMind = HordeClassLibrary.UnitComponents.Minds.InstinctsMind;
export type InstinctsMind = HordeClassLibrary.UnitComponents.Minds.InstinctsMind;
export const MapMind = HordeClassLibrary.UnitComponents.Minds.MapMind;
export type MapMind = HordeClassLibrary.UnitComponents.Minds.MapMind;
export const PathCheckResult = HordeClassLibrary.UnitComponents.Minds.MapMind.PathCheckResult;
export type PathCheckResult = HordeClassLibrary.UnitComponents.Minds.MapMind.PathCheckResult;
export const OrdersMind = HordeClassLibrary.UnitComponents.Minds.OrdersMind;
export type OrdersMind = HordeClassLibrary.UnitComponents.Minds.OrdersMind;
export const SoundsMind = HordeClassLibrary.UnitComponents.Minds.SoundsMind;
export type SoundsMind = HordeClassLibrary.UnitComponents.Minds.SoundsMind;
export const VisualMind = HordeClassLibrary.UnitComponents.Minds.VisualMind;
export type VisualMind = HordeClassLibrary.UnitComponents.Minds.VisualMind;
export const BuildingFlagsHelper = HordeClassLibrary.UnitComponents.Misc.BuildingFlagsHelper;
export type BuildingFlagsHelper = HordeClassLibrary.UnitComponents.Misc.BuildingFlagsHelper;
export const FlagSlot = HordeClassLibrary.UnitComponents.Misc.BuildingFlagsHelper.FlagSlot;
export type FlagSlot = HordeClassLibrary.UnitComponents.Misc.BuildingFlagsHelper.FlagSlot;
export const CompoundUnitBuildHelper = HordeClassLibrary.UnitComponents.Misc.CompoundUnitBuildHelper;
export type CompoundUnitBuildHelper = HordeClassLibrary.UnitComponents.Misc.CompoundUnitBuildHelper;
export const CyclicUnitsSelector = HordeClassLibrary.UnitComponents.Misc.CyclicUnitsSelector;
export type CyclicUnitsSelector = HordeClassLibrary.UnitComponents.Misc.CyclicUnitsSelector;
export const FinishSetWrapper = HordeClassLibrary.UnitComponents.Misc.FinishSetWrapper;
export type FinishSetWrapper = HordeClassLibrary.UnitComponents.Misc.FinishSetWrapper;
export const HarvestLumberSpiral = HordeClassLibrary.UnitComponents.Misc.HarvestLumberSpiral;
export type HarvestLumberSpiral = HordeClassLibrary.UnitComponents.Misc.HarvestLumberSpiral;
export const ProduceListItemInfo = HordeClassLibrary.UnitComponents.Misc.ProduceListItemInfo;
export type ProduceListItemInfo = HordeClassLibrary.UnitComponents.Misc.ProduceListItemInfo;
export const SearchMineSpiral = HordeClassLibrary.UnitComponents.Misc.SearchMineSpiral;
export type SearchMineSpiral = HordeClassLibrary.UnitComponents.Misc.SearchMineSpiral;
export const TargetBuilding = HordeClassLibrary.UnitComponents.Misc.TargetBuilding;
export type TargetBuilding = HordeClassLibrary.UnitComponents.Misc.TargetBuilding;
export const AlarmFlags = HordeClassLibrary.UnitComponents.Notifications.Alarms.AlarmFlags;
export type AlarmFlags = HordeClassLibrary.UnitComponents.Notifications.Alarms.AlarmFlags;
export const BaseUnitAlarm = HordeClassLibrary.UnitComponents.Notifications.Alarms.BaseUnitAlarm;
export type BaseUnitAlarm = HordeClassLibrary.UnitComponents.Notifications.Alarms.BaseUnitAlarm;
export const ComradeUnderAttackAlarm = HordeClassLibrary.UnitComponents.Notifications.Alarms.ComradeUnderAttackAlarm;
export type ComradeUnderAttackAlarm = HordeClassLibrary.UnitComponents.Notifications.Alarms.ComradeUnderAttackAlarm;
export const EnemyIsNearAlarm = HordeClassLibrary.UnitComponents.Notifications.Alarms.EnemyIsNearAlarm;
export type EnemyIsNearAlarm = HordeClassLibrary.UnitComponents.Notifications.Alarms.EnemyIsNearAlarm;
export const UnderAttackAlarm = HordeClassLibrary.UnitComponents.Notifications.Alarms.UnderAttackAlarm;
export type UnderAttackAlarm = HordeClassLibrary.UnitComponents.Notifications.Alarms.UnderAttackAlarm;
export const BaseUnitNotification = HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification;
export type BaseUnitNotification = HordeClassLibrary.UnitComponents.Notifications.BaseUnitNotification;
export const ComradeRepairRequiredNotification = HordeClassLibrary.UnitComponents.Notifications.Other.ComradeRepairRequiredNotification;
export type ComradeRepairRequiredNotification = HordeClassLibrary.UnitComponents.Notifications.Other.ComradeRepairRequiredNotification;
export const FireNotification = HordeClassLibrary.UnitComponents.Notifications.Other.FireNotification;
export type FireNotification = HordeClassLibrary.UnitComponents.Notifications.Other.FireNotification;
export const MoveAwayRequestNotification = HordeClassLibrary.UnitComponents.Notifications.Other.MoveAwayRequestNotification;
export type MoveAwayRequestNotification = HordeClassLibrary.UnitComponents.Notifications.Other.MoveAwayRequestNotification;
export const MoveOutRequestNotification = HordeClassLibrary.UnitComponents.Notifications.Other.MoveOutRequestNotification;
export type MoveOutRequestNotification = HordeClassLibrary.UnitComponents.Notifications.Other.MoveOutRequestNotification;
export const NearDeathNotification = HordeClassLibrary.UnitComponents.Notifications.Other.NearDeathNotification;
export type NearDeathNotification = HordeClassLibrary.UnitComponents.Notifications.Other.NearDeathNotification;
export const StepAwayRequestNotification = HordeClassLibrary.UnitComponents.Notifications.Other.StepAwayRequestNotification;
export type StepAwayRequestNotification = HordeClassLibrary.UnitComponents.Notifications.Other.StepAwayRequestNotification;
export const BaseTacticNotification = HordeClassLibrary.UnitComponents.Notifications.Tactic.BaseTacticNotification;
export type BaseTacticNotification = HordeClassLibrary.UnitComponents.Notifications.Tactic.BaseTacticNotification;
export const TacticAttackAdjacentNotification = HordeClassLibrary.UnitComponents.Notifications.Tactic.TacticAttackAdjacentNotification;
export type TacticAttackAdjacentNotification = HordeClassLibrary.UnitComponents.Notifications.Tactic.TacticAttackAdjacentNotification;
export const TacticComebackNotification = HordeClassLibrary.UnitComponents.Notifications.Tactic.TacticComebackNotification;
export type TacticComebackNotification = HordeClassLibrary.UnitComponents.Notifications.Tactic.TacticComebackNotification;
export const TacticRetreatNotification = HordeClassLibrary.UnitComponents.Notifications.Tactic.TacticRetreatNotification;
export type TacticRetreatNotification = HordeClassLibrary.UnitComponents.Notifications.Tactic.TacticRetreatNotification;
export const BaseUnitThreat = HordeClassLibrary.UnitComponents.Notifications.Threats.BaseUnitThreat;
export type BaseUnitThreat = HordeClassLibrary.UnitComponents.Notifications.Threats.BaseUnitThreat;
export const FriendlyFireThreat = HordeClassLibrary.UnitComponents.Notifications.Threats.FriendlyFireThreat;
export type FriendlyFireThreat = HordeClassLibrary.UnitComponents.Notifications.Threats.FriendlyFireThreat;
export const InvulnerableThreat = HordeClassLibrary.UnitComponents.Notifications.Threats.InvulnerableThreat;
export type InvulnerableThreat = HordeClassLibrary.UnitComponents.Notifications.Threats.InvulnerableThreat;
export const UnknownThreat = HordeClassLibrary.UnitComponents.Notifications.Threats.UnknownThreat;
export type UnknownThreat = HordeClassLibrary.UnitComponents.Notifications.Threats.UnknownThreat;
export const AActBase = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase;
export type AActBase = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.AActBase;
export const ActAttackUnit = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActAttackUnit;
export type ActAttackUnit = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActAttackUnit;
export const ActCapture = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActCapture;
export type ActCapture = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActCapture;
export const ActChopDownTree = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActChopDownTree;
export type ActChopDownTree = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActChopDownTree;
export const ActCustom = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActCustom;
export type ActCustom = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActCustom;
export const ActDeath = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActDeath;
export type ActDeath = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActDeath;
export const ActDestroySelf = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActDestroySelf;
export type ActDestroySelf = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActDestroySelf;
export const ActDoNothing = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActDoNothing;
export type ActDoNothing = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActDoNothing;
export const ActGatherResourceFromMine = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActGatherResourceFromMine;
export type ActGatherResourceFromMine = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActGatherResourceFromMine;
export const ActMoveTo = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActMoveTo;
export type ActMoveTo = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActMoveTo;
export const ActStepAwayBase = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActStepAwayBase;
export type ActStepAwayBase = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActStepAwayBase;
export const ActStepAwayImmediate = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActStepAwayImmediate;
export type ActStepAwayImmediate = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActStepAwayImmediate;
export const ActStepAwayWaiting = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActStepAwayWaiting;
export type ActStepAwayWaiting = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActStepAwayWaiting;
export const ActTransferResourceItem = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActTransferResourceItem;
export type ActTransferResourceItem = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActTransferResourceItem;
export const ActTurn = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActTurn;
export type ActTurn = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActTurn;
export const ActWait = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActWait;
export type ActWait = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.ActWait;
export const ActBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActBuild;
export type ActBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActBuild;
export const ActBuildSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActBuildSelf;
export type ActBuildSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActBuildSelf;
export const ActPreBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActPreBuild;
export type ActPreBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActPreBuild;
export const ActProduce = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActProduce;
export type ActProduce = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActProduce;
export const ActProduceAt = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActProduceAt;
export type ActProduceAt = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActProduceAt;
export const ActRepair = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActRepair;
export type ActRepair = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActRepair;
export const ActRepairSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActRepairSelf;
export type ActRepairSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Acts.Producing.ActRepairSelf;
export const AssignOrderMode = HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
export type AssignOrderMode = HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
export const ACommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs;
export type ACommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ACommandArgs;
export const AUnknownCommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.AUnknownCommandArgs;
export type AUnknownCommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.AUnknownCommandArgs;
export const AutoCommandSwitchArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.AutoCommandSwitchArgs;
export type AutoCommandSwitchArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.AutoCommandSwitchArgs;
export const OneClickCommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.OneClickCommandArgs;
export type OneClickCommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.OneClickCommandArgs;
export const PointCommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.PointCommandArgs;
export type PointCommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.PointCommandArgs;
export const ProduceAtCommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ProduceAtCommandArgs;
export type ProduceAtCommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ProduceAtCommandArgs;
export const ProduceCommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ProduceCommandArgs;
export type ProduceCommandArgs = HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.ProduceCommandArgs;
export const OrderRepairMode = HordeClassLibrary.UnitComponents.OrdersSystem.Misc.OrderRepairMode;
export type OrderRepairMode = HordeClassLibrary.UnitComponents.OrdersSystem.Misc.OrderRepairMode;
export const AMotionBase = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase;
export type AMotionBase = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.AMotionBase;
export const MotionCaptureBase = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureBase;
export type MotionCaptureBase = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureBase;
export const MotionCaptureBuilding = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureBuilding;
export type MotionCaptureBuilding = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureBuilding;
export const CaptureStage = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureBuilding.CaptureStage;
export type CaptureStage = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureBuilding.CaptureStage;
export const MotionCaptureMachine = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureMachine;
export type MotionCaptureMachine = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureMachine;
export const CaptureStage = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureMachine.CaptureStage;
export type CaptureStage = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCaptureMachine.CaptureStage;
export const MotionChopDown = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionChopDown;
export type MotionChopDown = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionChopDown;
export const MotionCustom = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCustom;
export type MotionCustom = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionCustom;
export const MotionDeath = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionDeath;
export type MotionDeath = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionDeath;
export const MotionDestroySelf = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionDestroySelf;
export type MotionDestroySelf = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionDestroySelf;
export const MotionDoNothing = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionDoNothing;
export type MotionDoNothing = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionDoNothing;
export const MotionGatherResourceFromMine = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionGatherResourceFromMine;
export type MotionGatherResourceFromMine = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionGatherResourceFromMine;
export const MotionHit = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionHit;
export type MotionHit = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionHit;
export const MotionMove = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionMove;
export type MotionMove = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionMove;
export const MotionPathFinding = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionPathFinding;
export type MotionPathFinding = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionPathFinding;
export const MotionReload = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionReload;
export type MotionReload = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionReload;
export const MotionTransferResourceItem = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionTransferResourceItem;
export type MotionTransferResourceItem = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionTransferResourceItem;
export const MotionTurn = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionTurn;
export type MotionTurn = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionTurn;
export const MotionWait = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionWait;
export type MotionWait = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionWait;
export const MotionWaitCellFree = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionWaitCellFree;
export type MotionWaitCellFree = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.MotionWaitCellFree;
export const MotionBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionBuild;
export type MotionBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionBuild;
export const MotionBuildSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionBuildSelf;
export type MotionBuildSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionBuildSelf;
export const MotionPreBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionPreBuild;
export type MotionPreBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionPreBuild;
export const MotionProduce = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionProduce;
export type MotionProduce = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionProduce;
export const MotionProduceAt = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionProduceAt;
export type MotionProduceAt = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionProduceAt;
export const MotionRepair = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionRepair;
export type MotionRepair = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionRepair;
export const MotionRepairSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionRepairSelf;
export type MotionRepairSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.Producing.MotionRepairSelf;
export const StateMotion = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.StateMotion;
export type StateMotion = HordeClassLibrary.UnitComponents.OrdersSystem.Motions.StateMotion;
export const OrderImportance = HordeClassLibrary.UnitComponents.OrdersSystem.OrderImportance;
export type OrderImportance = HordeClassLibrary.UnitComponents.OrdersSystem.OrderImportance;
export const OrdersQueue = HordeClassLibrary.UnitComponents.OrdersSystem.OrdersQueue;
export type OrdersQueue = HordeClassLibrary.UnitComponents.OrdersSystem.OrdersQueue;
export const AOrderBase = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase;
export type AOrderBase = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderBase;
export const AOrderStaged = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged;
export type AOrderStaged = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AOrderStaged;
export const IOrderWithTargetRectangle = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Interfaces.IOrderWithTargetRectangle;
export type IOrderWithTargetRectangle = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Interfaces.IOrderWithTargetRectangle;
export const OrderAttackParameters = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderAttackParameters;
export type OrderAttackParameters = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderAttackParameters;
export const AttackMode = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AttackMode;
export type AttackMode = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.AttackMode;
export const OrderAttackUnit = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderAttackUnit;
export type OrderAttackUnit = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderAttackUnit;
export const OrderBuildingAttackUnit = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderBuildingAttackUnit;
export type OrderBuildingAttackUnit = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderBuildingAttackUnit;
export const OrderCapture = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderCapture;
export type OrderCapture = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderCapture;
export const OrderCustom = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderCustom;
export type OrderCustom = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderCustom;
export const OrderDeath = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderDeath;
export type OrderDeath = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderDeath;
export const OrderDestroySelf = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderDestroySelf;
export type OrderDestroySelf = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderDestroySelf;
export const OrderDoNothing = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderDoNothing;
export type OrderDoNothing = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderDoNothing;
export const OrderHarvestLumber = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderHarvestLumber;
export type OrderHarvestLumber = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderHarvestLumber;
export const OrderHoldPosition = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderHoldPosition;
export type OrderHoldPosition = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderHoldPosition;
export const OrderMine = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderMine;
export type OrderMine = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderMine;
export const OrderMoveAway = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderMoveAway;
export type OrderMoveAway = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderMoveAway;
export const OrderMoveOutRegion = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderMoveOutRegion;
export type OrderMoveOutRegion = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderMoveOutRegion;
export const OrderMoveToPoint = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderMoveToPoint;
export type OrderMoveToPoint = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderMoveToPoint;
export const MovementMode = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.MovementMode;
export type MovementMode = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.MovementMode;
export const OrderMoveToStock = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderMoveToStock;
export type OrderMoveToStock = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderMoveToStock;
export const OrderPanik = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderPanik;
export type OrderPanik = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderPanik;
export const OrderPanikMoving = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderPanikMoving;
export type OrderPanikMoving = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderPanikMoving;
export const OrderPanikStupor = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderPanikStupor;
export type OrderPanikStupor = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderPanikStupor;
export const OrderStepAwayBase = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderStepAwayBase;
export type OrderStepAwayBase = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderStepAwayBase;
export const OrderStepAwayImmediate = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderStepAwayImmediate;
export type OrderStepAwayImmediate = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderStepAwayImmediate;
export const OrderStepAwayWaiting = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderStepAwayWaiting;
export type OrderStepAwayWaiting = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderStepAwayWaiting;
export const OrderTurn = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderTurn;
export type OrderTurn = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.OrderTurn;
export const BuildUnitUtils = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.BuildUnitUtils;
export type BuildUnitUtils = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.BuildUnitUtils;
export const OrderBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderBuild;
export type OrderBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderBuild;
export const OrderBuildParameters = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderBuildParameters;
export type OrderBuildParameters = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderBuildParameters;
export const OrderBuildSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderBuildSelf;
export type OrderBuildSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderBuildSelf;
export const OrderPreBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderPreBuild;
export type OrderPreBuild = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderPreBuild;
export const OrderPreBuildParameters = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderPreBuildParameters;
export type OrderPreBuildParameters = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderPreBuildParameters;
export const OrderProduce = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderProduce;
export type OrderProduce = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderProduce;
export const OrderProduceAt = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderProduceAt;
export type OrderProduceAt = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderProduceAt;
export const OrderRepair = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderRepair;
export type OrderRepair = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderRepair;
export const OrderRepairParameters = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderRepairParameters;
export type OrderRepairParameters = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderRepairParameters;
export const OrderRepairSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderRepairSelf;
export type OrderRepairSelf = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Producing.OrderRepairSelf;
export const OrderStageStatus = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Stage.OrderStageStatus;
export type OrderStageStatus = HordeClassLibrary.UnitComponents.OrdersSystem.Orders.Stage.OrderStageStatus;
export const ActStubOnDeletion = HordeClassLibrary.UnitComponents.OrdersSystem.Special.ActStubOnDeletion;
export type ActStubOnDeletion = HordeClassLibrary.UnitComponents.OrdersSystem.Special.ActStubOnDeletion;
export const MotionStubOnDeletion = HordeClassLibrary.UnitComponents.OrdersSystem.Special.MotionStubOnDeletion;
export type MotionStubOnDeletion = HordeClassLibrary.UnitComponents.OrdersSystem.Special.MotionStubOnDeletion;
export const OrderStubOnDeletion = HordeClassLibrary.UnitComponents.OrdersSystem.Special.OrderStubOnDeletion;
export type OrderStubOnDeletion = HordeClassLibrary.UnitComponents.OrdersSystem.Special.OrderStubOnDeletion;
export const UnitCommand = HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
export type UnitCommand = HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
export const UnitCommandAutomaticModeParams = HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommandAutomaticModeParams;
export type UnitCommandAutomaticModeParams = HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommandAutomaticModeParams;
export const IUnitProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.IUnitProfessionData;
export type IUnitProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.IUnitProfessionData;
export const AUnitProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.AUnitProfessionData;
export type AUnitProfessionData<TUnitProfessionParams> = HordeClassLibrary.UnitComponents.ProfessionData.AUnitProfessionData<TUnitProfessionParams>;
export const CapturableProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.CapturableProfessionData;
export type CapturableProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.CapturableProfessionData;
export const CompoundProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.CompoundProfessionData;
export type CompoundProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.CompoundProfessionData;
export const HarvesterProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.HarvesterProfessionData;
export type HarvesterProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.HarvesterProfessionData;
export const ChopsCounter = HordeClassLibrary.UnitComponents.ProfessionData.HarvesterProfessionData.ChopsCounter;
export type ChopsCounter = HordeClassLibrary.UnitComponents.ProfessionData.HarvesterProfessionData.ChopsCounter;
export const IUnitContainerProfession = HordeClassLibrary.UnitComponents.ProfessionData.Interfaces.IUnitContainerProfession;
export type IUnitContainerProfession = HordeClassLibrary.UnitComponents.ProfessionData.Interfaces.IUnitContainerProfession;
export const MetalStockProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.MetalStockProfessionData;
export type MetalStockProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.MetalStockProfessionData;
export const MineProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.MineProfessionData;
export type MineProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.MineProfessionData;
export const MovableProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.MovableProfessionData;
export type MovableProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.MovableProfessionData;
export const ReparableProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.ReparableProfessionData;
export type ReparableProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.ReparableProfessionData;
export const SawmillProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.SawmillProfessionData;
export type SawmillProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.SawmillProfessionData;
export const TypeToProfession = HordeClassLibrary.UnitComponents.ProfessionData.TypeToProfession;
export type TypeToProfession = HordeClassLibrary.UnitComponents.ProfessionData.TypeToProfession;
export const UnitProducerProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.UnitProducerProfessionData;
export type UnitProducerProfessionData = HordeClassLibrary.UnitComponents.ProfessionData.UnitProducerProfessionData;
export const BuildingStageUtils = HordeClassLibrary.UnitComponents.Utils.BuildingStageUtils;
export type BuildingStageUtils = HordeClassLibrary.UnitComponents.Utils.BuildingStageUtils;
export const StageInfo = HordeClassLibrary.UnitComponents.Utils.BuildingStageUtils.StageInfo;
export type StageInfo = HordeClassLibrary.UnitComponents.Utils.BuildingStageUtils.StageInfo;
export const CompoundUtils = HordeClassLibrary.UnitComponents.Utils.CompoundUtils;
export type CompoundUtils = HordeClassLibrary.UnitComponents.Utils.CompoundUtils;
export const HarvestUtils = HordeClassLibrary.UnitComponents.Utils.HarvestUtils;
export type HarvestUtils = HordeClassLibrary.UnitComponents.Utils.HarvestUtils;
export const UnitDirectionUtils = HordeClassLibrary.UnitComponents.Utils.UnitDirectionUtils;
export type UnitDirectionUtils = HordeClassLibrary.UnitComponents.Utils.UnitDirectionUtils;
export const UnitGeometryUtils = HordeClassLibrary.UnitComponents.Utils.UnitGeometryUtils;
export type UnitGeometryUtils = HordeClassLibrary.UnitComponents.Utils.UnitGeometryUtils;
export const UnitSpecificationUtils = HordeClassLibrary.UnitComponents.Utils.UnitSpecificationUtils;
export type UnitSpecificationUtils = HordeClassLibrary.UnitComponents.Utils.UnitSpecificationUtils;
export const BaseBuildingBuildSelf = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingBuildSelf;
export type BaseBuildingBuildSelf = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingBuildSelf;
export const BaseBuildingDeath = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingDeath;
export type BaseBuildingDeath = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingDeath;
export const BaseBuildingDoNothing = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingDoNothing;
export type BaseBuildingDoNothing = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingDoNothing;
export const BaseBuildingProduce = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingProduce;
export type BaseBuildingProduce = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingProduce;
export const BaseBuildingProduceAt = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingProduceAt;
export type BaseBuildingProduceAt = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingProduceAt;
export const BaseBuildingRepairSelf = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingRepairSelf;
export type BaseBuildingRepairSelf = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.BaseBuildingRepairSelf;
export const CommonBaseBuilding = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.CommonBaseBuilding;
export type CommonBaseBuilding = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.CommonBaseBuilding;
export const BaseBuildingDestroySelf = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.SpecialStates.BaseBuildingDestroySelf;
export type BaseBuildingDestroySelf = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.SpecialStates.BaseBuildingDestroySelf;
export const BaseBuildingCanBePlaced = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingCanBePlaced;
export type BaseBuildingCanBePlaced = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingCanBePlaced;
export const BaseBuildingCancel = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingCancel;
export type BaseBuildingCancel = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingCancel;
export const BaseBuildingEveryTick = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingEveryTick;
export type BaseBuildingEveryTick = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingEveryTick;
export const BaseBuildingGetCommandType = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingGetCommandType;
export type BaseBuildingGetCommandType = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingGetCommandType;
export const BaseBuildingGetOrder = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingGetOrder;
export type BaseBuildingGetOrder = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingGetOrder;
export const BaseBuildingGetSpeedAtCell = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingGetSpeedAtCell;
export type BaseBuildingGetSpeedAtCell = HordeClassLibrary.UnitComponents.Workers.BaseBuilding.Special.BaseBuildingGetSpeedAtCell;
export const BaseUnitCapture = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitCapture;
export type BaseUnitCapture = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitCapture;
export const BaseUnitDeath = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitDeath;
export type BaseUnitDeath = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitDeath;
export const BaseUnitDoNothing = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitDoNothing;
export type BaseUnitDoNothing = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitDoNothing;
export const BaseUnitHit = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitHit;
export type BaseUnitHit = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitHit;
export const BaseUnitHoldPosition = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitHoldPosition;
export type BaseUnitHoldPosition = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitHoldPosition;
export const BaseUnitMove = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitMove;
export type BaseUnitMove = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitMove;
export const BaseUnitPathFinding = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitPathFinding;
export type BaseUnitPathFinding = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitPathFinding;
export const BaseUnitReload = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitReload;
export type BaseUnitReload = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitReload;
export const BaseUnitTurn = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitTurn;
export type BaseUnitTurn = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitTurn;
export const BaseUnitWait = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitWait;
export type BaseUnitWait = HordeClassLibrary.UnitComponents.Workers.BaseUnit.BaseUnitWait;
export const CommonBaseUnit = HordeClassLibrary.UnitComponents.Workers.BaseUnit.CommonBaseUnit;
export type CommonBaseUnit = HordeClassLibrary.UnitComponents.Workers.BaseUnit.CommonBaseUnit;
export const AttackPriorityHelper = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.AnalyzeHelpers.AttackPriorityHelper;
export type AttackPriorityHelper = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.AnalyzeHelpers.AttackPriorityHelper;
export const BaseUnitAnalyzeSituation = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitAnalyzeSituation;
export type BaseUnitAnalyzeSituation = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitAnalyzeSituation;
export const BaseUnitCanBePlaced = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitCanBePlaced;
export type BaseUnitCanBePlaced = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitCanBePlaced;
export const BaseUnitEveryTick = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitEveryTick;
export type BaseUnitEveryTick = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitEveryTick;
export const BaseUnitGetCommandType = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitGetCommandType;
export type BaseUnitGetCommandType = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitGetCommandType;
export const BaseUnitGetOrder = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitGetOrder;
export type BaseUnitGetOrder = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitGetOrder;
export const BaseUnitGetSpeedAtCell = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitGetSpeedAtCell;
export type BaseUnitGetSpeedAtCell = HordeClassLibrary.UnitComponents.Workers.BaseUnit.Special.BaseUnitGetSpeedAtCell;
export const BridgeDeath = HordeClassLibrary.UnitComponents.Workers.Buildings.Bridge.BridgeDeath;
export type BridgeDeath = HordeClassLibrary.UnitComponents.Workers.Buildings.Bridge.BridgeDeath;
export const BridgeEveryTick = HordeClassLibrary.UnitComponents.Workers.Buildings.Bridge.BridgeEveryTick;
export type BridgeEveryTick = HordeClassLibrary.UnitComponents.Workers.Buildings.Bridge.BridgeEveryTick;
export const MineCanBePlaced = HordeClassLibrary.UnitComponents.Workers.Buildings.Mine.MineCanBePlaced;
export type MineCanBePlaced = HordeClassLibrary.UnitComponents.Workers.Buildings.Mine.MineCanBePlaced;
export const MineDoNothing = HordeClassLibrary.UnitComponents.Workers.Buildings.Mine.MineDoNothing;
export type MineDoNothing = HordeClassLibrary.UnitComponents.Workers.Buildings.Mine.MineDoNothing;
export const MineUtils = HordeClassLibrary.UnitComponents.Workers.Buildings.Mine.MineUtils;
export type MineUtils = HordeClassLibrary.UnitComponents.Workers.Buildings.Mine.MineUtils;
export const PassiveResourcesIncomeWorker = HordeClassLibrary.UnitComponents.Workers.Buildings.Other.PassiveResourcesIncomeWorker;
export type PassiveResourcesIncomeWorker = HordeClassLibrary.UnitComponents.Workers.Buildings.Other.PassiveResourcesIncomeWorker;
export const KickAwayFromEntranceEveryTick = HordeClassLibrary.UnitComponents.Workers.Buildings.ProducingBuilding.KickAwayFromEntranceEveryTick;
export type KickAwayFromEntranceEveryTick = HordeClassLibrary.UnitComponents.Workers.Buildings.ProducingBuilding.KickAwayFromEntranceEveryTick;
export const LumberStockEveryTick = HordeClassLibrary.UnitComponents.Workers.Buildings.Stock.LumberStockEveryTick;
export type LumberStockEveryTick = HordeClassLibrary.UnitComponents.Workers.Buildings.Stock.LumberStockEveryTick;
export const MetalStockEveryTick = HordeClassLibrary.UnitComponents.Workers.Buildings.Stock.MetalStockEveryTick;
export type MetalStockEveryTick = HordeClassLibrary.UnitComponents.Workers.Buildings.Stock.MetalStockEveryTick;
export const ResourcesStockEveryTick = HordeClassLibrary.UnitComponents.Workers.Buildings.Stock.ResourcesStockEveryTick;
export type ResourcesStockEveryTick = HordeClassLibrary.UnitComponents.Workers.Buildings.Stock.ResourcesStockEveryTick;
export const TowerAnalyzeSituation = HordeClassLibrary.UnitComponents.Workers.Buildings.Tower.Special.TowerAnalyzeSituation;
export type TowerAnalyzeSituation = HordeClassLibrary.UnitComponents.Workers.Buildings.Tower.Special.TowerAnalyzeSituation;
export const TowerHit = HordeClassLibrary.UnitComponents.Workers.Buildings.Tower.TowerHit;
export type TowerHit = HordeClassLibrary.UnitComponents.Workers.Buildings.Tower.TowerHit;
export const TowerReload = HordeClassLibrary.UnitComponents.Workers.Buildings.Tower.TowerReload;
export type TowerReload = HordeClassLibrary.UnitComponents.Workers.Buildings.Tower.TowerReload;
export const AUnitWorker = HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorker;
export type AUnitWorker = HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorker;
export const AUnitWorkerCommon = HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon;
export type AUnitWorkerCommon = HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon;
export const DelegateWork = HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon.DelegateWork;
export type DelegateWork = HordeClassLibrary.UnitComponents.Workers.Interfaces.AUnitWorkerCommon.DelegateWork;
export const AUnitWorkerAnalyzeSituation = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerAnalyzeSituation;
export type AUnitWorkerAnalyzeSituation = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerAnalyzeSituation;
export const DelegateAnalyzeSituation = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerAnalyzeSituation.DelegateAnalyzeSituation;
export type DelegateAnalyzeSituation = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerAnalyzeSituation.DelegateAnalyzeSituation;
export const AUnitWorkerCanBePlaced = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced;
export type AUnitWorkerCanBePlaced = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced;
export const DelegateCanBePlacedByRealMap = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced.DelegateCanBePlacedByRealMap;
export type DelegateCanBePlacedByRealMap = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced.DelegateCanBePlacedByRealMap;
export const DelegateCanBePlacedByKnownMap = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced.DelegateCanBePlacedByKnownMap;
export type DelegateCanBePlacedByKnownMap = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCanBePlaced.DelegateCanBePlacedByKnownMap;
export const AUnitWorkerCancel = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCancel;
export type AUnitWorkerCancel = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCancel;
export const DelegateCancel = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCancel.DelegateCancel;
export type DelegateCancel = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerCancel.DelegateCancel;
export const AUnitWorkerEveryTick = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick;
export type AUnitWorkerEveryTick = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick;
export const DelegateProcessTick = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick.DelegateProcessTick;
export type DelegateProcessTick = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerEveryTick.DelegateProcessTick;
export const AUnitWorkerGetCommandType = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetCommandType;
export type AUnitWorkerGetCommandType = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetCommandType;
export const DelegateGetCommandType = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetCommandType.DelegateGetCommandType;
export type DelegateGetCommandType = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetCommandType.DelegateGetCommandType;
export const AUnitWorkerGetOrder = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetOrder;
export type AUnitWorkerGetOrder = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetOrder;
export const DelegateGetOrder = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetOrder.DelegateGetOrder;
export type DelegateGetOrder = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetOrder.DelegateGetOrder;
export const AUnitWorkerGetSpeedAtCell = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell;
export type AUnitWorkerGetSpeedAtCell = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell;
export const DelegateGetSpeedAtCellByRealMap = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell.DelegateGetSpeedAtCellByRealMap;
export type DelegateGetSpeedAtCellByRealMap = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell.DelegateGetSpeedAtCellByRealMap;
export const DelegateGetSpeedAtCellByKnownMap = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell.DelegateGetSpeedAtCellByKnownMap;
export type DelegateGetSpeedAtCellByKnownMap = HordeClassLibrary.UnitComponents.Workers.Interfaces.Special.AUnitWorkerGetSpeedAtCell.DelegateGetSpeedAtCellByKnownMap;
export const ScriptUnitWorkerAnalyzeSituation = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerAnalyzeSituation;
export type ScriptUnitWorkerAnalyzeSituation = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerAnalyzeSituation;
export const ScriptUnitWorkerCanBePlaced = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerCanBePlaced;
export type ScriptUnitWorkerCanBePlaced = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerCanBePlaced;
export const CanBePlacedByKnownMapJsResult = HordeClassLibrary.UnitComponents.Workers.Script.CanBePlacedByKnownMapJsResult;
export type CanBePlacedByKnownMapJsResult = HordeClassLibrary.UnitComponents.Workers.Script.CanBePlacedByKnownMapJsResult;
export const CanBePlacedByRealMapJsResult = HordeClassLibrary.UnitComponents.Workers.Script.CanBePlacedByRealMapJsResult;
export type CanBePlacedByRealMapJsResult = HordeClassLibrary.UnitComponents.Workers.Script.CanBePlacedByRealMapJsResult;
export const ScriptUnitWorkerCancel = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerCancel;
export type ScriptUnitWorkerCancel = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerCancel;
export const ScriptUnitWorkerEveryTick = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerEveryTick;
export type ScriptUnitWorkerEveryTick = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerEveryTick;
export const ScriptUnitWorkerGetCommandType = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerGetCommandType;
export type ScriptUnitWorkerGetCommandType = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerGetCommandType;
export const ScriptUnitWorkerGetOrder = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerGetOrder;
export type ScriptUnitWorkerGetOrder = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerGetOrder;
export const ScriptUnitWorkerGetSpeedAtCell = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerGetSpeedAtCell;
export type ScriptUnitWorkerGetSpeedAtCell = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerGetSpeedAtCell;
export const GetSpeedAtCellByKnownMapJsResult = HordeClassLibrary.UnitComponents.Workers.Script.GetSpeedAtCellByKnownMapJsResult;
export type GetSpeedAtCellByKnownMapJsResult = HordeClassLibrary.UnitComponents.Workers.Script.GetSpeedAtCellByKnownMapJsResult;
export const GetSpeedAtCellByRealMapJsResult = HordeClassLibrary.UnitComponents.Workers.Script.GetSpeedAtCellByRealMapJsResult;
export type GetSpeedAtCellByRealMapJsResult = HordeClassLibrary.UnitComponents.Workers.Script.GetSpeedAtCellByRealMapJsResult;
export const ScriptUnitWorkerState = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerState;
export type ScriptUnitWorkerState = HordeClassLibrary.UnitComponents.Workers.Script.ScriptUnitWorkerState;
export const UnitWorkerAnalyzeSituationStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerAnalyzeSituationStub;
export type UnitWorkerAnalyzeSituationStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerAnalyzeSituationStub;
export const UnitWorkerCanBePlacedStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerCanBePlacedStub;
export type UnitWorkerCanBePlacedStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerCanBePlacedStub;
export const UnitWorkerCancelStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerCancelStub;
export type UnitWorkerCancelStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerCancelStub;
export const UnitWorkerEveryTickStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerEveryTickStub;
export type UnitWorkerEveryTickStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerEveryTickStub;
export const UnitWorkerGetCommandTypeStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerGetCommandTypeStub;
export type UnitWorkerGetCommandTypeStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerGetCommandTypeStub;
export const UnitWorkerGetOrderStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerGetOrderStub;
export type UnitWorkerGetOrderStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerGetOrderStub;
export const UnitWorkerGetSpeedAtCellStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerGetSpeedAtCellStub;
export type UnitWorkerGetSpeedAtCellStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerGetSpeedAtCellStub;
export const UnitWorkerStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerStub;
export type UnitWorkerStub = HordeClassLibrary.UnitComponents.Workers.Stubs.UnitWorkerStub;
export const HealAuraEveryTick = HordeClassLibrary.UnitComponents.Workers.Units.Aura.HealAuraEveryTick;
export type HealAuraEveryTick = HordeClassLibrary.UnitComponents.Workers.Units.Aura.HealAuraEveryTick;
export const WorkerBuild = HordeClassLibrary.UnitComponents.Workers.Units.Builder.WorkerBuild;
export type WorkerBuild = HordeClassLibrary.UnitComponents.Workers.Units.Builder.WorkerBuild;
export const WorkerBuildProgressUtils = HordeClassLibrary.UnitComponents.Workers.Units.Builder.WorkerBuildProgressUtils;
export type WorkerBuildProgressUtils = HordeClassLibrary.UnitComponents.Workers.Units.Builder.WorkerBuildProgressUtils;
export const WorkerPreBuild = HordeClassLibrary.UnitComponents.Workers.Units.Builder.WorkerPreBuild;
export type WorkerPreBuild = HordeClassLibrary.UnitComponents.Workers.Units.Builder.WorkerPreBuild;
export const WorkerRepair = HordeClassLibrary.UnitComponents.Workers.Units.Builder.WorkerRepair;
export type WorkerRepair = HordeClassLibrary.UnitComponents.Workers.Units.Builder.WorkerRepair;
export const WorkerRepairProgressUtils = HordeClassLibrary.UnitComponents.Workers.Units.Builder.WorkerRepairProgressUtils;
export type WorkerRepairProgressUtils = HordeClassLibrary.UnitComponents.Workers.Units.Builder.WorkerRepairProgressUtils;
export const HarverstWorkerUtils = HordeClassLibrary.UnitComponents.Workers.Units.Harvester.HarverstWorkerUtils;
export type HarverstWorkerUtils = HordeClassLibrary.UnitComponents.Workers.Units.Harvester.HarverstWorkerUtils;
export const HarvesterChopDown = HordeClassLibrary.UnitComponents.Workers.Units.Harvester.HarvesterChopDown;
export type HarvesterChopDown = HordeClassLibrary.UnitComponents.Workers.Units.Harvester.HarvesterChopDown;
export const HarvesterEveryTick = HordeClassLibrary.UnitComponents.Workers.Units.Harvester.HarvesterEveryTick;
export type HarvesterEveryTick = HordeClassLibrary.UnitComponents.Workers.Units.Harvester.HarvesterEveryTick;
export const HarvesterGatherResource = HordeClassLibrary.UnitComponents.Workers.Units.Harvester.HarvesterGatherResource;
export type HarvesterGatherResource = HordeClassLibrary.UnitComponents.Workers.Units.Harvester.HarvesterGatherResource;
export const HarvesterTransferResource = HordeClassLibrary.UnitComponents.Workers.Units.Harvester.HarvesterTransferResource;
export type HarvesterTransferResource = HordeClassLibrary.UnitComponents.Workers.Units.Harvester.HarvesterTransferResource;
export const MachineEveryTick = HordeClassLibrary.UnitComponents.Workers.Units.Machine.MachineEveryTick;
export type MachineEveryTick = HordeClassLibrary.UnitComponents.Workers.Units.Machine.MachineEveryTick;
export const ProducingWorkerUtils = HordeClassLibrary.UnitComponents.Workers.Utils.ProducingWorkerUtils;
export type ProducingWorkerUtils = HordeClassLibrary.UnitComponents.Workers.Utils.ProducingWorkerUtils;
export const DescriptionExpander = HordeClassLibrary.Utils.DescriptionExpander;
export type DescriptionExpander = HordeClassLibrary.Utils.DescriptionExpander;
export const EnumUtils = HordeClassLibrary.Utils.EnumUtils;
export type EnumUtils = HordeClassLibrary.Utils.EnumUtils;
export const FromString = HordeClassLibrary.Utils.FromString;
export type FromString = HordeClassLibrary.Utils.FromString;
export const GeometryUtils = HordeClassLibrary.Utils.GeometryUtils;
export type GeometryUtils = HordeClassLibrary.Utils.GeometryUtils;
export const CheatsGlobals = HordeClassLibrary.World.Const.CheatsGlobals;
export type CheatsGlobals = HordeClassLibrary.World.Const.CheatsGlobals;
export const DebugConstants = HordeClassLibrary.World.Const.DebugConstants;
export type DebugConstants = HordeClassLibrary.World.Const.DebugConstants;
export const SettingsConstants = HordeClassLibrary.World.Const.SettingsConstants;
export type SettingsConstants = HordeClassLibrary.World.Const.SettingsConstants;
export const TimeConverter = HordeClassLibrary.World.Const.TimeConverter;
export type TimeConverter = HordeClassLibrary.World.Const.TimeConverter;
export const UidPrefixes = HordeClassLibrary.World.Const.UidPrefixes;
export type UidPrefixes = HordeClassLibrary.World.Const.UidPrefixes;
export const UnitConstants = HordeClassLibrary.World.Const.UnitConstants;
export type UnitConstants = HordeClassLibrary.World.Const.UnitConstants;
export const WorldConstants = HordeClassLibrary.World.Const.WorldConstants;
export type WorldConstants = HordeClassLibrary.World.Const.WorldConstants;
export const BattleContext = HordeClassLibrary.World.Context.BattleContext;
export type BattleContext = HordeClassLibrary.World.Context.BattleContext;
export const BattleParameters = HordeClassLibrary.World.Context.BattleParameters;
export type BattleParameters = HordeClassLibrary.World.Context.BattleParameters;
export const BattleSettings = HordeClassLibrary.World.Context.BattleSettings;
export type BattleSettings = HordeClassLibrary.World.Context.BattleSettings;
export const UnitParameters = HordeClassLibrary.World.Context.Parameters.UnitParameters;
export type UnitParameters = HordeClassLibrary.World.Context.Parameters.UnitParameters;
export const WindParameters = HordeClassLibrary.World.Context.Parameters.WindParameters;
export type WindParameters = HordeClassLibrary.World.Context.Parameters.WindParameters;
export const WorldParameters = HordeClassLibrary.World.Context.Parameters.WorldParameters;
export type WorldParameters = HordeClassLibrary.World.Context.Parameters.WorldParameters;
export const Episode = HordeClassLibrary.World.Episode;
export type Episode = HordeClassLibrary.World.Episode;
export const GeometryPresets = HordeClassLibrary.World.Geometry.GeometryPresets;
export type GeometryPresets = HordeClassLibrary.World.Geometry.GeometryPresets;
export const Nation = HordeClassLibrary.World.Nation;
export type Nation = HordeClassLibrary.World.Nation;
export const AScenaObject = HordeClassLibrary.World.Objects.AScenaObject;
export type AScenaObject = HordeClassLibrary.World.Objects.AScenaObject;
export const BaseBullet = HordeClassLibrary.World.Objects.Bullets.BaseBullet;
export type BaseBullet = HordeClassLibrary.World.Objects.Bullets.BaseBullet;
export const BaseBulletFactory = HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory;
export type BaseBulletFactory = HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory;
export const CreateInstanceDelegate = HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory.CreateInstanceDelegate;
export type CreateInstanceDelegate = HordeClassLibrary.World.Objects.Bullets.BaseBullet.BaseBulletFactory.CreateInstanceDelegate;
export const BulletEmittingArgs = HordeClassLibrary.World.Objects.Bullets.BulletEmittingArgs;
export type BulletEmittingArgs = HordeClassLibrary.World.Objects.Bullets.BulletEmittingArgs;
export const BulletState = HordeClassLibrary.World.Objects.Bullets.BulletState;
export type BulletState = HordeClassLibrary.World.Objects.Bullets.BulletState;
export const BulletVisual = HordeClassLibrary.World.Objects.Bullets.BulletVisual;
export type BulletVisual = HordeClassLibrary.World.Objects.Bullets.BulletVisual;
export const BallistaArrowBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.BallistaArrowBullet;
export type BallistaArrowBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.BallistaArrowBullet;
export const BallistaArrowBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.BallistaArrowBullet.BallistaArrowBulletFactory;
export type BallistaArrowBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.BallistaArrowBullet.BallistaArrowBulletFactory;
export const BaseArrowBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.BaseArrowBullet;
export type BaseArrowBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.BaseArrowBullet;
export const FireArrowBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.FireArrowBullet;
export type FireArrowBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.FireArrowBullet;
export const FireArrowBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.FireArrowBullet.FireArrowBulletFactory;
export type FireArrowBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.FireArrowBullet.FireArrowBulletFactory;
export const SimpleArrowBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.SimpleArrowBullet;
export type SimpleArrowBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.SimpleArrowBullet;
export const SimpleArrowBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.SimpleArrowBullet.SimpleArrowBulletFactory;
export type SimpleArrowBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Arrows.SimpleArrowBullet.SimpleArrowBulletFactory;
export const BaseFireBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.BaseFireBullet;
export type BaseFireBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.BaseFireBullet;
export const FireBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.BaseFireBullet.FireBulletFactory;
export type FireBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.BaseFireBullet.FireBulletFactory;
export const FireInForestBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.FireInForestBullet;
export type FireInForestBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.FireInForestBullet;
export const FireOnUnitBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.FireOnUnitBullet;
export type FireOnUnitBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.FireOnUnitBullet;
export const BurnStage = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.Stuff.BurnStage;
export type BurnStage = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.Stuff.BurnStage;
export const FirePhase = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.Stuff.FirePhase;
export type FirePhase = HordeClassLibrary.World.Objects.Bullets.Implementations.Fire.Stuff.FirePhase;
export const LightningBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Magic.LightningBullet;
export type LightningBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Magic.LightningBullet;
export const LightningBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Magic.LightningBullet.LightningBulletFactory;
export type LightningBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Magic.LightningBullet.LightningBulletFactory;
export const LightningStormBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Magic.LightningStormBullet;
export type LightningStormBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Magic.LightningStormBullet;
export const LightningStormBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Magic.LightningStormBullet.LightningStormBulletFactory;
export type LightningStormBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Magic.LightningStormBullet.LightningStormBulletFactory;
export const BaseMeleBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.BaseMeleBullet;
export type BaseMeleBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.BaseMeleBullet;
export const BaseMeleBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.BaseMeleBullet.BaseMeleBulletFactory;
export type BaseMeleBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.BaseMeleBullet.BaseMeleBulletFactory;
export const SimpleMeleBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.SimpleMeleBullet;
export type SimpleMeleBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.SimpleMeleBullet;
export const SimpleMeleBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.SimpleMeleBullet.SimpleMeleBulletFactory;
export type SimpleMeleBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Mele.SimpleMeleBullet.SimpleMeleBulletFactory;
export const BrokenFragmentBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.BrokenFragmentBullet;
export type BrokenFragmentBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.BrokenFragmentBullet;
export const BrokenFragmentBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.BrokenFragmentBullet.BrokenFragmentBulletFactory;
export type BrokenFragmentBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.BrokenFragmentBullet.BrokenFragmentBulletFactory;
export const CatapultBombBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.CatapultBombBullet;
export type CatapultBombBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.CatapultBombBullet;
export const CatapultBombBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.CatapultBombBullet.CatapultBombBulletFactory;
export type CatapultBombBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.CatapultBombBullet.CatapultBombBulletFactory;
export const FireballBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.FireballBullet;
export type FireballBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.FireballBullet;
export const FireballBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.FireballBullet.FireballBulletFactory;
export type FireballBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.FireballBullet.FireballBulletFactory;
export const FireballV2BulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.FireballBullet.FireballV2BulletFactory;
export type FireballV2BulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.FireballBullet.FireballV2BulletFactory;
export const DragonFireBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.FireballBullet.DragonFireBulletFactory;
export type DragonFireBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.FireballBullet.DragonFireBulletFactory;
export const ScriptBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.ScriptBullet;
export type ScriptBullet = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.ScriptBullet;
export const ScriptBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.ScriptBullet.ScriptBulletFactory;
export type ScriptBulletFactory = HordeClassLibrary.World.Objects.Bullets.Implementations.Other.ScriptBullet.ScriptBulletFactory;
export const ShotParams = HordeClassLibrary.World.Objects.Bullets.ShotParams;
export type ShotParams = HordeClassLibrary.World.Objects.Bullets.ShotParams;
export const BaseGear = HordeClassLibrary.World.Objects.Gears.BaseGear;
export type BaseGear = HordeClassLibrary.World.Objects.Gears.BaseGear;
export const GearState = HordeClassLibrary.World.Objects.Gears.GearState;
export type GearState = HordeClassLibrary.World.Objects.Gears.GearState;
export const ARuleContext = HordeClassLibrary.World.Objects.Rules.ARuleContext;
export type ARuleContext = HordeClassLibrary.World.Objects.Rules.ARuleContext;
export const ExistenceRuleContext = HordeClassLibrary.World.Objects.Rules.ExistenceRuleContext;
export type ExistenceRuleContext = HordeClassLibrary.World.Objects.Rules.ExistenceRuleContext;
export const PopulationRuleContext = HordeClassLibrary.World.Objects.Rules.PopulationRuleContext;
export type PopulationRuleContext = HordeClassLibrary.World.Objects.Rules.PopulationRuleContext;
export const ProductionLimitRuleContext = HordeClassLibrary.World.Objects.Rules.ProductionLimitRuleContext;
export type ProductionLimitRuleContext = HordeClassLibrary.World.Objects.Rules.ProductionLimitRuleContext;
export const UnitsAtSameTimeLimitRuleContext = HordeClassLibrary.World.Objects.Rules.UnitsAtSameTimeLimitRuleContext;
export type UnitsAtSameTimeLimitRuleContext = HordeClassLibrary.World.Objects.Rules.UnitsAtSameTimeLimitRuleContext;
export const ASoundEffect = HordeClassLibrary.World.Objects.SoundEffects.ASoundEffect;
export type ASoundEffect = HordeClassLibrary.World.Objects.SoundEffects.ASoundEffect;
export const ReleasedEventArgs = HordeClassLibrary.World.Objects.SoundEffects.ASoundEffect.ReleasedEventArgs;
export type ReleasedEventArgs = HordeClassLibrary.World.Objects.SoundEffects.ASoundEffect.ReleasedEventArgs;
export const SimpleSoundEffect = HordeClassLibrary.World.Objects.SoundEffects.SimpleSoundEffect;
export type SimpleSoundEffect = HordeClassLibrary.World.Objects.SoundEffects.SimpleSoundEffect;
export const SoundEffectState = HordeClassLibrary.World.Objects.SoundEffects.SoundEffectState;
export type SoundEffectState = HordeClassLibrary.World.Objects.SoundEffects.SoundEffectState;
export const SoundEffectTransition = HordeClassLibrary.World.Objects.SoundEffects.SoundEffectTransition;
export type SoundEffectTransition = HordeClassLibrary.World.Objects.SoundEffects.SoundEffectTransition;
export const CanControlDelegate = HordeClassLibrary.World.Objects.Squads.CanControlDelegate;
export type CanControlDelegate = HordeClassLibrary.World.Objects.Squads.CanControlDelegate;
export const Squad = HordeClassLibrary.World.Objects.Squads.Squad;
export type Squad = HordeClassLibrary.World.Objects.Squads.Squad;
export const SquadGiveOrderEventArgs = HordeClassLibrary.World.Objects.Squads.Squad.SquadGiveOrderEventArgs;
export type SquadGiveOrderEventArgs = HordeClassLibrary.World.Objects.Squads.Squad.SquadGiveOrderEventArgs;
export const SquadsNumberedCollection = HordeClassLibrary.World.Objects.Squads.SquadsNumberedCollection;
export type SquadsNumberedCollection = HordeClassLibrary.World.Objects.Squads.SquadsNumberedCollection;
export const ChangeTileOptions = HordeClassLibrary.World.Objects.Tiles.ChangeTileOptions;
export type ChangeTileOptions = HordeClassLibrary.World.Objects.Tiles.ChangeTileOptions;
export const ITileConfigProvider = HordeClassLibrary.World.Objects.Tiles.ITileConfigProvider;
export type ITileConfigProvider = HordeClassLibrary.World.Objects.Tiles.ITileConfigProvider;
export const KnownResourceTile = HordeClassLibrary.World.Objects.Tiles.KnownResourceTile;
export type KnownResourceTile = HordeClassLibrary.World.Objects.Tiles.KnownResourceTile;
export const KnownTile = HordeClassLibrary.World.Objects.Tiles.KnownTile;
export type KnownTile = HordeClassLibrary.World.Objects.Tiles.KnownTile;
export const ResourceTile = HordeClassLibrary.World.Objects.Tiles.ResourceTile;
export type ResourceTile = HordeClassLibrary.World.Objects.Tiles.ResourceTile;
export const ResourceTileModel = HordeClassLibrary.World.Objects.Tiles.ResourceTileModel;
export type ResourceTileModel = HordeClassLibrary.World.Objects.Tiles.ResourceTileModel;
export const ResourceTileType = HordeClassLibrary.World.Objects.Tiles.ResourceTileType;
export type ResourceTileType = HordeClassLibrary.World.Objects.Tiles.ResourceTileType;
export const Tile = HordeClassLibrary.World.Objects.Tiles.Tile;
export type Tile = HordeClassLibrary.World.Objects.Tiles.Tile;
export const TileConfigPicker = HordeClassLibrary.World.Objects.Tiles.TileConfigPicker;
export type TileConfigPicker = HordeClassLibrary.World.Objects.Tiles.TileConfigPicker;
export const ReplacementParameters = HordeClassLibrary.World.Objects.Tiles.TileConfigPicker.ReplacementParameters;
export type ReplacementParameters = HordeClassLibrary.World.Objects.Tiles.TileConfigPicker.ReplacementParameters;
export const TileModel = HordeClassLibrary.World.Objects.Tiles.TileModel;
export type TileModel = HordeClassLibrary.World.Objects.Tiles.TileModel;
export const DeleteUnitParameters = HordeClassLibrary.World.Objects.Units.DeleteUnitParameters;
export type DeleteUnitParameters = HordeClassLibrary.World.Objects.Units.DeleteUnitParameters;
export const IKnownOrRealUnit = HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit;
export type IKnownOrRealUnit = HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit;
export const KnownUnit = HordeClassLibrary.World.Objects.Units.KnownUnit;
export type KnownUnit = HordeClassLibrary.World.Objects.Units.KnownUnit;
export const Visibility = HordeClassLibrary.World.Objects.Units.KnownUnit.Visibility;
export type Visibility = HordeClassLibrary.World.Objects.Units.KnownUnit.Visibility;
export const KnownUnitCell = HordeClassLibrary.World.Objects.Units.KnownUnitCell;
export type KnownUnitCell = HordeClassLibrary.World.Objects.Units.KnownUnitCell;
export const KnownUnitRegion = HordeClassLibrary.World.Objects.Units.KnownUnitRegion;
export type KnownUnitRegion = HordeClassLibrary.World.Objects.Units.KnownUnitRegion;
export const ProducedUnitParameters = HordeClassLibrary.World.Objects.Units.ProducedUnitParameters;
export type ProducedUnitParameters = HordeClassLibrary.World.Objects.Units.ProducedUnitParameters;
export const ReplaceUnitFlags = HordeClassLibrary.World.Objects.Units.ReplaceUnitFlags;
export type ReplaceUnitFlags = HordeClassLibrary.World.Objects.Units.ReplaceUnitFlags;
export const ReplaceUnitParameters = HordeClassLibrary.World.Objects.Units.ReplaceUnitParameters;
export type ReplaceUnitParameters = HordeClassLibrary.World.Objects.Units.ReplaceUnitParameters;
export const SpawnUnitParameters = HordeClassLibrary.World.Objects.Units.SpawnUnitParameters;
export type SpawnUnitParameters = HordeClassLibrary.World.Objects.Units.SpawnUnitParameters;
export const Unit = HordeClassLibrary.World.Objects.Units.Unit;
export type Unit = HordeClassLibrary.World.Objects.Units.Unit;
export const TickEndEventArgs = HordeClassLibrary.World.Objects.Units.Unit.TickEndEventArgs;
export type TickEndEventArgs = HordeClassLibrary.World.Objects.Units.Unit.TickEndEventArgs;
export const UnitIdLabel = HordeClassLibrary.World.Objects.Units.UnitIdLabel;
export type UnitIdLabel = HordeClassLibrary.World.Objects.Units.UnitIdLabel;
export const UnitModel = HordeClassLibrary.World.Objects.Units.UnitModel;
export type UnitModel = HordeClassLibrary.World.Objects.Units.UnitModel;
export const UnitModelsFactory = HordeClassLibrary.World.Objects.Units.UnitModelsFactory;
export type UnitModelsFactory = HordeClassLibrary.World.Objects.Units.UnitModelsFactory;
export const UnitPositionModel = HordeClassLibrary.World.Objects.Units.UnitPositionModel;
export type UnitPositionModel = HordeClassLibrary.World.Objects.Units.UnitPositionModel;
export const UnitsCollection = HordeClassLibrary.World.Objects.Units.UnitsCollection;
export type UnitsCollection = HordeClassLibrary.World.Objects.Units.UnitsCollection;
export const AnimBasedVisualEffect = HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect;
export type AnimBasedVisualEffect = HordeClassLibrary.World.Objects.VisualEffects.AnimBasedVisualEffect;
export const AVisualEffect = HordeClassLibrary.World.Objects.VisualEffects.AVisualEffect;
export type AVisualEffect = HordeClassLibrary.World.Objects.VisualEffects.AVisualEffect;
export const AnimBasedVisualEffectCreationParams = HordeClassLibrary.World.Objects.VisualEffects.CreationParameters.AnimBasedVisualEffectCreationParams;
export type AnimBasedVisualEffectCreationParams = HordeClassLibrary.World.Objects.VisualEffects.CreationParameters.AnimBasedVisualEffectCreationParams;
export const BulletAnimEffectCreationParams = HordeClassLibrary.World.Objects.VisualEffects.CreationParameters.BulletAnimEffectCreationParams;
export type BulletAnimEffectCreationParams = HordeClassLibrary.World.Objects.VisualEffects.CreationParameters.BulletAnimEffectCreationParams;
export const AVisualEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory;
export type AVisualEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory;
export const CreateInstanceDelegate = HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory.CreateInstanceDelegate;
export type CreateInstanceDelegate = HordeClassLibrary.World.Objects.VisualEffects.Factories.AVisualEffectFactory.CreateInstanceDelegate;
export const BuildingFlagEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.BuildingFlagEffect;
export type BuildingFlagEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.BuildingFlagEffect;
export const BuildingFlagEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.BuildingFlagEffect.BuildingFlagEffectFactory;
export type BuildingFlagEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.BuildingFlagEffect.BuildingFlagEffectFactory;
export const SingleAnimEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleAnimEffect;
export type SingleAnimEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleAnimEffect;
export const BulletAnimBasedEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleAnimEffect.BulletAnimBasedEffectFactory;
export type BulletAnimBasedEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleAnimEffect.BulletAnimBasedEffectFactory;
export const DecayEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.DecayEffect;
export type DecayEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.DecayEffect;
export const DecayEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.DecayEffect.DecayEffectFactory;
export type DecayEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.DecayEffect.DecayEffectFactory;
export const MovingEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.MovingEffect;
export type MovingEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.MovingEffect;
export const MovingEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.MovingEffect.MovingEffectFactory;
export type MovingEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.MovingEffect.MovingEffectFactory;
export const SingleAnimEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleAnimEffect.SingleAnimEffectFactory;
export type SingleAnimEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleAnimEffect.SingleAnimEffectFactory;
export const SingleFrameEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleFrameEffect;
export type SingleFrameEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleFrameEffect;
export const SingleFrameEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleFrameEffect.SingleFrameEffectFactory;
export type SingleFrameEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.SingleFrameEffect.SingleFrameEffectFactory;
export const StickyEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.StickyEffect;
export type StickyEffect = HordeClassLibrary.World.Objects.VisualEffects.Implementations.StickyEffect;
export const StickyEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.StickyEffect.StickyEffectFactory;
export type StickyEffectFactory = HordeClassLibrary.World.Objects.VisualEffects.Implementations.StickyEffect.StickyEffectFactory;
export const GeometryVisualEffect = HordeClassLibrary.World.Objects.VisualEffects.GeometryVisualEffect;
export type GeometryVisualEffect = HordeClassLibrary.World.Objects.VisualEffects.GeometryVisualEffect;
export const CreationArgs = HordeClassLibrary.World.Objects.VisualEffects.GeometryVisualEffect.CreationArgs;
export type CreationArgs = HordeClassLibrary.World.Objects.VisualEffects.GeometryVisualEffect.CreationArgs;
export const StringVisualEffect = HordeClassLibrary.World.Objects.VisualEffects.StringVisualEffect;
export type StringVisualEffect = HordeClassLibrary.World.Objects.VisualEffects.StringVisualEffect;
export const CreationArgs = HordeClassLibrary.World.Objects.VisualEffects.StringVisualEffect.CreationArgs;
export type CreationArgs = HordeClassLibrary.World.Objects.VisualEffects.StringVisualEffect.CreationArgs;
export const VisualEffectFogOfWarMode = HordeClassLibrary.World.Objects.VisualEffects.VisualEffectFogOfWarMode;
export type VisualEffectFogOfWarMode = HordeClassLibrary.World.Objects.VisualEffects.VisualEffectFogOfWarMode;
export const VisualEffectState = HordeClassLibrary.World.Objects.VisualEffects.VisualEffectState;
export type VisualEffectState = HordeClassLibrary.World.Objects.VisualEffects.VisualEffectState;
export const ScenaDescriptor = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor;
export type ScenaDescriptor = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptor;
export const ScenaDescriptorsCollection = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptorsCollection;
export type ScenaDescriptorsCollection = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptorsCollection;
export const ScenaFileInfo = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaFileInfo;
export type ScenaFileInfo = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaFileInfo;
export const ScenaHashInfo = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaHashInfo;
export type ScenaHashInfo = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaHashInfo;
export const ScenaInLobby = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaInLobby;
export type ScenaInLobby = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaInLobby;
export const ScenaMinimapData = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaMinimapData;
export type ScenaMinimapData = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaMinimapData;
export const ScenaStamp = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaStamp;
export type ScenaStamp = HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaStamp;
export const LandscapeMapModification = HordeClassLibrary.World.ScenaComponents.Intrinsics.LandscapeMapModification;
export type LandscapeMapModification = HordeClassLibrary.World.ScenaComponents.Intrinsics.LandscapeMapModification;
export const ResourcesMapModification = HordeClassLibrary.World.ScenaComponents.Intrinsics.ResourcesMapModification;
export type ResourcesMapModification = HordeClassLibrary.World.ScenaComponents.Intrinsics.ResourcesMapModification;
export const ScenaFormat = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaFormat;
export type ScenaFormat = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaFormat;
export const ScenaGlobalObjects = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaGlobalObjects;
export type ScenaGlobalObjects = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaGlobalObjects;
export const ScenaObjectsCollection = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsCollection;
export type ScenaObjectsCollection<TScenaObject> = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsCollection<TScenaObject>;
export const ScenaBulletsCollection = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaBulletsCollection;
export type ScenaBulletsCollection = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaBulletsCollection;
export const ScenaSoundsCollection = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaSoundsCollection;
export type ScenaSoundsCollection = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaSoundsCollection;
export const ScenaVisualEffectsCollection = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaVisualEffectsCollection;
export type ScenaVisualEffectsCollection = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaVisualEffectsCollection;
export const ScenaDecaysCollection = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaDecaysCollection;
export type ScenaDecaysCollection = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaDecaysCollection;
export const ScenaObjectsIdProvider = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsIdProvider;
export type ScenaObjectsIdProvider = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsIdProvider;
export const ScenaObjectsRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry;
export type ScenaObjectsRegistry<TScenaObject> = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry<TScenaObject>;
export const ItemAddedEventArgs = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry.ItemAddedEventArgs;
export type ItemAddedEventArgs<TScenaObject> = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry.ItemAddedEventArgs<TScenaObject>;
export const ItemRemovedEventArgs = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry.ItemRemovedEventArgs;
export type ItemRemovedEventArgs<TScenaObject> = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaObjectsRegistry.ItemRemovedEventArgs<TScenaObject>;
export const ScenaUnitsRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaUnitsRegistry;
export type ScenaUnitsRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaUnitsRegistry;
export const ScenaBulletsRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaBulletsRegistry;
export type ScenaBulletsRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaBulletsRegistry;
export const ScenaSoundsRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaSoundsRegistry;
export type ScenaSoundsRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaSoundsRegistry;
export const ScenaVisualEffectsRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaVisualEffectsRegistry;
export type ScenaVisualEffectsRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaVisualEffectsRegistry;
export const ScenaDecaysRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaDecaysRegistry;
export type ScenaDecaysRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaDecaysRegistry;
export const ScenaGearsRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaGearsRegistry;
export type ScenaGearsRegistry = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaGearsRegistry;
export const ScenaSettlements = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaSettlements;
export type ScenaSettlements = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaSettlements;
export const ScenaTileset = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaTileset;
export type ScenaTileset = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaTileset;
export const ScenaWind = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaWind;
export type ScenaWind = HordeClassLibrary.World.ScenaComponents.Intrinsics.ScenaWind;
export const UnitsMap = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMap;
export type UnitsMap = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMap;
export const UnitsMapCell = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapCell;
export type UnitsMapCell = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapCell;
export const UnitsMapModificationType = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapModificationType;
export type UnitsMapModificationType = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapModificationType;
export const UnitsMapModification = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapModification;
export type UnitsMapModification = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapModification;
export const UnitsMapTree = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapTree;
export type UnitsMapTree = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsMapTree;
export const UnitsOwnerModification = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsOwnerModification;
export type UnitsOwnerModification = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsOwnerModification;
export const UnitsQueryResult = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsQueryResult;
export type UnitsQueryResult = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsQueryResult;
export const UnitsSightModification = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsSightModification;
export type UnitsSightModification = HordeClassLibrary.World.ScenaComponents.Intrinsics.UnitsSightModification;
export const Scena = HordeClassLibrary.World.ScenaComponents.Scena;
export type Scena = HordeClassLibrary.World.ScenaComponents.Scena;
export const ScenaLandscape = HordeClassLibrary.World.ScenaComponents.Scena.ScenaLandscape;
export type ScenaLandscape = HordeClassLibrary.World.ScenaComponents.Scena.ScenaLandscape;
export const ScenaObjectController = HordeClassLibrary.World.ScenaComponents.Scena.ScenaObjectController;
export type ScenaObjectController = HordeClassLibrary.World.ScenaComponents.Scena.ScenaObjectController;
export const ScenaPathMap = HordeClassLibrary.World.ScenaComponents.Scena.ScenaPathMap;
export type ScenaPathMap = HordeClassLibrary.World.ScenaComponents.Scena.ScenaPathMap;
export const ScenaResourcesMap = HordeClassLibrary.World.ScenaComponents.Scena.ScenaResourcesMap;
export type ScenaResourcesMap = HordeClassLibrary.World.ScenaComponents.Scena.ScenaResourcesMap;
export const ScenaLogic = HordeClassLibrary.World.ScenaComponents.ScenaLogic;
export type ScenaLogic = HordeClassLibrary.World.ScenaComponents.ScenaLogic;
export const ScenaScenario = HordeClassLibrary.World.ScenaComponents.Structure.ScenaScenario;
export type ScenaScenario = HordeClassLibrary.World.ScenaComponents.Structure.ScenaScenario;
export const ScenaChangesObtainersCollection = HordeClassLibrary.World.ScenaComponents.TickChanges.ScenaChangesObtainersCollection;
export type ScenaChangesObtainersCollection = HordeClassLibrary.World.ScenaComponents.TickChanges.ScenaChangesObtainersCollection;
export const TickChangesObtainer = HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer;
export type TickChangesObtainer<TModification> = HordeClassLibrary.World.ScenaComponents.TickChanges.TickChangesObtainer<TModification>;
export const ScenaWatcher = HordeClassLibrary.World.ScenaComponents.Watcher.ScenaWatcher;
export type ScenaWatcher = HordeClassLibrary.World.ScenaComponents.Watcher.ScenaWatcher;
export const UnitsRegistrationWatcher = HordeClassLibrary.World.ScenaComponents.Watcher.UnitsRegistrationWatcher;
export type UnitsRegistrationWatcher = HordeClassLibrary.World.ScenaComponents.Watcher.UnitsRegistrationWatcher;
export const AlmostDefeatCondition = HordeClassLibrary.World.Settlements.Existence.AlmostDefeatCondition;
export type AlmostDefeatCondition = HordeClassLibrary.World.Settlements.Existence.AlmostDefeatCondition;
export const ExistenceStatus = HordeClassLibrary.World.Settlements.Existence.ExistenceStatus;
export type ExistenceStatus = HordeClassLibrary.World.Settlements.Existence.ExistenceStatus;
export const TotalDefeatCondition = HordeClassLibrary.World.Settlements.Existence.TotalDefeatCondition;
export type TotalDefeatCondition = HordeClassLibrary.World.Settlements.Existence.TotalDefeatCondition;
export const VictoryCondition = HordeClassLibrary.World.Settlements.Existence.VictoryCondition;
export type VictoryCondition = HordeClassLibrary.World.Settlements.Existence.VictoryCondition;
export const AntiFogLantern = HordeClassLibrary.World.Settlements.FogOfWar.AntiFogLantern;
export type AntiFogLantern = HordeClassLibrary.World.Settlements.FogOfWar.AntiFogLantern;
export const AntiFogLanternCollection = HordeClassLibrary.World.Settlements.FogOfWar.AntiFogLanternCollection;
export type AntiFogLanternCollection = HordeClassLibrary.World.Settlements.FogOfWar.AntiFogLanternCollection;
export const EasingItem = HordeClassLibrary.World.Settlements.FogOfWar.EasingItem;
export type EasingItem = HordeClassLibrary.World.Settlements.FogOfWar.EasingItem;
export const EasingCollection = HordeClassLibrary.World.Settlements.FogOfWar.EasingCollection;
export type EasingCollection = HordeClassLibrary.World.Settlements.FogOfWar.EasingCollection;
export const FogOfWarConstants = HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarConstants;
export type FogOfWarConstants = HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarConstants;
export const FogOfWarInCell = HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell;
export type FogOfWarInCell = HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarInCell;
export const FogOfWarSettings = HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarSettings;
export type FogOfWarSettings = HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarSettings;
export const SecondaryFogOfWarInCell = HordeClassLibrary.World.Settlements.FogOfWar.SecondaryFogOfWarInCell;
export type SecondaryFogOfWarInCell = HordeClassLibrary.World.Settlements.FogOfWar.SecondaryFogOfWarInCell;
export const ASettlementHelper = HordeClassLibrary.World.Settlements.Helpers.ASettlementHelper;
export type ASettlementHelper = HordeClassLibrary.World.Settlements.Helpers.ASettlementHelper;
export const UnitProductHelper = HordeClassLibrary.World.Settlements.Helpers.UnitProductHelper;
export type UnitProductHelper = HordeClassLibrary.World.Settlements.Helpers.UnitProductHelper;
export const SettlementDiplomacyModel = HordeClassLibrary.World.Settlements.Models.SettlementDiplomacyModel;
export type SettlementDiplomacyModel = HordeClassLibrary.World.Settlements.Models.SettlementDiplomacyModel;
export const SettlementModel = HordeClassLibrary.World.Settlements.Models.SettlementModel;
export type SettlementModel = HordeClassLibrary.World.Settlements.Models.SettlementModel;
export const SettlementPopulationCensusModel = HordeClassLibrary.World.Settlements.Models.SettlementPopulationCensusModel;
export type SettlementPopulationCensusModel = HordeClassLibrary.World.Settlements.Models.SettlementPopulationCensusModel;
export const ASettlementModule = HordeClassLibrary.World.Settlements.Modules.ASettlementModule;
export type ASettlementModule = HordeClassLibrary.World.Settlements.Modules.ASettlementModule;
export const BuildingSitesCollection = HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection;
export type BuildingSitesCollection = HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection;
export const SiteRegistrationEventArgs = HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.SiteRegistrationEventArgs;
export type SiteRegistrationEventArgs = HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.SiteRegistrationEventArgs;
export const SiteUnregistrationEventArgs = HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.SiteUnregistrationEventArgs;
export type SiteUnregistrationEventArgs = HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.SiteUnregistrationEventArgs;
export const BuildData = HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.BuildData;
export type BuildData = HordeClassLibrary.World.Settlements.Modules.Misc.BuildingSitesCollection.BuildData;
export const HypotheticalProductsCollection = HordeClassLibrary.World.Settlements.Modules.Misc.HypotheticalProductsCollection;
export type HypotheticalProductsCollection = HordeClassLibrary.World.Settlements.Modules.Misc.HypotheticalProductsCollection;
export const KnownMapModification = HordeClassLibrary.World.Settlements.Modules.Misc.KnownMapModification;
export type KnownMapModification = HordeClassLibrary.World.Settlements.Modules.Misc.KnownMapModification;
export const MapChangedCallbackDelegate = HordeClassLibrary.World.Settlements.Modules.Misc.MapChangedCallbackDelegate;
export type MapChangedCallbackDelegate = HordeClassLibrary.World.Settlements.Modules.Misc.MapChangedCallbackDelegate;
export const CountFogInRectDelegate = HordeClassLibrary.World.Settlements.Modules.Misc.CountFogInRectDelegate;
export type CountFogInRectDelegate = HordeClassLibrary.World.Settlements.Modules.Misc.CountFogInRectDelegate;
export const KnownUnitsMapChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.Misc.KnownUnitsMapChangedEventArgs;
export type KnownUnitsMapChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.Misc.KnownUnitsMapChangedEventArgs;
export const PeopleIncomeLevel = HordeClassLibrary.World.Settlements.Modules.Misc.PeopleIncomeLevel;
export type PeopleIncomeLevel = HordeClassLibrary.World.Settlements.Modules.Misc.PeopleIncomeLevel;
export const ProfessionEntry = HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
export type ProfessionEntry = HordeClassLibrary.World.Settlements.Modules.Misc.ProfessionEntry;
export const ReservedPeople = HordeClassLibrary.World.Settlements.Modules.Misc.ReservedPeople;
export type ReservedPeople = HordeClassLibrary.World.Settlements.Modules.Misc.ReservedPeople;
export const ResourcesBonus = HordeClassLibrary.World.Settlements.Modules.Misc.ResourcesBonus;
export type ResourcesBonus = HordeClassLibrary.World.Settlements.Modules.Misc.ResourcesBonus;
export const UnitConfigsSet = HordeClassLibrary.World.Settlements.Modules.Misc.UnitConfigsSet;
export type UnitConfigsSet = HordeClassLibrary.World.Settlements.Modules.Misc.UnitConfigsSet;
export const UnitProducersMap = HordeClassLibrary.World.Settlements.Modules.Misc.UnitProducersMap;
export type UnitProducersMap = HordeClassLibrary.World.Settlements.Modules.Misc.UnitProducersMap;
export const SettlementBuildingInProgressObserver = HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver;
export type SettlementBuildingInProgressObserver = HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver;
export const BuildingBeginEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver.BuildingBeginEventArgs;
export type BuildingBeginEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver.BuildingBeginEventArgs;
export const BuildingCompleteEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver.BuildingCompleteEventArgs;
export type BuildingCompleteEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementBuildingInProgressObserver.BuildingCompleteEventArgs;
export const SettlementDiplomacy = HordeClassLibrary.World.Settlements.Modules.SettlementDiplomacy;
export type SettlementDiplomacy = HordeClassLibrary.World.Settlements.Modules.SettlementDiplomacy;
export const StatusChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementDiplomacy.StatusChangedEventArgs;
export type StatusChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementDiplomacy.StatusChangedEventArgs;
export const SettlementEvents = HordeClassLibrary.World.Settlements.Modules.SettlementEvents;
export type SettlementEvents = HordeClassLibrary.World.Settlements.Modules.SettlementEvents;
export const TickEventType = HordeClassLibrary.World.Settlements.Modules.SettlementEvents.TickEventType;
export type TickEventType = HordeClassLibrary.World.Settlements.Modules.SettlementEvents.TickEventType;
export const InterfaceSoundUtteredEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementEvents.InterfaceSoundUtteredEventArgs;
export type InterfaceSoundUtteredEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementEvents.InterfaceSoundUtteredEventArgs;
export const SettlementExistence = HordeClassLibrary.World.Settlements.Modules.SettlementExistence;
export type SettlementExistence = HordeClassLibrary.World.Settlements.Modules.SettlementExistence;
export const ExistenceChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementExistence.ExistenceChangedEventArgs;
export type ExistenceChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementExistence.ExistenceChangedEventArgs;
export const VictoryEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementExistence.VictoryEventArgs;
export type VictoryEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementExistence.VictoryEventArgs;
export const SettlementMap = HordeClassLibrary.World.Settlements.Modules.SettlementMap;
export type SettlementMap = HordeClassLibrary.World.Settlements.Modules.SettlementMap;
export const SettlementMinimapData = HordeClassLibrary.World.Settlements.Modules.SettlementMinimapData;
export type SettlementMinimapData = HordeClassLibrary.World.Settlements.Modules.SettlementMinimapData;
export const SettlementNameModule = HordeClassLibrary.World.Settlements.Modules.SettlementNameModule;
export type SettlementNameModule = HordeClassLibrary.World.Settlements.Modules.SettlementNameModule;
export const PlayerNames = HordeClassLibrary.World.Settlements.Modules.SettlementNameModule.PlayerNames;
export type PlayerNames = HordeClassLibrary.World.Settlements.Modules.SettlementNameModule.PlayerNames;
export const SettlementPopulationCensus = HordeClassLibrary.World.Settlements.Modules.SettlementPopulationCensus;
export type SettlementPopulationCensus = HordeClassLibrary.World.Settlements.Modules.SettlementPopulationCensus;
export const SettlementProduction = HordeClassLibrary.World.Settlements.Modules.SettlementProduction;
export type SettlementProduction = HordeClassLibrary.World.Settlements.Modules.SettlementProduction;
export const SettlementResources = HordeClassLibrary.World.Settlements.Modules.SettlementResources;
export type SettlementResources = HordeClassLibrary.World.Settlements.Modules.SettlementResources;
export const AmountChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementResources.AmountChangedEventArgs;
export type AmountChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementResources.AmountChangedEventArgs;
export const SettlementTechTree = HordeClassLibrary.World.Settlements.Modules.SettlementTechTree;
export type SettlementTechTree = HordeClassLibrary.World.Settlements.Modules.SettlementTechTree;
export const SettlementUnits = HordeClassLibrary.World.Settlements.Modules.SettlementUnits;
export type SettlementUnits = HordeClassLibrary.World.Settlements.Modules.SettlementUnits;
export const UnitsInitializedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsInitializedEventArgs;
export type UnitsInitializedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsInitializedEventArgs;
export const UnitsFullyInitializedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsFullyInitializedEventArgs;
export type UnitsFullyInitializedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsFullyInitializedEventArgs;
export const UnitsListChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsListChangedEventArgs;
export type UnitsListChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitsListChangedEventArgs;
export const UnitProducedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitProducedEventArgs;
export type UnitProducedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitProducedEventArgs;
export const UnitSpawnedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitSpawnedEventArgs;
export type UnitSpawnedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitSpawnedEventArgs;
export const UnitReplacedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitReplacedEventArgs;
export type UnitReplacedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnits.UnitReplacedEventArgs;
export const SettlementUnitsCombatObserver = HordeClassLibrary.World.Settlements.Modules.SettlementUnitsCombatObserver;
export type SettlementUnitsCombatObserver = HordeClassLibrary.World.Settlements.Modules.SettlementUnitsCombatObserver;
export const CombatUnitsListChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnitsCombatObserver.CombatUnitsListChangedEventArgs;
export type CombatUnitsListChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementUnitsCombatObserver.CombatUnitsListChangedEventArgs;
export const SettlementUnitsProfessionCenter = HordeClassLibrary.World.Settlements.Modules.SettlementUnitsProfessionCenter;
export type SettlementUnitsProfessionCenter = HordeClassLibrary.World.Settlements.Modules.SettlementUnitsProfessionCenter;
export const SettlementVision = HordeClassLibrary.World.Settlements.Modules.SettlementVision;
export type SettlementVision = HordeClassLibrary.World.Settlements.Modules.SettlementVision;
export const VisionChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementVision.VisionChangedEventArgs;
export type VisionChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.SettlementVision.VisionChangedEventArgs;
export const StandAloneModule = HordeClassLibrary.World.Settlements.Modules.StandAloneModule;
export type StandAloneModule = HordeClassLibrary.World.Settlements.Modules.StandAloneModule;
export const ASettlementVisionModule = HordeClassLibrary.World.Settlements.Modules.Vision.ASettlementVisionModule;
export type ASettlementVisionModule = HordeClassLibrary.World.Settlements.Modules.Vision.ASettlementVisionModule;
export const FogOfWarVision = HordeClassLibrary.World.Settlements.Modules.Vision.FogOfWarVision;
export type FogOfWarVision = HordeClassLibrary.World.Settlements.Modules.Vision.FogOfWarVision;
export const FogChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.Vision.FogOfWarVision.FogChangedEventArgs;
export type FogChangedEventArgs = HordeClassLibrary.World.Settlements.Modules.Vision.FogOfWarVision.FogChangedEventArgs;
export const ForestVision = HordeClassLibrary.World.Settlements.Modules.Vision.ForestVision;
export type ForestVision = HordeClassLibrary.World.Settlements.Modules.Vision.ForestVision;
export const IRuleContextsCollection = HordeClassLibrary.World.Settlements.Rules.IRuleContextsCollection;
export type IRuleContextsCollection = HordeClassLibrary.World.Settlements.Rules.IRuleContextsCollection;
export const RulesOverseer = HordeClassLibrary.World.Settlements.Rules.RulesOverseer;
export type RulesOverseer = HordeClassLibrary.World.Settlements.Rules.RulesOverseer;
export const ExistenceRuleWrapper = HordeClassLibrary.World.Settlements.Rules.ExistenceRuleWrapper;
export type ExistenceRuleWrapper = HordeClassLibrary.World.Settlements.Rules.ExistenceRuleWrapper;
export const Settlement = HordeClassLibrary.World.Settlements.Settlement;
export type Settlement = HordeClassLibrary.World.Settlements.Settlement;
export const SettlementConstants = HordeClassLibrary.World.Settlements.SettlementConstants;
export type SettlementConstants = HordeClassLibrary.World.Settlements.SettlementConstants;
export const TerritoryMapData = HordeClassLibrary.World.Settlements.Territory.TerritoryMapData;
export type TerritoryMapData = HordeClassLibrary.World.Settlements.Territory.TerritoryMapData;
export const TerritoryPlanner = HordeClassLibrary.World.Settlements.Territory.TerritoryPlanner;
export type TerritoryPlanner = HordeClassLibrary.World.Settlements.Territory.TerritoryPlanner;
export const TerritoryPlannerConfiguration = HordeClassLibrary.World.Settlements.Territory.TerritoryPlannerConfiguration;
export type TerritoryPlannerConfiguration = HordeClassLibrary.World.Settlements.Territory.TerritoryPlannerConfiguration;
export const DiplomacyStatus = HordeClassLibrary.World.Simple.DiplomacyStatus;
export type DiplomacyStatus = HordeClassLibrary.World.Simple.DiplomacyStatus;
export const DrawLayer = HordeClassLibrary.World.Simple.DrawLayer;
export type DrawLayer = HordeClassLibrary.World.Simple.DrawLayer;
export const FpsCounter = HordeClassLibrary.World.Simple.FpsCounter;
export type FpsCounter = HordeClassLibrary.World.Simple.FpsCounter;
export const GameLoopCounters = HordeClassLibrary.World.Simple.GameLoopCounters;
export type GameLoopCounters = HordeClassLibrary.World.Simple.GameLoopCounters;
export const GameMessage = HordeClassLibrary.World.Simple.GameMessage;
export type GameMessage = HordeClassLibrary.World.Simple.GameMessage;
export const GameMessagesCollection = HordeClassLibrary.World.Simple.GameMessagesCollection;
export type GameMessagesCollection = HordeClassLibrary.World.Simple.GameMessagesCollection;
export const ResourcesAmount = HordeClassLibrary.World.Simple.ResourcesAmount;
export type ResourcesAmount = HordeClassLibrary.World.Simple.ResourcesAmount;
export const ResourcesAmountF = HordeClassLibrary.World.Simple.ResourcesAmountF;
export type ResourcesAmountF = HordeClassLibrary.World.Simple.ResourcesAmountF;
export const TileMask = HordeClassLibrary.World.Simple.TileMask;
export type TileMask = HordeClassLibrary.World.Simple.TileMask;
*/
//#endregion
