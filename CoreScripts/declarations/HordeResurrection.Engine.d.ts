// <auto-generated/>

//#region BattleController
declare namespace HordeResurrection.Engine.Logic.Battle {
	abstract class BattleController {

		// Properties:
		static readonly BattlePause: HordeResurrection.Engine.Logic.Battle.Stuff.BattlePause;
		static IsSynchronized: boolean;
		static readonly GameTimer: HordeResurrection.Engine.Logic.Battle.Stuff.GameTimer;
		static readonly FpsCounter: HordeClassLibrary.World.Simple.FpsCounter;
		static readonly ReplayModuleWorkMode: HordeResurrection.Engine.Logic.Battle.ReplaySystem.ReplayWorkMode;
		static readonly IsReplayMode: boolean;
		static readonly InputModule: HordeResurrection.Engine.Logic.Battle.InputSystem.InputModule;
		static readonly Camera: HordeResurrection.Engine.Logic.Battle.Camera.BattleCamera;
		static readonly StoppingNow: boolean;
		static readonly IsNetworkGame: boolean;
		static readonly BlockInputFragmentsOnScenaUpdating: boolean;

		// Methods:
		static Initialize(): void;

		static PrepareForBattleStarting(): void;

		static PrepareForStopping(): void;

		static Stop(): void;

		static Resume(
			inputExecutionPeriod: number
		): void;

		static WaitAndPauseBattleLoop(
			breakSynchronization: boolean
		): void;

		static SwitchBattleLoopPause(): void;

		static OneStepOrPauseBattleLoop(): void;

		static UpdateGameLoop(
			totalTime: string
		): void;

		static ReportDesynchronization(
			desyncPlayers: System.Collections.Generic.IEnumerable<HordeResurrection.Engine.Logic.Main.Players.Player> | null
		): void;

		static TicksToSeconds(
			ticks: number
		): number;

		static ReloadChangedScripts(): void;

		static ForceReloadAllScripts(): void;

		static ToggleReplayLocalInput(): void;

		static SendBotChatMessage(
			initiatorPlayer: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			message: string | null,
			targets: HordeResurrection.Engine.Logic.Battle.Stuff.ChatTargets
		): void;

		static SendBotAttention(
			initiatorPlayer: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		static SendAttention(
			initiatorPlayer: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		// Events:
		static ScenaChanged: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Battle.Events.ScenaChangedEventArgs>>;
		static GameTickEnd: EventSource<System.EventHandler<System.EventArgs>>;
		static PlayerDesynchronized: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Battle.BattleController.PlayerDesynchronizedEventArgs>>;
		static GameLogicExceptionThrown: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Battle.BattleController.GameLogicExceptionThrownEventArgs>>;
		static BeforeStop: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Battle.BattleController.BeforeStopEventArgs>>;
		static GameMessageEvent: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Battle.BattleController.GameMessageEventArgs>>;
		static ChatMessageSent: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Battle.BattleController.ChatMessageEventArgs>>;
		static ChatMessageReceived: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Battle.BattleController.ChatMessageEventArgs>>;
		static AttentionSent: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Battle.BattleController.AttentionEventArgs>>;
		static AttentionReceived: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Battle.BattleController.AttentionEventArgs>>;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region BattleController.PlayerDesynchronizedEventArgs
declare namespace HordeResurrection.Engine.Logic.Battle.BattleController {
	class PlayerDesynchronizedEventArgs
		extends System.EventArgs
	{
		// Constructors:
		constructor();

		// Fields:
		TriggeredPlayer: HordeResurrection.Engine.Logic.Main.Players.Player;
	}
}
//#endregion

//#region BattleController.GameLogicExceptionThrownEventArgs
declare namespace HordeResurrection.Engine.Logic.Battle.BattleController {
	class GameLogicExceptionThrownEventArgs
		extends System.EventArgs
	{
		// Constructors:
		constructor();

		// Properties:
		CrashLogPath: string;
	}
}
//#endregion

//#region BattleController.BeforeStopEventArgs
declare namespace HordeResurrection.Engine.Logic.Battle.BattleController {
	class BeforeStopEventArgs extends System.Object
		implements System.IEquatable<HordeResurrection.Engine.Logic.Battle.BattleController.BeforeStopEventArgs>
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BattleController.GameMessageEventArgs
declare namespace HordeResurrection.Engine.Logic.Battle.BattleController {
	class GameMessageEventArgs extends System.Object
		implements System.IEquatable<HordeResurrection.Engine.Logic.Battle.BattleController.GameMessageEventArgs>
	{
		// Constructors:
		constructor(
			Message: HordeClassLibrary.World.Simple.GameMessage | null
		);

		// Properties:
		Message: HordeClassLibrary.World.Simple.GameMessage;
	}
}
//#endregion

//#region BattleController.ChatMessageEventArgs
declare namespace HordeResurrection.Engine.Logic.Battle.BattleController {
	class ChatMessageEventArgs extends System.Object
		implements System.IEquatable<HordeResurrection.Engine.Logic.Battle.BattleController.ChatMessageEventArgs>
	{
		// Constructors:
		constructor(
			InitiatorPlayer: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			Message: string | null,
			Targets: HordeResurrection.Engine.Logic.Battle.Stuff.ChatTargets,
			RecepientSettlements: System.Collections.Generic.HashSet<HordeClassLibrary.World.Settlements.Settlement> | null
		);

		// Properties:
		InitiatorPlayer: HordeResurrection.Engine.Logic.Main.Players.Player;
		Message: string;
		Targets: HordeResurrection.Engine.Logic.Battle.Stuff.ChatTargets;
		RecepientSettlements: System.Collections.Generic.HashSet<HordeClassLibrary.World.Settlements.Settlement>;
	}
}
//#endregion

//#region BattleController.AttentionEventArgs
declare namespace HordeResurrection.Engine.Logic.Battle.BattleController {
	class AttentionEventArgs extends System.Object
		implements System.IEquatable<HordeResurrection.Engine.Logic.Battle.BattleController.AttentionEventArgs>
	{
		// Constructors:
		constructor(
			InitiatorPlayer: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			RecepientSettlements: System.Collections.Generic.HashSet<HordeClassLibrary.World.Settlements.Settlement> | null
		);

		// Properties:
		InitiatorPlayer: HordeResurrection.Engine.Logic.Main.Players.Player;
		Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		RecepientSettlements: System.Collections.Generic.HashSet<HordeClassLibrary.World.Settlements.Settlement>;
	}
}
//#endregion

//#region BattleCamera
declare namespace HordeResurrection.Engine.Logic.Battle.Camera {
	class BattleCamera extends System.Object {

		// Constructors:
		constructor(
			cameraConfiguration: HordeResurrection.Engine.Logic.Battle.Camera.CameraConfiguration | null
		);

		// Fields:
		BlackBorderSize: number;

		// Properties:
		DisableMouseBorderScroll: boolean;
		readonly MouseBorderScrollZone: number;
		InputSettings: HordeResurrection.Engine.Settings.InputSettings;
		readonly DefaultViewportSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly Position: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly CellCam: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly BottomRightCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly ZoomScaleFactor: number;
		readonly Viewport: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		readonly ViewportCells: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
		readonly Scroller: HordeResurrection.Engine.Logic.Battle.Camera.CameraScroller;

		// Methods:
		GetPosRelativeCenter(
			absolutePos: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeResurrection.Basic.Primitives.Geometry.Point2D;

		IsPointInCamera(
			point: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): boolean;

		GetMaxViewportSize(): HordeResurrection.Basic.Primitives.Geometry.Size2D;

		Move(
			delta: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		SetCenterToCell(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null
		): void;

		SetCenterToPosition(
			pos: HordeResurrection.Basic.Primitives.Geometry.Point2D | null
		): void;

		UpdateVariables(
			adjustPosition: boolean
		): void;

		ZoomIn(
			anchorPos: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		ZoomOut(
			anchorPos: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): void;

		ZoomReset(): void;

		UpdateOnUiTick(
			elapsedTime: string
		): void;

		GetDrawScenaRectangleCells(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null
		): HordeResurrection.Basic.Primitives.Geometry.Rect2D;

		GetDrawScenaRectanglePixels(
			scena: HordeClassLibrary.World.ScenaComponents.Scena | null
		): HordeResurrection.Basic.Primitives.Geometry.Rect2D;

		// Events:
		Moved: EventSource<System.EventHandler<System.EventArgs>>;
		ZoomChanged: EventSource<System.EventHandler<System.EventArgs>>;
	}
}
//#endregion

//#region CameraConfiguration
declare namespace HordeResurrection.Engine.Logic.Battle.Camera {
	class CameraConfiguration extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		DefaultViewportSize: HordeResurrection.Basic.Primitives.Geometry.Size2D;
	}
}
//#endregion

//#region CameraScroller
declare namespace HordeResurrection.Engine.Logic.Battle.Camera {
	class CameraScroller extends System.Object {

		// Fields:
		static readonly /* const */ MinScrollDiffMilliseconds: number; // = 1

		// Properties:
		readonly LastTickScrollDirection: HordeResurrection.Basic.Primitives.Geometry.Direction4;

		// Methods:
		UpdateWindowSize(
			windowSize: HordeResurrection.Basic.Primitives.Geometry.Size2D
		): void;

		HandleMouseScrolling(
			mPos: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			totalElapsedTime: number
		): void;

		HandleMiddleClickScrolling(
			diff: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			totalElapsedTime: number
		): void;

		HandleKeyboardScrolling(
			x: number,
			y: number,
			totalElapsedTime: number
		): void;

		IsNoScrollingLastTick(): boolean;
	}
}
//#endregion

//#region CameraZoomer
declare namespace HordeResurrection.Engine.Logic.Battle.Camera {
	class CameraZoomer extends System.Object {

		// Properties:
		readonly ScaleFactor: number;

		// Methods:
		GetScaleFactor(
			zoomLevel: number
		): number;

		ZoomIn(
			/*out*/ step: number
		): boolean;

		ZoomOut(
			/*out*/ step: number
		): boolean;
	}
}
//#endregion

//#region AddResourcesCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	class AddResourcesCheatArgs
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs
	{
		// Constructors:
		constructor();

		// Properties:
		ResourcesAmount: HordeClassLibrary.World.Simple.ResourcesAmount;
		MaxResourcesAmount: HordeClassLibrary.World.Simple.ResourcesAmount;
	}
}
//#endregion

//#region BaseCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	abstract class BaseCheatArgs extends System.Object {

		// Methods:
		ToStringImplementation(): string;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ControlAnotherSettlementsCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	class ControlAnotherSettlementsCheatArgs
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region DamageSelectedUnitsCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	class DamageSelectedUnitsCheatArgs
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs
	{
		// Constructors:
		constructor();

		// Properties:
		Damage: number;
	}
}
//#endregion

//#region DamageUnitAtCellCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	class DamageUnitAtCellCheatArgs
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs
	{
		// Constructors:
		constructor();

		// Properties:
		Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Damage: number;
	}
}
//#endregion

//#region FogOfWarCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	class FogOfWarCheatArgs
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs
	{
		// Constructors:
		constructor();

		// Properties:
		DiscoverMap: boolean;
	}
}
//#endregion

//#region HealAllUnitsCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	class HealAllUnitsCheatArgs
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region HealSelectedUnitsCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	class HealSelectedUnitsCheatArgs
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region KillSelectedUnitsCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	class KillSelectedUnitsCheatArgs
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region KillUnitAtCellCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	class KillUnitAtCellCheatArgs
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs
	{
		// Constructors:
		constructor();

		// Properties:
		Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region TakeAwayResourcesCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	class TakeAwayResourcesCheatArgs
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region TeleportSelectedUnitsToPositionCheatArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Arguments {
	class TeleportSelectedUnitsToPositionCheatArgs
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs
	{
		// Constructors:
		constructor();

		// Properties:
		TargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region CheatsController
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats {
	abstract class CheatsController {

		// Methods:
		static Initialize(): void;

		static Reset(): void;

		static SwitchCanControlAnotherSettlements(): void;

		static DamageUnitAt(
			nullableCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null
		): void;

		static DamageSelectedUnits(): void;

		static KillUnitAt(
			nullableCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null
		): void;

		static KillSelectedUnits(): void;

		static HealSelectedUnits(): void;

		static HealAllUnits(): void;

		static TeleportSelectedUnitsTo(
			nullableTargetCell: HordeResurrection.Basic.Primitives.Geometry.Point2D | null
		): void;

		static AddResources(): void;

		static TakeAwayResources(): void;

		static DiscoverMap(): void;

		static HideMap(): void;

		static CanControlAnotherSettlements(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null
		): boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AddResourcesCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	class AddResourcesCheat
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region BaseCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	abstract class BaseCheat extends System.Object {

		// Methods:
		Execute(
			initiatorPlayer: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			args: HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs | null
		): void;

		ToStringImplementation(): string;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ControlAnotherSettlementsCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	class ControlAnotherSettlementsCheat
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region DamageSelectedUnitsCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	class DamageSelectedUnitsCheat
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region DamageUnitAtCellCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	class DamageUnitAtCellCheat
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region FogOfWarCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	class FogOfWarCheat
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region HealAllUnitsCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	class HealAllUnitsCheat
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region HealSelectedUnitsCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	class HealSelectedUnitsCheat
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region KillSelectedUnitsCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	class KillSelectedUnitsCheat
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat
	{
		// Constructors:
		constructor();

		// Methods:
		static GetDamageFor(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): number;
	}
}
//#endregion

//#region KillUnitAtCellCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	class KillUnitAtCellCheat
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region TakeAwayResourcesCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	class TakeAwayResourcesCheat
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region TeleportSelectedUnitsToPositionCheat
declare namespace HordeResurrection.Engine.Logic.Battle.Cheats.Implementations {
	class TeleportSelectedUnitsToPositionCheat
		extends HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat
	{
		// Constructors:
		constructor();

		// Properties:
		static readonly ExtraLengthOfSearchingSpiral: number;
	}
}
//#endregion

//#region ScenaChangedEventArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Events {
	class ScenaChangedEventArgs
		extends System.EventArgs
	{
		// Constructors:
		constructor(
			oldScena: HordeClassLibrary.World.ScenaComponents.Scena | null,
			newScena: HordeClassLibrary.World.ScenaComponents.Scena | null
		);

		// Properties:
		readonly OldScena: HordeClassLibrary.World.ScenaComponents.Scena;
		readonly NewScena: HordeClassLibrary.World.ScenaComponents.Scena;
	}
}
//#endregion

//#region ActionConverter
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.Converters {
	abstract class ActionConverter {

		// Methods:
		static Convert(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			action: HordeResurrection.Intellect.Actions.AAction | null
		): System.Collections.Generic.List<HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem>;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region InputBuilderState
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.Enums {
	abstract class InputBuilderState extends System.Enum {
		/** InputBuilderState.None = 0 */ static readonly None: InputBuilderState;
		/** InputBuilderState.WaitClickToMap = 1 */ static readonly WaitClickToMap: InputBuilderState;
		/** InputBuilderState.SelectUnitFromList = 2 */ static readonly SelectUnitFromList: InputBuilderState;
		/** InputBuilderState.SelectUnitCount = 3 */ static readonly SelectUnitCount: InputBuilderState;
		/** InputBuilderState.WaitBuildPlace = 4 */ static readonly WaitBuildPlace: InputBuilderState;
		/** InputBuilderState.WaitDragEnd = 5 */ static readonly WaitDragEnd: InputBuilderState;
		/** InputBuilderState.CommandCompleted = 6 */ static readonly CommandCompleted: InputBuilderState;
	}
}
//#endregion

//#region VirtualSelectUnitsMode
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.Enums {
	abstract class VirtualSelectUnitsMode extends System.Enum {
		/** VirtualSelectUnitsMode.Select = 0 */ static readonly Select: VirtualSelectUnitsMode;
		/** VirtualSelectUnitsMode.Exclude = 1 */ static readonly Exclude: VirtualSelectUnitsMode;
		/** VirtualSelectUnitsMode.Include = 2 */ static readonly Include: VirtualSelectUnitsMode;
	}
}
//#endregion

//#region InputConstants
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem {
	abstract class InputConstants {

		// Fields:
		static readonly ExpectedDoubleClickTimeFrame: string;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region AInputFragment
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	abstract class AInputFragment extends System.Object {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region InputFragmentBattleUiMouseClick
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentBattleUiMouseClick
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			clickType: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentMouseClickType,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			assignOrderMode?: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode | null /* = null */
		);

		// Properties:
		readonly ClickType: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentMouseClickType;
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode | null;
	}
}
//#endregion

//#region InputFragmentBattleUiMouseDragEnd
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentBattleUiMouseDragEnd
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode
		);

		// Properties:
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly SelectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode;
	}
}
//#endregion

//#region InputFragmentBattleUiMouseDragStart
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentBattleUiMouseDragStart
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		// Properties:
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
	}
}
//#endregion

//#region InputFragmentCancel
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentCancel
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			viiBuilderToCancel: HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder | null,
			allowDeselect: boolean
		);

		// Properties:
		readonly ViiBuilderToCancel: HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder;
		readonly AllowDeselect: boolean;
	}
}
//#endregion

//#region InputFragmentChangeAutomaticCommandMode
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentChangeAutomaticCommandMode
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			isAutomated: boolean,
			assignOrderMode?: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode | null /* = null */
		);

		// Properties:
		readonly Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		readonly IsAutomated: boolean;
		readonly AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode | null;
	}
}
//#endregion

//#region InputFragmentKeyRelease
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentKeyRelease
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			key: string | null
		);

		// Properties:
		readonly Key: string;
	}
}
//#endregion

//#region InputFragmentModifier
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentModifier
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			data: any | null
		);

		// Properties:
		readonly Data: any;
	}
}
//#endregion

//#region InputFragmentMouseClick
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentMouseClick
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			clickType: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentMouseClickType
		);

		// Properties:
		readonly ClickType: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentMouseClickType;
	}
}
//#endregion

//#region InputFragmentMouseClickType
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	abstract class InputFragmentMouseClickType extends System.Enum {
		/** InputFragmentMouseClickType.LeftClick = 0 */ static readonly LeftClick: InputFragmentMouseClickType;
		/** InputFragmentMouseClickType.LeftDoubleClick = 1 */ static readonly LeftDoubleClick: InputFragmentMouseClickType;
		/** InputFragmentMouseClickType.RightClick = 2 */ static readonly RightClick: InputFragmentMouseClickType;
		/** InputFragmentMouseClickType.RightDoubleClick = 3 */ static readonly RightDoubleClick: InputFragmentMouseClickType;
	}
}
//#endregion

//#region InputFragmentNumberValueApply
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentNumberValueApply
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor();
	}
}
//#endregion

//#region InputFragmentNumberValueChanging
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentNumberValueChanging
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			value: number
		);

		// Properties:
		readonly Value: number;
	}
}
//#endregion

//#region InputFragmentSelectFromList
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentSelectFromList
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			selectedUid: string | null
		);

		// Properties:
		readonly SelectedUid: string;
	}
}
//#endregion

//#region InputFragmentUnitCommand
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentUnitCommand
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode
		);

		// Properties:
		readonly Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		readonly AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
	}
}
//#endregion

//#region InjectBuilderMode
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	abstract class InjectBuilderMode extends System.Enum {
		/** InjectBuilderMode.OnlyIfIdle = 0 */ static readonly OnlyIfIdle: InjectBuilderMode;
		/** InjectBuilderMode.Silent = 1 */ static readonly Silent: InjectBuilderMode;
		/** InjectBuilderMode.Replace = 2 */ static readonly Replace: InjectBuilderMode;
	}
}
//#endregion

//#region InputFragmentWithBuilder
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments {
	class InputFragmentWithBuilder
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment
	{
		// Constructors:
		constructor(
			builder: HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder | null,
			mode: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InjectBuilderMode
		);

		// Properties:
		readonly Builder: HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder;
		readonly Mode: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InjectBuilderMode;
	}
}
//#endregion

//#region AVirtualInputItemBuilder
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders {
	abstract class AVirtualInputItemBuilder extends System.Object {

		// Properties:
		readonly InitiatorPlayer: HordeResurrection.Engine.Logic.Main.Players.Player;
		readonly CurrentState: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.InputBuilderState;

		// Methods:
		OnInputFragment(
			inputFragment: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment | null
		): void;

		ToVirtualInputItem(): HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem;

		UtterSound(
			soundType: HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums.InputItemBuilderSounds
		): void;

		IsWaitingBattleUiClick(): boolean;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region FactoryVirtualInputItemBuilderByUnitCommand
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.Factory {
	abstract class FactoryVirtualInputItemBuilderByUnitCommand {

		// Methods:
		static CreateByUnitCommand(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode
		): HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder;

		static CreateByUnitCommand(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			unitCommandFragment: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentUnitCommand | null
		): HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region VirtualSelectUnitsBuilderUtils
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.Factory {
	abstract class VirtualSelectUnitsBuilderUtils {

		// Methods:
		static SelectUnit(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			unit: HordeClassLibrary.World.Objects.Units.Unit | null
		): void;

		static SelectUnitsInRegion(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			region: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			patternConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			patternFeatures: HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature
		): void;

		static SelectAllUnits(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			settlement: HordeClassLibrary.World.Settlements.Settlement | null,
			patternConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			patternFeatures: HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region VirtualSmartBuilderUtils
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.Factory {
	abstract class VirtualSmartBuilderUtils {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region VirtualChangeAutomaticModeCommandBuilder
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders {
	class VirtualChangeAutomaticModeCommandBuilder
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			automaticCommandFragment: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentChangeAutomaticCommandMode | null
		);

		// Properties:
		readonly Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		readonly IsAutomated: boolean;
		readonly AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
	}
}
//#endregion

//#region VirtualCheatBuilder
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders {
	class VirtualCheatBuilder
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			cheatArgs: HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs | null
		);

		// Properties:
		readonly CheatArgs: HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs;
	}
}
//#endregion

//#region VirtualOneClickCommandBuilder
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders {
	class VirtualOneClickCommandBuilder
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode,
			command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		);

		// Properties:
		readonly Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		readonly AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
	}
}
//#endregion

//#region VirtualPointBasedCommandBuilder
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders {
	class VirtualPointBasedCommandBuilder
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode,
			command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand
		);

		// Properties:
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		readonly AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
	}
}
//#endregion

//#region VirtualProduceCommandBuilder
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders {
	class VirtualProduceCommandBuilder
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null
		);

		// Properties:
		readonly CellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		readonly CellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		readonly Count: number;
		readonly CompoundStopOnNumber: number | null;
		readonly ForceBuild: boolean;
		ProductUnitConfigUid: string;
		readonly AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
		readonly ProducerUnit: HordeClassLibrary.World.Objects.Units.Unit;
		readonly ProducerUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly ProducerUnitOwner: HordeClassLibrary.World.Settlements.Settlement;
		readonly ProductUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		readonly IsBuilding: boolean | null;
		readonly CompoundBuildHelper: HordeClassLibrary.UnitComponents.Misc.CompoundUnitBuildHelper;
		readonly SkipNextDoubleClickFragment: boolean;
	}
}
//#endregion

//#region VirtualSelectUnitsBuilder
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders {
	class VirtualSelectUnitsBuilder
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			unitIds: HordeClassLibrary.World.Objects.Units.UnitIdLabel[] | null
		);

		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			dragStartFragment: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentBattleUiMouseDragStart | null
		);

		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			patternConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			patternSettlement: HordeClassLibrary.World.Settlements.Settlement | null,
			patternUnitFlags: HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature
		);

		// Fields:
		static readonly /* const */ SquadSizeToUseIds: number; // = 10

		// Properties:
		SelectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode;
		readonly CellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly CellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly PatternSettlementUid: string;
		readonly PatternConfigUid: string;
		readonly PatternUnitFeatures: HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature;
		readonly UnitIds: HordeClassLibrary.World.Objects.Units.UnitIdLabel[];
		readonly PatternSettlement: HordeClassLibrary.World.Settlements.Settlement;
		readonly PatternConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		SelectUiSquadWithSound: boolean;
	}
}
//#endregion

//#region VirtualSmartMouseClickBuilder
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders {
	class VirtualSmartMouseClickBuilder
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			mouseClick: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentBattleUiMouseClick | null
		);

		// Properties:
		readonly Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
		readonly Uninterruptible: boolean;
		readonly UnitInCell: HordeClassLibrary.World.Objects.Units.Unit;
	}
}
//#endregion

//#region VirtualSquadMemorizeBuilder
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders {
	class VirtualSquadMemorizeBuilder
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			squadNumber: number
		);

		// Properties:
		readonly SquadNumber: number;
	}
}
//#endregion

//#region VirtualSquadSelectBuilder
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders {
	class VirtualSquadSelectBuilder
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			squadNumber: number,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode
		);

		// Properties:
		readonly SquadNumber: number;
		readonly SelectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode;
	}
}
//#endregion

//#region AVirtualInputItem
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	abstract class AVirtualInputItem extends System.Object {

		// Fields:
		static readonly /* const */ InvalidIndex: number; // = -1

		// Properties:
		Index: number;
		readonly HasInvalidIndex: boolean;
		InitiatorPlayer: HordeResurrection.Engine.Logic.Main.Players.Player;
		ItemType: HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualInputItemType;

		// Methods:
		DoIt(): void;

		CompareTo(
			other: HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem | null,
			gameFrameCount: number
		): number;

		UtterSound(
			soundType: HordeClassLibrary.HordeContent.ViewResources.Audio.SoundEnums.InputItemSounds
		): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region VirtualProduceCommandTemplates
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.ByAction {
	abstract class VirtualProduceCommandTemplates {

		// Methods:
		static Instantiate(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			action: HordeResurrection.Intellect.Actions.ProduceUnitAction | null
		): System.Collections.Generic.List<HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem>;

		static Instantiate(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			action: HordeResurrection.Intellect.Actions.ProduceBuildingAction | null
		): System.Collections.Generic.List<HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem>;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region VirtualChangeAutomaticModeCommand
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualChangeAutomaticModeCommand
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			autoCommandSwitchArgs: HordeClassLibrary.UnitComponents.OrdersSystem.CommandArgs.AutoCommandSwitchArgs
		);

		constructor();

		// Properties:
		Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		readonly IsAutomated: boolean;
		readonly AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
	}
}
//#endregion

//#region VirtualCheat
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualCheat
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			cheatArgs: HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs | null
		);

		constructor();

		// Properties:
		CheatArgs: HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs;
	}
}
//#endregion

//#region VirtualInputItemType
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	abstract class VirtualInputItemType extends System.Enum {
		/** VirtualInputItemType.Unknown = 0 */ static readonly Unknown: VirtualInputItemType;
		/** VirtualInputItemType.Local = 1 */ static readonly Local: VirtualInputItemType;
		/** VirtualInputItemType.Remote = 2 */ static readonly Remote: VirtualInputItemType;
	}
}
//#endregion

//#region VirtualMoveOutCommand
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualMoveOutCommand
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			region: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		);

		constructor();

		// Properties:
		Region: HordeResurrection.Basic.Primitives.Geometry.Rect2D;
	}
}
//#endregion

//#region VirtualMoveOutExtCommand
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualMoveOutExtCommand
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null
		);

		constructor();

		// Properties:
		CellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		CellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		ProductUnitConfigUid: string;
	}
}
//#endregion

//#region VirtualOneClickCommand
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualOneClickCommand
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode
		);

		constructor();

		// Properties:
		Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
	}
}
//#endregion

//#region VirtualPointBasedCommand
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualPointBasedCommand
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode
		);

		constructor();

		// Properties:
		Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		Command: HordeClassLibrary.UnitComponents.OrdersSystem.UnitCommand;
		AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
		IgnoreUnits: boolean;
	}
}
//#endregion

//#region VirtualProduceBuildingCommand
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualProduceBuildingCommand
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null
		);

		constructor();

		// Properties:
		CellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		CellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D | null;
		CompoundStopOnNumber: number | null;
		ProductUnitConfigUid: string;
		AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
		ForceBuild: boolean;
	}
}
//#endregion

//#region VirtualProduceUnitCommand
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualProduceUnitCommand
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null
		);

		constructor();

		// Properties:
		Count: number;
		ProductUnitConfigUid: string;
		AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
	}
}
//#endregion

//#region VirtualSelectUnits
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualSelectUnits
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D
		);

		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			cellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			cellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			patternConfigUid: string | null,
			patternSettlementUid: string | null,
			patternUnitFlags: HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature
		);

		constructor();

		// Properties:
		SelectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode;
		CellStart: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		CellEnd: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly PatternSettlementUid: string;
		PatternConfigUid: string;
		readonly PatternUnitFeatures: HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature;
	}
}
//#endregion

//#region VirtualSelectUnitsById
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualSelectUnitsById
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			unitIds: HordeClassLibrary.World.Objects.Units.UnitIdLabel[] | null
		);

		constructor();

		// Properties:
		SelectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode;
		UnitIds: HordeClassLibrary.World.Objects.Units.UnitIdLabel[];
	}
}
//#endregion

//#region VirtualSmartMouseClick
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualSmartMouseClick
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D,
			assignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode
		);

		constructor();

		// Properties:
		Cell: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		CellUnitId: HordeClassLibrary.World.Objects.Units.UnitIdLabel | null;
		AssignOrderMode: HordeClassLibrary.UnitComponents.OrdersSystem.AssignOrderMode;
		readonly Uninterruptible: boolean;
	}
}
//#endregion

//#region VirtualSquadMemorize
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualSquadMemorize
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			squadNumber: number
		);

		constructor();

		// Properties:
		SquadNumber: number;
	}
}
//#endregion

//#region VirtualSquadSelect
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems {
	class VirtualSquadSelect
		extends HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem
	{
		// Constructors:
		constructor(
			p: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			squadNumber: number,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode
		);

		constructor();

		// Properties:
		SquadNumber: number;
		SelectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode;
	}
}
//#endregion

//#region InputModule
declare namespace HordeResurrection.Engine.Logic.Battle.InputSystem {
	class InputModule extends System.Object {

		// Properties:
		readonly InputExecutionPeriod: number;
		AllowLocalInput: boolean;
		AllowReplayBotInput: boolean;
		BotReproducingMode: boolean;

		// Methods:
		ToggleReplayLocalInput(): void;
	}
}
//#endregion

//#region RecordChecksumItem
declare namespace HordeResurrection.Engine.Logic.Battle.ReplaySystem {
	class RecordChecksumItem
		extends HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordItemBase
	{
		// Constructors:
		constructor(
			checksum: number
		);

		// Properties:
		readonly Checksum: number;
	}
}
//#endregion

//#region RecordInfo
declare namespace HordeResurrection.Engine.Logic.Battle.ReplaySystem {
	class RecordInfo extends System.Object {

		// Properties:
		readonly GameVersion: string;
		readonly Scena: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaStamp;
		readonly BattleSettings: HordeClassLibrary.World.Context.BattleSettings;
		readonly RandomSeed: number;
		readonly InputExecutionPeriod: number;
		readonly RecorderSlot: number;
		readonly PlayersList: System.Collections.Generic.IReadOnlyList<HordeResurrection.Engine.Logic.Main.Players.PlayerReplayModel>;
		readonly ContentPackStamps: HordeClassLibrary.HordeContent.ContentPacks.Stamp.ContentStampsCollection;

		// Methods:
		static MakeRecordInfo(
			randomSeed: number
		): HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordInfo;
	}
}
//#endregion

//#region RecordInputItem
declare namespace HordeResurrection.Engine.Logic.Battle.ReplaySystem {
	class RecordInputItem
		extends HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordItemBase
	{
		// Constructors:
		constructor(
			inputItem: HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem | null
		);

		// Properties:
		readonly InputItem: HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem;
		readonly PlayerUid: string;
	}
}
//#endregion

//#region RecordItemBase
declare namespace HordeResurrection.Engine.Logic.Battle.ReplaySystem {
	abstract class RecordItemBase extends System.Object {

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region ReplayBuffer
declare namespace HordeResurrection.Engine.Logic.Battle.ReplaySystem {
	class ReplayBuffer extends System.Object {

		// Fields:
		static readonly /* const */ RecordsPropName: string; // = "Records"

		// Properties:
		readonly Info: HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordInfo;
		readonly ReplayFilePath: string;
		readonly RecordsCount: number;
		readonly LatestFrame: number;

		// Methods:
		TryGetRecords(
			gameFrameNumber: number,
			/*out*/ records: System.Collections.Generic.List<HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordItemBase> | null
		): boolean;

		static LoadFromJson(
			replayFilePath: string | null
		): HordeResurrection.Engine.Logic.Battle.ReplaySystem.ReplayBuffer;
	}
}
//#endregion

//#region ReplayWorkMode
declare namespace HordeResurrection.Engine.Logic.Battle.ReplaySystem {
	abstract class ReplayWorkMode extends System.Enum {
		/** ReplayWorkMode.None = 0 */ static readonly None: ReplayWorkMode;
		/** ReplayWorkMode.Record = 1 */ static readonly Record: ReplayWorkMode;
		/** ReplayWorkMode.Play = 2 */ static readonly Play: ReplayWorkMode;
	}
}
//#endregion

//#region BattlePause
declare namespace HordeResurrection.Engine.Logic.Battle.Stuff {
	class BattlePause extends System.Object {

		// Constructors:
		constructor(
			synchronizationPeriod: number
		);

		// Properties:
		readonly IsPaused: boolean;

		// Events:
		PauseChanged: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Battle.Stuff.BattlePause.PauseChangedEventArgs>>;
	}
}
//#endregion

//#region BattlePause.PauseChangedEventArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Stuff.BattlePause {
	class PauseChangedEventArgs extends System.Object
		implements System.IEquatable<HordeResurrection.Engine.Logic.Battle.Stuff.BattlePause.PauseChangedEventArgs>
	{
		// Constructors:
		constructor(
			Initiator: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			SetPause: boolean,
			IsSilent: boolean
		);

		// Properties:
		Initiator: HordeResurrection.Engine.Logic.Main.Players.Player;
		SetPause: boolean;
		IsSilent: boolean;
	}
}
//#endregion

//#region ChatTargets
declare namespace HordeResurrection.Engine.Logic.Battle.Stuff {
	abstract class ChatTargets extends System.Enum {
		/** ChatTargets.Unspecified = 0 */ static readonly Unspecified: ChatTargets;
		/** ChatTargets.All = 1 */ static readonly All: ChatTargets;
		/** ChatTargets.Allies = 2 */ static readonly Allies: ChatTargets;
	}
}
//#endregion

//#region GameTimer
declare namespace HordeResurrection.Engine.Logic.Battle.Stuff {
	class GameTimer extends System.Object {

		// Constructors:
		constructor(
			settings: HordeResurrection.Engine.Settings.GameSettings | null
		);

		// Fields:
		static readonly /* const */ UnlimitedFpsValue: number; // = 2147483647

		// Properties:
		readonly GameFramesCounter: number;
		readonly CompletedGameFrames: number;
		CurrentFpsLimit: number;
		readonly AllowControlSpeed: boolean;

		// Methods:
		Update(
			totalTime: string
		): boolean;

		UpdateOnTickEnd(): void;

		IncreaseSpeed(): void;

		DecreaseSpeed(): void;

		SetSpeed(
			fps: number
		): void;

		ResetOrRestrictSpeed(): void;

		ResetSpeedToDefault(): void;

		RestrictSpeed(): void;

		TicksToSeconds(
			ticks: number
		): number;

		// Events:
		FpsChanged: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Battle.Stuff.GameTimer.FpsEventArgs>>;
	}
}
//#endregion

//#region GameTimer.FpsEventArgs
declare namespace HordeResurrection.Engine.Logic.Battle.Stuff.GameTimer {
	class FpsEventArgs extends System.Object
		implements System.IEquatable<HordeResurrection.Engine.Logic.Battle.Stuff.GameTimer.FpsEventArgs>
	{
		// Constructors:
		constructor(
			NewFps: number,
			IsIncreased: boolean
		);

		// Properties:
		NewFps: number;
		IsIncreased: boolean;
	}
}
//#endregion

//#region LobbyPlayerSettings
declare namespace HordeResurrection.Engine.Logic.Lobby.Stuff {
	class LobbyPlayerSettings extends System.Object {

		// Properties:
		readonly Player: HordeResurrection.Engine.Logic.Main.Players.Player;
		readonly State: HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerState;
		readonly Nickname: string;
		readonly Slot: number;
		readonly IsSpectator: boolean;
		readonly SettlementUid: string;
		readonly Character: HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig;
		readonly CharacterUid: string;
		readonly DownloadScenaProgress: number;
		readonly NetworkLatency: number | null;

		// Methods:
		static CreateForLocalGame(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			settlementUid?: string | null /* = null */
		): HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings;

		static CreateForMultiplayer(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			state?: HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerState /* = LobbyPlayerState.Unknown */
		): HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings;

		RemoteSetIntegerParam(
			paramName: string | null,
			paramValue: number
		): void;

		RemoteSetBoolParam(
			paramName: string | null,
			paramValue: boolean
		): void;

		RemoteSetStringParam(
			paramName: string | null,
			paramValue: string | null
		): void;

		LocalSetIsSpectator(
			val: boolean
		): void;

		LocalSetNationNumber(
			uid: string | null
		): void;

		LocalSetCharacter(
			character: HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig | null
		): void;

		LocalSetState(
			state: HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerState
		): void;

		LocalFlipState(): void;

		LocalSetDownloadScenaProgress(
			value: number
		): void;

		SetLatencyValue(
			latency: number
		): void;

		ForceSetNationNumber(
			uid: string | null
		): void;

		ForceSetCharacter(
			uid: string | null
		): void;

		ForceSetIsSpectator(
			val: boolean
		): void;

		// Events:
		LocalChangedParam: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings.LocalChangedParamEventArgs>>;
		RemoteChangedParam: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings.RemoteChangedParamEventArgs>>;
		ParamChanged: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings.ParamChangedEventArgs>>;
	}
}
//#endregion

//#region LobbyPlayerSettings.LocalChangedParamEventArgs
declare namespace HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings {
	class LocalChangedParamEventArgs extends System.Object
		implements System.IEquatable<HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings.LocalChangedParamEventArgs>
	{
		// Properties:
		Player: HordeResurrection.Engine.Logic.Main.Players.Player;
	}
}
//#endregion

//#region LobbyPlayerSettings.RemoteChangedParamEventArgs
declare namespace HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings {
	class RemoteChangedParamEventArgs extends System.Object
		implements System.IEquatable<HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings.RemoteChangedParamEventArgs>
	{
		// Properties:
		Player: HordeResurrection.Engine.Logic.Main.Players.Player;
	}
}
//#endregion

//#region LobbyPlayerSettings.ParamChangedEventArgs
declare namespace HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings {
	class ParamChangedEventArgs
		extends System.EventArgs
	{
		// Constructors:
		constructor(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			paramName: string | null
		);

		// Fields:
		readonly Player: HordeResurrection.Engine.Logic.Main.Players.Player;
		readonly ParamName: string;
	}
}
//#endregion

//#region LobbyPlayerState
declare namespace HordeResurrection.Engine.Logic.Lobby.Stuff {
	abstract class LobbyPlayerState extends System.Enum {
		/** LobbyPlayerState.Unknown = 0 */ static readonly Unknown: LobbyPlayerState;
		/** LobbyPlayerState.DownloadingScena = 1 */ static readonly DownloadingScena: LobbyPlayerState;
		/** LobbyPlayerState.IsNotReady = 2 */ static readonly IsNotReady: LobbyPlayerState;
		/** LobbyPlayerState.IsReady = 3 */ static readonly IsReady: LobbyPlayerState;
	}
}
//#endregion

//#region GameStateChangedEventArgs
declare namespace HordeResurrection.Engine.Logic.Main.Events {
	class GameStateChangedEventArgs
		extends System.EventArgs
	{
		// Constructors:
		constructor(
			oldGameState: HordeResurrection.Engine.Logic.Main.Stuff.GameState,
			newGameState: HordeResurrection.Engine.Logic.Main.Stuff.GameState
		);

		// Properties:
		readonly OldGameState: HordeResurrection.Engine.Logic.Main.Stuff.GameState;
		readonly NewGameState: HordeResurrection.Engine.Logic.Main.Stuff.GameState;
	}
}
//#endregion

//#region MainController
declare namespace HordeResurrection.Engine.Logic.Main {
	abstract class MainController {

		// Properties:
		static readonly HordeSettings: HordeResurrection.Engine.Settings.HordeSettings;
		static readonly DefaultSettings: HordeResurrection.Engine.Settings.HordeSettings;
		static readonly GuiParams: HordeClassLibrary.HordeContent.Configs.Interface.GuiParams;
		static readonly CameraConfiguration: HordeResurrection.Engine.Logic.Battle.Camera.CameraConfiguration;
		static readonly UiState: HordeResurrection.Engine.StateMachines.UI.UiState;
		static readonly CommandLineArgs: HordeResurrection.Engine.Logic.Main.Stuff.CommandLineArgs;
		static readonly AvailableScenas: HordeClassLibrary.World.ScenaComponents.Descriptors.ScenaDescriptorsCollection;
		static readonly State: HordeResurrection.Engine.Logic.Main.Stuff.GameState;
		static readonly SystemMessagesColor: HordeResurrection.Basic.Primitives.HordeColor;

		// Methods:
		static SetCameraConfiguration(
			cameraConfiguration: HordeResurrection.Engine.Logic.Battle.Camera.CameraConfiguration | null
		): void;

		static Initialize(): void;

		static LoadContent(): void;

		static InitUiStateMachine(): void;

		static RescanAvailableScenas(): void;

		static Reset(): void;

		static StopController(
			oldState: HordeResurrection.Engine.Logic.Main.Stuff.GameState
		): void;

		static UpdateState(
			totalTime: string
		): void;

		static IsExitState(): boolean;

		static GoToStartMenu(
			reason: string | null
		): void;

		static GoToExit(): void;

		static UiGoBack(): void;

		static GetUserHordeSettingsFilePath(): string;

		static IsBattleStarted(): boolean;

		static IsFastStartNow(): boolean;

		static ShowSystemMessage(
			msg: HordeClassLibrary.World.Simple.GameMessage | null
		): void;

		static ShowSystemMessage(
			text: string | null,
			color?: HordeResurrection.Basic.Primitives.HordeColor | null /* = null */
		): void;

		// Events:
		static GameStateChanged: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Main.Events.GameStateChangedEventArgs>>;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region PlayersController
declare namespace HordeResurrection.Engine.Logic.Main {
	abstract class PlayersController {

		// Properties:
		static readonly ActivePlayer: HordeResurrection.Engine.Logic.Main.Players.Player;
		static readonly MaxSlot: number;

		// Methods:
		static UpdateAll(
			totalTime: string,
			gameTick: number
		): void;

		static UpdateAllAfterScenaUpdate(
			gameTick: number
		): void;

		static ResetAll(
			setState: HordeResurrection.Engine.Logic.Main.Players.PlayerState
		): void;

		static RemoveAll(): void;

		static GetPlayersEnumerator(): System.Collections.Generic.IEnumerator<HordeResurrection.Engine.Logic.Main.Players.Player>;

		static GetPlayer(
			playerGuid: string
		): HordeResurrection.Engine.Logic.Main.Players.Player;

		static GetLocalPlayers(): System.Collections.Generic.IEnumerable<HordeResurrection.Engine.Logic.Main.Players.Player>;

		static GetNetPlayers(): System.Collections.Generic.IEnumerable<HordeResurrection.Engine.Logic.Main.Players.Player>;

		static GetAllPlayers(): System.Collections.Generic.IEnumerable<HordeResurrection.Engine.Logic.Main.Players.Player>;

		static IsMainHostMainPlayer(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null
		): boolean;

		static MakeOrGetActivePlayer(): HordeResurrection.Engine.Logic.Main.Players.Player;

		static SetActivePlayer(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null
		): void;

		static MakeMasterMindPlayer(
			nickname: string | null
		): HordeResurrection.Engine.Logic.Main.Players.Player;

		static AddReplayPlayer(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			botReproducingMode: boolean
		): HordeResurrection.Engine.Logic.Main.Players.Player;

		static RemovePlayer(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null
		): void;

		static RemoveByGuid(
			playerGuid: string
		): void;

		static RemoveAllNetPlayers(): void;

		static DoNetPlayersAudit(): void;

		static DoNetPlayerAudit(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null
		): void;

		static CheckPlayerSlots(): void;

		static TestActivateMasterMinds(): void;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region PlayerInputBuilder
declare namespace HordeResurrection.Engine.Logic.Main.Players.Input {
	class PlayerInputBuilder extends System.Object {

		// Constructors:
		constructor(
			owner: HordeResurrection.Engine.Logic.Main.Players.Player | null
		);

		// Properties:
		readonly CurrentViiBuilder: HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder;
		readonly CurrentState: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.InputBuilderState;

		// Methods:
		Pause(): void;

		Resume(): void;

		AddFragment(
			inputFragment: HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment | null
		): void;

		CancelCurrentBuilder(
			allowDeselect?: boolean /* = false */
		): void;

		SelectAllUnits(): void;

		DeselectAllUnits(): void;

		MemorizeSelectedSquad(
			squadNumber: number
		): void;

		SelectMemorizedSquad(
			squadNumber: number,
			mode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode
		): void;

		MakeSureCurrentViiBuilderIsNull(
			source: string | null
		): void;
	}
}
//#endregion

//#region PlayerInputFuzzer
declare namespace HordeResurrection.Engine.Logic.Main.Players.Input {
	class PlayerInputFuzzer extends System.Object {

		// Constructors:
		constructor(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null
		);

		// Methods:
		SimulateInput(): void;
	}
}
//#endregion

//#region PlayerInputFuzzerConfiguration
declare namespace HordeResurrection.Engine.Logic.Main.Players.Input {
	class PlayerInputFuzzerConfiguration extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		readonly SquadCommandsMaxPeriod: number;
		readonly SquadCommandsMaxInputs: number;
		readonly SquadCommandsGetSavedSquadProbability: number;
		readonly CommandsMaxPeriod: number;
		readonly CommandsMaxInputs: number;
		readonly CommandsDoubleClickProbability: number;
		readonly ProducingMaxPeriod: number;
		readonly ProducingMaxInputs: number;
		readonly ProducingMaxQueue: number;
		readonly ProducingDoubleClickProbability: number;
		readonly ProducingBreakObstacleProbability: number;
		readonly ProducingBreakActiveOrderProbability: number;
		readonly ProducingDeselectCurrentProbability: number;
		readonly ProducingSelectFreeWorkerProbability: number;
		readonly ProduceCommandMaxCountChanges: number;
		readonly ProduceCommandMaxUnitsCount: number;
		readonly ProduceCommandMaxBuildAttempts: number;
		readonly ProduceCommandBreakProbability: number;
		readonly DoubleClickSmartCommandProbability: number;
		readonly BreakPointBasedCommandProbability: number;
		readonly DeselectBusyWorkersProbability: number;
		readonly BreakCancelCommandProbability: number;
		readonly BreakDestroySelfCommandProbability: number;
		readonly BreakDestroySelfCommandCountThreshold: number;
		readonly MemorizingSquadsMaxPeriod: number;
		readonly MemorizingSquadsMaxInputs: number;
	}
}
//#endregion

//#region PlayerSquadSelector
declare namespace HordeResurrection.Engine.Logic.Main.Players.Input {
	class PlayerSquadSelector extends System.Object {

		// Constructors:
		constructor(
			owner: HordeResurrection.Engine.Logic.Main.Players.Player | null
		);

		// Fields:
		static readonly /* const */ MemorizedSquadsCountMax: number; // = 10

		// Properties:
		readonly SelectedSquadCounter: number;
		IsUiSelector: boolean;

		// Methods:
		static SelectFromScenaRect(
			/*out*/ rawSquad: HordeClassLibrary.World.Objects.Squads.Squad | null,
			squadSelector: HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector | null,
			rectangle: HordeResurrection.Basic.Primitives.Geometry.Rect2D,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			selectionPattern?: HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector.SelectionPattern | null /* = null */
		): HordeClassLibrary.World.Objects.Squads.Squad;

		static SelectByIds(
			squadSelector: HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector | null,
			unitIds: HordeClassLibrary.World.Objects.Units.UnitIdLabel[] | null,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode
		): HordeClassLibrary.World.Objects.Squads.Squad;

		static SelectFromMemory(
			squadSelector: HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector | null,
			squadNumber: number,
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode
		): HordeClassLibrary.World.Objects.Squads.Squad;

		// Events:
		SquadChanged: EventSource<System.EventHandler<HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector.SquadChangedEventArgs>>;
	}
}
//#endregion

//#region PlayerSquadSelector.SelectionPattern
declare namespace HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector {
	class /* struct */ SelectionPattern extends System.ValueType
		implements System.IEquatable<HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector.SelectionPattern>
	{
		// Constructors:
		constructor(
			PatternSettlement?: HordeClassLibrary.World.Settlements.Settlement | null /* = null */,
			PatternConfig?: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null /* = null */,
			PatternUnitFeatures?: HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature /* = PatternUnitFeature.None */
		);

		// Fields:
		static readonly None: HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector.SelectionPattern;

		// Properties:
		PatternSettlement: HordeClassLibrary.World.Settlements.Settlement;
		PatternConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig;
		PatternUnitFeatures: HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region PlayerSquadSelector.SquadChangedEventArgs
declare namespace HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector {
	class SquadChangedEventArgs
		extends System.EventArgs
	{
		// Constructors:
		constructor(
			newSquad: HordeClassLibrary.World.Objects.Squads.Squad | null,
			oldSquad: HordeClassLibrary.World.Objects.Squads.Squad | null,
			disableSound: boolean
		);

		// Properties:
		readonly NewSquad: HordeClassLibrary.World.Objects.Squads.Squad;
		readonly OldSquad: HordeClassLibrary.World.Objects.Squads.Squad;
		readonly WithSound: boolean;
	}
}
//#endregion

//#region PlayerVirtualInput
declare namespace HordeResurrection.Engine.Logic.Main.Players.Input {
	class PlayerVirtualInput extends System.Object {

		// Constructors:
		constructor(
			owner: HordeResurrection.Engine.Logic.Main.Players.Player | null
		);

		// Properties:
		readonly ViiCounter: number;

		// Methods:
		Pause(): void;

		Resume(): void;

		AddLocalScriptInputs(
			viiList: System.Collections.Generic.IEnumerable<HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem> | null
		): void;
	}
}
//#endregion

//#region BasePlayerUnitsSelector
declare namespace HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors {
	abstract class BasePlayerUnitsSelector extends System.Object {

		// Methods:
		Reset(): void;

		Count(): number;

		// Dummy constructor for some magic:
		protected constructor(...dummy: any[]);
	}
}
//#endregion

//#region PlayerCyclicUnitsSelector
declare namespace HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors {
	class PlayerCyclicUnitsSelector
		extends HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.BasePlayerUnitsSelector
	{
		// Properties:
		readonly StartProduceBuilder: boolean;

		// Methods:
		SelectNext(
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode
		): void;

		ClearRecent(): void;
	}
}
//#endregion

//#region PlayerRegionUnitsSelector
declare namespace HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors {
	class PlayerRegionUnitsSelector
		extends HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.BasePlayerUnitsSelector
	{
		// Constructors:
		constructor(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null,
			patternUnitFeature: HordeClassLibrary.UnitComponents.Enumerations.PatternUnitFeature
		);

		// Methods:
		Select(
			selectMode: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode,
			region: HordeResurrection.Basic.Primitives.Geometry.Rect2D
		): void;
	}
}
//#endregion

//#region PlayerUnitSelectors
declare namespace HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors {
	class PlayerUnitSelectors extends System.Object {

		// Constructors:
		constructor(
			player: HordeResurrection.Engine.Logic.Main.Players.Player | null
		);

		// Properties:
		readonly FreeWorkersSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerCyclicUnitsSelector;
		readonly AllFreeWorkersSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
		readonly CastleSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerCyclicUnitsSelector;
		readonly BarracksSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerCyclicUnitsSelector;
		readonly FactorySelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerCyclicUnitsSelector;
		readonly StablesSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerCyclicUnitsSelector;
		readonly InfantrySelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
		readonly ArchersSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
		readonly RidersSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
		readonly MechanicSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
		readonly MagesSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
		readonly BirdsSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
		readonly UnarmedSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
		readonly WoundedSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
		readonly DoesNotHoldPositionSelector: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
	}
}
//#endregion

//#region PlayerOrigin
declare namespace HordeResurrection.Engine.Logic.Main.Players.Origin {
	class /* struct */ PlayerOrigin extends System.ValueType
		implements System.IEquatable<HordeResurrection.Engine.Logic.Main.Players.Origin.PlayerOrigin>
	{
		// Properties:
		InputOrigin: HordeResurrection.Engine.Logic.Main.Players.Origin.PlayerOriginInput;
		ControlOrigin: HordeResurrection.Engine.Logic.Main.Players.Origin.PlayerOriginControl;

		// Methods:
		GetDisplayString(): string;

		// Default parameterless constructor for value types
		constructor();
	}
}
//#endregion

//#region PlayerOriginControl
declare namespace HordeResurrection.Engine.Logic.Main.Players.Origin {
	abstract class PlayerOriginControl extends System.Enum {
		/** PlayerOriginControl.Human = 0 */ static readonly Human: PlayerOriginControl;
		/** PlayerOriginControl.Bot = 1 */ static readonly Bot: PlayerOriginControl;
	}
}
//#endregion

//#region PlayerOriginInput
declare namespace HordeResurrection.Engine.Logic.Main.Players.Origin {
	abstract class PlayerOriginInput extends System.Enum {
		/** PlayerOriginInput.Local = 0 */ static readonly Local: PlayerOriginInput;
		/** PlayerOriginInput.Remote = 1 */ static readonly Remote: PlayerOriginInput;
		/** PlayerOriginInput.Replay = 2 */ static readonly Replay: PlayerOriginInput;
	}
}
//#endregion

//#region Player
declare namespace HordeResurrection.Engine.Logic.Main.Players {
	class Player extends System.Object {

		// Constructors:
		constructor(
			playerOrigin: HordeResurrection.Engine.Logic.Main.Players.Origin.PlayerOrigin,
			guid: string,
			nickname: string | null
		);

		// Properties:
		readonly Slot: number;
		readonly Nickname: string;
		readonly PlayerState: HordeResurrection.Engine.Logic.Main.Players.PlayerState;
		readonly IsInGame: boolean;
		readonly IsSpectator: boolean;
		readonly Guid: string;
		readonly Randomizer: HordeResurrection.Basic.Primitives.HordeRandomizer;
		readonly IsLocal: boolean;
		readonly IsRemote: boolean;
		readonly IsReplay: boolean;
		readonly IsNotLocal: boolean;
		readonly IsHuman: boolean;
		readonly IsBot: boolean;
		readonly IsLocalHuman: boolean;
		readonly Scena: HordeClassLibrary.World.ScenaComponents.Scena;
		readonly InterfaceSounds: HordeResurrection.Engine.Logic.Main.Players.PlayerInterfaceSounds;
		readonly SelectedSquadUI: HordeClassLibrary.World.Objects.Squads.Squad;
		readonly SelectedSquadVirtual: HordeClassLibrary.World.Objects.Squads.Squad;
		readonly QuickUnitSelectors: HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerUnitSelectors;
		readonly InputBuilder: HordeResurrection.Engine.Logic.Main.Players.Input.PlayerInputBuilder;
		readonly InputState: HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.InputBuilderState;
		readonly VirtualInput: HordeResurrection.Engine.Logic.Main.Players.Input.PlayerVirtualInput;
		readonly MasterMind: HordeResurrection.Intellect.MasterMind;
		readonly InputFuzzer: HordeResurrection.Engine.Logic.Main.Players.Input.PlayerInputFuzzer;

		// Methods:
		SetBotNickname(
			nickname: string | null
		): void;

		TrySetPause(
			checkOnly?: boolean /* = false */
		): boolean;

		ReplanTerritoryPlanner(): void;

		RepeatSquadSelecting(): void;

		Update(
			totalTime: string,
			gameTick: number
		): void;

		UpdateAfterScenaUpdate(
			gameTick: number
		): void;

		UpdateMasterMind(
			gameTick: number
		): void;

		Reset(
			setState: HordeResurrection.Engine.Logic.Main.Players.PlayerState
		): void;

		FullDeinitialize(): void;

		SetSettlement(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): void;

		RemoveSettlement(): void;

		GetRealSettlement(): HordeClassLibrary.World.Settlements.Settlement;

		GetWorkUISettlement(): HordeClassLibrary.World.Settlements.Settlement;

		GetWorkVirtualSettlement(): HordeClassLibrary.World.Settlements.Settlement;

		CanControlSettlement(
			settlement: HordeClassLibrary.World.Settlements.Settlement | null
		): boolean;

		CanControlUnit(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		CanControlKnownUnit(
			ku: HordeClassLibrary.World.Objects.Units.KnownUnit | null
		): boolean;

		CanControlSquadLite(
			squad: HordeClassLibrary.World.Objects.Squads.Squad | null
		): boolean;

		CanSeeUnitUI(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		CanSeeUnitReal(
			u: HordeClassLibrary.World.Objects.Units.Unit | null
		): boolean;

		CanSeeUnitExtUI(
			unit: HordeClassLibrary.World.Objects.Units.IKnownOrRealUnit | null,
			cell: HordeResurrection.Basic.Primitives.Geometry.Point2D
		): HordeClassLibrary.UnitComponents.Enumerations.UnitVisibility;

		GetWorkUISettlementTerritoryPlanner(
			workUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			checkDistances: boolean
		): HordeClassLibrary.World.Settlements.Territory.TerritoryPlanner;

		GetWorkVirtualSettlementTerritoryPlanner(
			workUnitConfig: HordeClassLibrary.HordeContent.Configs.Units.UnitConfig | null,
			checkDistances: boolean
		): HordeClassLibrary.World.Settlements.Territory.TerritoryPlanner;

		InitMasterMind(
			name?: string | null /* = null */
		): void;

		ActivateMasterMind(): void;

		ChangeMindCharacter(
			character: HordeClassLibrary.HordeContent.Configs.MasterMind.MindCharacterConfig | null
		): void;

		GetNicknameOrAlias(): string;

		GetIndexShiftedByGameFrame(
			gameFrame: number
		): number;

		GetSelectedSquadUiHash(
			/*out*/ squad: HordeClassLibrary.World.Objects.Squads.Squad | null
		): number;

		GetAlliedPlayers(): System.Collections.Generic.IEnumerable<HordeResurrection.Engine.Logic.Main.Players.Player>;

		ToReplayModel(): HordeResurrection.Engine.Logic.Main.Players.PlayerReplayModel;

		static FromReplayModel(
			playerReplayModel: HordeResurrection.Engine.Logic.Main.Players.PlayerReplayModel | null,
			botReproducingMode: boolean
		): HordeResurrection.Engine.Logic.Main.Players.Player;

		GetRealPlayer(): HordeResurrection.Engine.Logic.Main.Players.Player;

		GetBasicInfoLines(): string[];

		// Events:
		ExistenceChanged: EventSource<System.EventHandler<HordeClassLibrary.World.Settlements.Modules.SettlementExistence.ExistenceChangedEventArgs>>;
	}
}
//#endregion

//#region PlayerInterfaceSounds
declare namespace HordeResurrection.Engine.Logic.Main.Players {
	class PlayerInterfaceSounds extends System.Object {

		// Constructors:
		constructor(
			owner: HordeResurrection.Engine.Logic.Main.Players.Player | null
		);

		// Properties:
		Enabled: boolean;

		// Methods:
		Enqueue(
			sound: HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView | null
		): void;

		Dequeue(): HordeClassLibrary.HordeContent.ViewResources.Audio.SoundView;

		Clear(): void;
	}
}
//#endregion

//#region PlayerReplayModel
declare namespace HordeResurrection.Engine.Logic.Main.Players {
	class PlayerReplayModel extends System.Object {

		// Constructors:
		constructor();

		// Properties:
		Slot: number;
		Nickname: string;
		PlayerOrigin: HordeResurrection.Engine.Logic.Main.Players.Origin.PlayerOrigin;
		Guid: string;
		SettlementUid: string;
		MasterMindConfigUid: string;
	}
}
//#endregion

//#region PlayerState
declare namespace HordeResurrection.Engine.Logic.Main.Players {
	abstract class PlayerState extends System.Enum {
		/** PlayerState.Created = 0 */ static readonly Created: PlayerState;
		/** PlayerState.Playing = 1 */ static readonly Playing: PlayerState;
		/** PlayerState.Stopped = 2 */ static readonly Stopped: PlayerState;
		/** PlayerState.Deinitialized = 3 */ static readonly Deinitialized: PlayerState;
	}
}
//#endregion

//#region CommandLineArgs
declare namespace HordeResurrection.Engine.Logic.Main.Stuff {
	class CommandLineArgs extends System.Object {

		// Constructors:
		constructor(
			args: string[] | null
		);

		// Properties:
		readonly StartScena: string;
	}
}
//#endregion

//#region GameState
declare namespace HordeResurrection.Engine.Logic.Main.Stuff {
	abstract class GameState extends System.Enum {
		/** GameState.None = 0 */ static readonly None: GameState;
		/** GameState.MainMenu = 1 */ static readonly MainMenu: GameState;
		/** GameState.BattleMap = 2 */ static readonly BattleMap: GameState;
		/** GameState.Exit = 3 */ static readonly Exit: GameState;
	}
}
//#endregion

//#region AudioSettings
declare namespace HordeResurrection.Engine.Settings {
	class AudioSettings extends System.Object {

		// Fields:
		static readonly /* const */ MaxVolume: number; // = 100

		// Properties:
		Volume: number;
		readonly IsEnabled: boolean;
		readonly IsBackgroundMusicEnabled: boolean;
		readonly MusicVolumeFactor: number;
		readonly MaxOutsideSoundDistance: number;
		readonly MaxTryEmittingTime: number;
		readonly InterfaceSoundVolumeFactor: number;
		readonly ScenaSoundVolumeFactor: number;
		readonly EarthSoundVolumeFactor: number;
		readonly EarthSoundMinCountThreshold: number;
		readonly EarthSoundMaxCountThreshold: number;
		readonly EarthFogVolumeFactors: System.Collections.Generic.Dictionary<HordeClassLibrary.World.Settlements.FogOfWar.SecondaryFogOfWarInCell, number>;
		readonly MaxAllowedSounds: System.Collections.Generic.Dictionary<HordeClassLibrary.HordeContent.Configs.ViewResourceInfos.Audio.SoundCategory, number>;

		// Events:
		VolumeChanged: EventSource<System.EventHandler<HordeResurrection.Engine.Settings.AudioSettings.VolumeChangedEventArgs>>;
	}
}
//#endregion

//#region AudioSettings.VolumeChangedEventArgs
declare namespace HordeResurrection.Engine.Settings.AudioSettings {
	class VolumeChangedEventArgs extends System.Object
		implements System.IEquatable<HordeResurrection.Engine.Settings.AudioSettings.VolumeChangedEventArgs>
	{
		// Constructors:
		constructor(
			Volume: number
		);

		// Properties:
		Volume: number;
	}
}
//#endregion

//#region DebugSettings
declare namespace HordeResurrection.Engine.Settings {
	class DebugSettings extends System.Object {

		// Properties:
		readonly ShowGrid: boolean;
		readonly ShowFPS: boolean;
		ShowGameTime: boolean;
		readonly DrawMouseCellCursor: boolean;
		readonly DrawUnitWaitingNum: boolean;
		readonly DrawUnitOrderMoveTarget: boolean;
		readonly DrawUnitOrderMoveLine: boolean;
		readonly DrawUnitOrderMovePath: boolean;
		readonly DrawUnitOrderWaitLine: boolean;
		readonly DrawUnitOrderAttackTarget: boolean;
		readonly DrawUnitOrderAttackLine: boolean;
		readonly DrawUnitOrderBuildTarget: boolean;
		readonly ShowUnitsInfoDebugPanel: boolean;
		readonly VerboseUnitsInfoDebugPanel: boolean;
		readonly VerbosePeopleInfoPanel: boolean;
		readonly ShowTestMenu: boolean;

		// Methods:
		ToggleShowGrid(): void;

		ToggleDrawMouseCellCursor(): void;
	}
}
//#endregion

//#region GameSettings
declare namespace HordeResurrection.Engine.Settings {
	class GameSettings extends System.Object {

		// Properties:
		FramesPerSecond: number;
		readonly FramesPerSecondMin: number;
		readonly FramesPerSecondMax: number;
		readonly FramesPerSecondStep: number;
		readonly FramesPerSecondDefault: number;
		readonly AutoResetFps: boolean;
		readonly AutoRestrictFps: boolean;
		readonly LocalizationLanguage: string;
		readonly DefaultFogOfWar: HordeClassLibrary.World.Settlements.FogOfWar.FogOfWarSettings;

		// Events:
		FramesPerSecondChanged: EventSource<System.EventHandler<HordeResurrection.Engine.Settings.GameSettings.FramesPerSecondChangedEventArgs>>;
	}
}
//#endregion

//#region GameSettings.FramesPerSecondChangedEventArgs
declare namespace HordeResurrection.Engine.Settings.GameSettings {
	class FramesPerSecondChangedEventArgs extends System.Object
		implements System.IEquatable<HordeResurrection.Engine.Settings.GameSettings.FramesPerSecondChangedEventArgs>
	{
		// Constructors:
		constructor(
			FramesPerSecond: number
		);

		// Properties:
		FramesPerSecond: number;
	}
}
//#endregion

//#region GameWindowSettings
declare namespace HordeResurrection.Engine.Settings {
	class GameWindowSettings extends System.Object {

		// Properties:
		readonly AvailableResolutions: System.Collections.Generic.List<HordeResurrection.Basic.Primitives.Geometry.Size2D>;
		readonly SelectedWindowResolutionIndex: number;
		readonly SelectedUiResolutionIndex: number;
		readonly AvailableWindowModes: System.Collections.Generic.List<HordeResurrection.Engine.Settings.Stuff.WindowMode>;
		readonly SelectedWindowMode: number;
		readonly AllowWindowResizing: boolean;
		readonly WindowPosition: HordeResurrection.Basic.Primitives.Geometry.Point2D;
		readonly WindowPositionIsEnabled: boolean;
		readonly UpdateRateNotFocusedLikeMinimized: boolean;
		readonly WindowUpdateRate: number;
		readonly WindowMinimizedUpdateRate: number;
		readonly FullscreenLetterboxMode: HordeResurrection.Engine.Settings.Stuff.FullscreenLetterboxMode;
		readonly PreferredWindowResolution: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly VirtualUiResolution: HordeResurrection.Basic.Primitives.Geometry.Size2D;
		readonly WindowMode: HordeResurrection.Engine.Settings.Stuff.WindowMode;
	}
}
//#endregion

//#region GraphicsSettings
declare namespace HordeResurrection.Engine.Settings {
	class GraphicsSettings extends System.Object {

		// Properties:
		readonly IsMouseVisible: boolean;
		readonly IsDrawDesynchronized: boolean;
		readonly VerticalSynchronization: boolean;
		readonly TerritoryVisualizator: HordeResurrection.Engine.Settings.TerritoryVisualizatorSettings;
		readonly DisableVideo: boolean;
		readonly MinimapColors: number[];
	}
}
//#endregion

//#region HordeSettings
declare namespace HordeResurrection.Engine.Settings {
	class HordeSettings extends System.Object {

		// Properties:
		readonly GameSettings: HordeResurrection.Engine.Settings.GameSettings;
		readonly PlayerSettings: HordeResurrection.Engine.Settings.PlayerSettings;
		readonly InputSettings: HordeResurrection.Engine.Settings.InputSettings;
		readonly GameWindowSettings: HordeResurrection.Engine.Settings.GameWindowSettings;
		readonly GraphicsSettings: HordeResurrection.Engine.Settings.GraphicsSettings;
		readonly AudioSettings: HordeResurrection.Engine.Settings.AudioSettings;
		readonly LocalSettings: HordeResurrection.Engine.Settings.LocalSettings;
		readonly LanSettings: HordeResurrection.Engine.Settings.LanSettings;
		readonly InternetSettings: HordeResurrection.Engine.Settings.InternetSettings;
		readonly DebugSettings: HordeResurrection.Engine.Settings.DebugSettings;
		readonly ReplaySettings: HordeResurrection.Engine.Settings.ReplaySettings;
		readonly ScriptSettings: HordeResurrection.Engine.Settings.ScriptSettings;

		// Methods:
		static LoadFromJson(
			path: string | null
		): HordeResurrection.Engine.Settings.HordeSettings;

		SaveToJson(
			path: string | null
		): void;

		static LoadFromJsonAndMerge(
			defaultSettingsPath: string | null,
			patchSettingsPath: string | null
		): HordeResurrection.Engine.Settings.HordeSettings;

		SaveDiffToJson(
			defaultSettingsPath: string | null,
			outputPatchSettingsPath: string | null
		): void;
	}
}
//#endregion

//#region InputSettings
declare namespace HordeResurrection.Engine.Settings {
	class InputSettings extends System.Object {

		// Properties:
		readonly MouseScrollSpeed: number;
		readonly MouseMiddleScrollSpeedFactor: number;
		readonly KeyboardScrollSpeed: number;
		readonly DisableMouseBorderScroll: boolean;
		readonly MouseBorderScrollZone: number;
		readonly KeyboardModifiersPhantomTime: number;
		readonly BlockInputFragmentsOnScenaUpdating: boolean;
	}
}
//#endregion

//#region InternetSettings
declare namespace HordeResurrection.Engine.Settings {
	class InternetSettings extends System.Object {

		// Properties:
		LastSelectedScena: string;
		readonly LobbyAllowSameNations: boolean;
		readonly LobbyCheckAllowedNations: boolean;
		readonly ShowServerEndpoints: boolean;
		readonly ShowRoomEndpoints: boolean;
		readonly GameSynchronizationPeriod: number;
	}
}
//#endregion

//#region LanSettings
declare namespace HordeResurrection.Engine.Settings {
	class LanSettings extends System.Object {

		// Properties:
		LastSelectedScena: string;
		readonly DefaultAddressText: string;
		readonly LobbyAllowSameNations: boolean;
		readonly LobbyCheckAllowedNations: boolean;
		readonly ShowHostEndpoints: boolean;
		readonly ShowLobbyEndpoints: boolean;
		readonly GameSynchronizationPeriod: number;
	}
}
//#endregion

//#region LocalSettings
declare namespace HordeResurrection.Engine.Settings {
	class LocalSettings extends System.Object {

		// Properties:
		LastSelectedScena: string;
	}
}
//#endregion

//#region PlayerSettings
declare namespace HordeResurrection.Engine.Settings {
	class PlayerSettings extends System.Object {

		// Properties:
		Nickname: string;
	}
}
//#endregion

//#region ReplaySettings
declare namespace HordeResurrection.Engine.Settings {
	class ReplaySettings extends System.Object {

		// Properties:
		LastSelectedReplay: string;
		readonly SaveReplay: boolean;
		readonly CheckScenaIntegrity: boolean;
		readonly CheckReplayNations: boolean;
		readonly AllowInputDuringReplayPlaying: boolean;
		readonly BotReproducingMode: boolean;
	}
}
//#endregion

//#region ReportsState
declare namespace HordeResurrection.Engine.Settings {
	class ReportsState extends System.Object {

		// Properties:
		SendReports: boolean;
		LastSendReportsDate: Date;

		// Methods:
		static LoadFromJsonAndMerge(
			defaultSettingsPath: string | null,
			patchSettingsPath: string | null
		): HordeResurrection.Engine.Settings.ReportsState;

		SaveDiffToJson(): void;
	}
}
//#endregion

//#region ScriptSettings
declare namespace HordeResurrection.Engine.Settings {
	class ScriptSettings extends System.Object {

		// Properties:
		readonly ScriptsWorkMode: HordeResurrection.Engine.Settings.ScriptsMode;
		readonly HotReloadMode: HordeResurrection.Engine.Settings.ScriptsMode;
		readonly HotReloadOnFileChanging: boolean;
		readonly UnsafeMode: boolean;
		readonly AllowContentPackScripts: boolean;
		readonly EnableDebugPlugins: boolean;
		readonly ExecutingTimeoutSeconds: number;

		// Methods:
		GetIsEnabled(
			isNetworkMode: boolean
		): boolean;

		GetHotReload(
			isNetworkMode: boolean
		): boolean;
	}
}
//#endregion

//#region ScriptsMode
declare namespace HordeResurrection.Engine.Settings {
	abstract class ScriptsMode extends System.EnumFlags {
		/** ScriptsMode.Disable = 0 */ static readonly Disable: ScriptsMode;
		/** ScriptsMode.AllowSingleplayer = 1 */ static readonly AllowSingleplayer: ScriptsMode;
		/** ScriptsMode.AllowMultiplayer = 2 */ static readonly AllowMultiplayer: ScriptsMode;
	}
}
//#endregion

//#region SettingsMerger
declare namespace HordeResurrection.Engine.Settings {
	class SettingsMerger<TSettings> extends System.Object {

		// Constructors:
		constructor(
			$TSettings: any,
			creationMethod: System.Func_0<TSettings> | System.Func | null
		);

		// Properties:
		readonly CreationMethod: System.Func_0<TSettings> | System.Func;

		// Methods:
		LoadFromJson(
			path: string | null
		): TSettings;

		SaveToJson(
			path: string | null
		): void;

		LoadFromJsonAndMerge(
			defaultSettingsPath: string | null,
			patchSettingsPath: string | null
		): TSettings;

		SaveDiffToJson(
			settings: TSettings | null,
			defaultSettingsPath: string | null,
			outputPatchSettingsPath: string | null
		): void;

		// Some generics magic for TypeScript:
		private $SettingsMerger_TSettings: TSettings;
	}
}
//#endregion

//#region FullscreenLetterboxMode
declare namespace HordeResurrection.Engine.Settings.Stuff {
	abstract class FullscreenLetterboxMode extends System.Enum {
		/** FullscreenLetterboxMode.FitUiSize = 0 */ static readonly FitUiSize: FullscreenLetterboxMode;
		/** FullscreenLetterboxMode.FitWindowSize = 1 */ static readonly FitWindowSize: FullscreenLetterboxMode;
	}
}
//#endregion

//#region WindowMode
declare namespace HordeResurrection.Engine.Settings.Stuff {
	abstract class WindowMode extends System.Enum {
		/** WindowMode.Windowed = 0 */ static readonly Windowed: WindowMode;
		/** WindowMode.Fullscreen = 1 */ static readonly Fullscreen: WindowMode;
		/** WindowMode.ExclusiveFullscreen = 2 */ static readonly ExclusiveFullscreen: WindowMode;
	}
}
//#endregion

//#region TerritoryVisualizatorSettings
declare namespace HordeResurrection.Engine.Settings {
	class TerritoryVisualizatorSettings extends System.Object {

		// Properties:
		readonly FillMode: HordeResurrection.Engine.Settings.FillMode;
		readonly DrawPopulationTerritory: boolean;
	}
}
//#endregion

//#region FillMode
declare namespace HordeResurrection.Engine.Settings {
	abstract class FillMode extends System.Enum {
		/** FillMode.Dots = 0 */ static readonly Dots: FillMode;
		/** FillMode.Cover = 1 */ static readonly Cover: FillMode;
	}
}
//#endregion

//#region NetworkState
declare namespace HordeResurrection.Engine.StateMachines.Network.Main {
	abstract class NetworkState extends System.Enum {
		/** NetworkState.Inactive = 0 */ static readonly Inactive: NetworkState;
		/** NetworkState.Activated = 1 */ static readonly Activated: NetworkState;
		/** NetworkState.PreLobby = 2 */ static readonly PreLobby: NetworkState;
		/** NetworkState.CreatingLobby = 3 */ static readonly CreatingLobby: NetworkState;
		/** NetworkState.ConnectingToHost = 4 */ static readonly ConnectingToHost: NetworkState;
		/** NetworkState.ConnectedToHost = 5 */ static readonly ConnectedToHost: NetworkState;
		/** NetworkState.HostMode = 6 */ static readonly HostMode: NetworkState;
		/** NetworkState.GameStarting = 7 */ static readonly GameStarting: NetworkState;
		/** NetworkState.GameStarted = 8 */ static readonly GameStarted: NetworkState;
		/** NetworkState.Error = 9 */ static readonly Error: NetworkState;
	}
}
//#endregion

//#region NetworkStateCommand
declare namespace HordeResurrection.Engine.StateMachines.Network.Main {
	abstract class NetworkStateCommand extends System.Enum {
		/** NetworkStateCommand.ActivateNetwork = 0 */ static readonly ActivateNetwork: NetworkStateCommand;
		/** NetworkStateCommand.StartPreLobby = 1 */ static readonly StartPreLobby: NetworkStateCommand;
		/** NetworkStateCommand.CreateLobby = 2 */ static readonly CreateLobby: NetworkStateCommand;
		/** NetworkStateCommand.CancelCreateLobby = 3 */ static readonly CancelCreateLobby: NetworkStateCommand;
		/** NetworkStateCommand.HostLobby = 4 */ static readonly HostLobby: NetworkStateCommand;
		/** NetworkStateCommand.TryConnectToLobby = 5 */ static readonly TryConnectToLobby: NetworkStateCommand;
		/** NetworkStateCommand.CantConnectToLobby = 6 */ static readonly CantConnectToLobby: NetworkStateCommand;
		/** NetworkStateCommand.CompleteConnectToLobby = 7 */ static readonly CompleteConnectToLobby: NetworkStateCommand;
		/** NetworkStateCommand.ExitLobby = 8 */ static readonly ExitLobby: NetworkStateCommand;
		/** NetworkStateCommand.PrepareGameStart = 9 */ static readonly PrepareGameStart: NetworkStateCommand;
		/** NetworkStateCommand.GameStart = 10 */ static readonly GameStart: NetworkStateCommand;
		/** NetworkStateCommand.EndGame = 11 */ static readonly EndGame: NetworkStateCommand;
		/** NetworkStateCommand.DeactivateNetwork = 12 */ static readonly DeactivateNetwork: NetworkStateCommand;
	}
}
//#endregion

//#region UiState
declare namespace HordeResurrection.Engine.StateMachines.UI {
	abstract class UiState extends System.Enum {
		/** UiState.Undefined = 0 */ static readonly Undefined: UiState;
		/** UiState.Intro = 1 */ static readonly Intro: UiState;
		/** UiState.StartMenu = 2 */ static readonly StartMenu: UiState;
		/** UiState.TestMenu = 3 */ static readonly TestMenu: UiState;
		/** UiState.Loading = 4 */ static readonly Loading: UiState;
		/** UiState.LocalLobby = 5 */ static readonly LocalLobby: UiState;
		/** UiState.LanPreLobby = 6 */ static readonly LanPreLobby: UiState;
		/** UiState.LanCreateLobby = 7 */ static readonly LanCreateLobby: UiState;
		/** UiState.LanLobby = 8 */ static readonly LanLobby: UiState;
		/** UiState.InternetPreLobby = 9 */ static readonly InternetPreLobby: UiState;
		/** UiState.InternetCreateLobby = 10 */ static readonly InternetCreateLobby: UiState;
		/** UiState.InternetLobby = 11 */ static readonly InternetLobby: UiState;
		/** UiState.ReplaysLobby = 12 */ static readonly ReplaysLobby: UiState;
		/** UiState.Settings = 13 */ static readonly Settings: UiState;
		/** UiState.Authors = 14 */ static readonly Authors: UiState;
		/** UiState.Battle = 15 */ static readonly Battle: UiState;
	}
}
//#endregion

//#region UiStateCommand
declare namespace HordeResurrection.Engine.StateMachines.UI {
	abstract class UiStateCommand extends System.Enum {
		/** UiStateCommand.Back = 0 */ static readonly Back: UiStateCommand;
		/** UiStateCommand.StartIntro = 1 */ static readonly StartIntro: UiStateCommand;
		/** UiStateCommand.GoToStartMenu = 2 */ static readonly GoToStartMenu: UiStateCommand;
		/** UiStateCommand.OpenTestMenu = 3 */ static readonly OpenTestMenu: UiStateCommand;
		/** UiStateCommand.GoToLoading = 4 */ static readonly GoToLoading: UiStateCommand;
		/** UiStateCommand.StartBattle = 5 */ static readonly StartBattle: UiStateCommand;
		/** UiStateCommand.OpenSettings = 6 */ static readonly OpenSettings: UiStateCommand;
		/** UiStateCommand.OpenAuthors = 7 */ static readonly OpenAuthors: UiStateCommand;
		/** UiStateCommand.OpenLocalLobby = 8 */ static readonly OpenLocalLobby: UiStateCommand;
		/** UiStateCommand.OpenLanPreLobby = 9 */ static readonly OpenLanPreLobby: UiStateCommand;
		/** UiStateCommand.OpenLanCreateLobby = 10 */ static readonly OpenLanCreateLobby: UiStateCommand;
		/** UiStateCommand.OpenLanLobby = 11 */ static readonly OpenLanLobby: UiStateCommand;
		/** UiStateCommand.OpenInternetPreLobby = 12 */ static readonly OpenInternetPreLobby: UiStateCommand;
		/** UiStateCommand.OpenInternetCreateLobby = 13 */ static readonly OpenInternetCreateLobby: UiStateCommand;
		/** UiStateCommand.OpenInternetLobby = 14 */ static readonly OpenInternetLobby: UiStateCommand;
		/** UiStateCommand.OpenReplaysLobby = 15 */ static readonly OpenReplaysLobby: UiStateCommand;
	}
}
//#endregion

//#region ServerRoomsScanner.ReceivedRoomState
declare namespace HordeResurrection.Engine.UiControllers.Lobby.InternetLobby.Stuff.ServerRoomsScanner {
	abstract class ReceivedRoomState extends System.Enum {
		/** ReceivedRoomState.FirstInfo = 0 */ static readonly FirstInfo: ReceivedRoomState;
		/** ReceivedRoomState.Update = 1 */ static readonly Update: ReceivedRoomState;
		/** ReceivedRoomState.Gone = 2 */ static readonly Gone: ReceivedRoomState;
	}
}
//#endregion

//#region ServersScanner.ReceivedServerState
declare namespace HordeResurrection.Engine.UiControllers.Lobby.InternetLobby.Stuff.ServersScanner {
	abstract class ReceivedServerState extends System.Enum {
		/** ReceivedServerState.FirstResponce = 0 */ static readonly FirstResponce: ReceivedServerState;
		/** ReceivedServerState.Update = 1 */ static readonly Update: ReceivedServerState;
		/** ReceivedServerState.Gone = 2 */ static readonly Gone: ReceivedServerState;
	}
}
//#endregion

//#region Types shorthand
// ----------------------------------------------------- //
// ---------========= Types shorthand =========--------- //
// ----------------------------------------------------- //
/*
export const BattleController = HordeResurrection.Engine.Logic.Battle.BattleController;
export type BattleController = HordeResurrection.Engine.Logic.Battle.BattleController;
export const PlayerDesynchronizedEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.PlayerDesynchronizedEventArgs;
export type PlayerDesynchronizedEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.PlayerDesynchronizedEventArgs;
export const GameLogicExceptionThrownEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.GameLogicExceptionThrownEventArgs;
export type GameLogicExceptionThrownEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.GameLogicExceptionThrownEventArgs;
export const BeforeStopEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.BeforeStopEventArgs;
export type BeforeStopEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.BeforeStopEventArgs;
export const GameMessageEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.GameMessageEventArgs;
export type GameMessageEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.GameMessageEventArgs;
export const ChatMessageEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.ChatMessageEventArgs;
export type ChatMessageEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.ChatMessageEventArgs;
export const AttentionEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.AttentionEventArgs;
export type AttentionEventArgs = HordeResurrection.Engine.Logic.Battle.BattleController.AttentionEventArgs;
export const BattleCamera = HordeResurrection.Engine.Logic.Battle.Camera.BattleCamera;
export type BattleCamera = HordeResurrection.Engine.Logic.Battle.Camera.BattleCamera;
export const CameraConfiguration = HordeResurrection.Engine.Logic.Battle.Camera.CameraConfiguration;
export type CameraConfiguration = HordeResurrection.Engine.Logic.Battle.Camera.CameraConfiguration;
export const CameraScroller = HordeResurrection.Engine.Logic.Battle.Camera.CameraScroller;
export type CameraScroller = HordeResurrection.Engine.Logic.Battle.Camera.CameraScroller;
export const CameraZoomer = HordeResurrection.Engine.Logic.Battle.Camera.CameraZoomer;
export type CameraZoomer = HordeResurrection.Engine.Logic.Battle.Camera.CameraZoomer;
export const AddResourcesCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.AddResourcesCheatArgs;
export type AddResourcesCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.AddResourcesCheatArgs;
export const BaseCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs;
export type BaseCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.BaseCheatArgs;
export const ControlAnotherSettlementsCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.ControlAnotherSettlementsCheatArgs;
export type ControlAnotherSettlementsCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.ControlAnotherSettlementsCheatArgs;
export const DamageSelectedUnitsCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.DamageSelectedUnitsCheatArgs;
export type DamageSelectedUnitsCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.DamageSelectedUnitsCheatArgs;
export const DamageUnitAtCellCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.DamageUnitAtCellCheatArgs;
export type DamageUnitAtCellCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.DamageUnitAtCellCheatArgs;
export const FogOfWarCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.FogOfWarCheatArgs;
export type FogOfWarCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.FogOfWarCheatArgs;
export const HealAllUnitsCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.HealAllUnitsCheatArgs;
export type HealAllUnitsCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.HealAllUnitsCheatArgs;
export const HealSelectedUnitsCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.HealSelectedUnitsCheatArgs;
export type HealSelectedUnitsCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.HealSelectedUnitsCheatArgs;
export const KillSelectedUnitsCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.KillSelectedUnitsCheatArgs;
export type KillSelectedUnitsCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.KillSelectedUnitsCheatArgs;
export const KillUnitAtCellCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.KillUnitAtCellCheatArgs;
export type KillUnitAtCellCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.KillUnitAtCellCheatArgs;
export const TakeAwayResourcesCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.TakeAwayResourcesCheatArgs;
export type TakeAwayResourcesCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.TakeAwayResourcesCheatArgs;
export const TeleportSelectedUnitsToPositionCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.TeleportSelectedUnitsToPositionCheatArgs;
export type TeleportSelectedUnitsToPositionCheatArgs = HordeResurrection.Engine.Logic.Battle.Cheats.Arguments.TeleportSelectedUnitsToPositionCheatArgs;
export const CheatsController = HordeResurrection.Engine.Logic.Battle.Cheats.CheatsController;
export type CheatsController = HordeResurrection.Engine.Logic.Battle.Cheats.CheatsController;
export const AddResourcesCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.AddResourcesCheat;
export type AddResourcesCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.AddResourcesCheat;
export const BaseCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat;
export type BaseCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.BaseCheat;
export const ControlAnotherSettlementsCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.ControlAnotherSettlementsCheat;
export type ControlAnotherSettlementsCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.ControlAnotherSettlementsCheat;
export const DamageSelectedUnitsCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.DamageSelectedUnitsCheat;
export type DamageSelectedUnitsCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.DamageSelectedUnitsCheat;
export const DamageUnitAtCellCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.DamageUnitAtCellCheat;
export type DamageUnitAtCellCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.DamageUnitAtCellCheat;
export const FogOfWarCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.FogOfWarCheat;
export type FogOfWarCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.FogOfWarCheat;
export const HealAllUnitsCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.HealAllUnitsCheat;
export type HealAllUnitsCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.HealAllUnitsCheat;
export const HealSelectedUnitsCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.HealSelectedUnitsCheat;
export type HealSelectedUnitsCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.HealSelectedUnitsCheat;
export const KillSelectedUnitsCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.KillSelectedUnitsCheat;
export type KillSelectedUnitsCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.KillSelectedUnitsCheat;
export const KillUnitAtCellCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.KillUnitAtCellCheat;
export type KillUnitAtCellCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.KillUnitAtCellCheat;
export const TakeAwayResourcesCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.TakeAwayResourcesCheat;
export type TakeAwayResourcesCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.TakeAwayResourcesCheat;
export const TeleportSelectedUnitsToPositionCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.TeleportSelectedUnitsToPositionCheat;
export type TeleportSelectedUnitsToPositionCheat = HordeResurrection.Engine.Logic.Battle.Cheats.Implementations.TeleportSelectedUnitsToPositionCheat;
export const ScenaChangedEventArgs = HordeResurrection.Engine.Logic.Battle.Events.ScenaChangedEventArgs;
export type ScenaChangedEventArgs = HordeResurrection.Engine.Logic.Battle.Events.ScenaChangedEventArgs;
export const ActionConverter = HordeResurrection.Engine.Logic.Battle.InputSystem.Converters.ActionConverter;
export type ActionConverter = HordeResurrection.Engine.Logic.Battle.InputSystem.Converters.ActionConverter;
export const InputBuilderState = HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.InputBuilderState;
export type InputBuilderState = HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.InputBuilderState;
export const VirtualSelectUnitsMode = HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode;
export type VirtualSelectUnitsMode = HordeResurrection.Engine.Logic.Battle.InputSystem.Enums.VirtualSelectUnitsMode;
export const InputConstants = HordeResurrection.Engine.Logic.Battle.InputSystem.InputConstants;
export type InputConstants = HordeResurrection.Engine.Logic.Battle.InputSystem.InputConstants;
export const AInputFragment = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment;
export type AInputFragment = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.AInputFragment;
export const InputFragmentBattleUiMouseClick = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentBattleUiMouseClick;
export type InputFragmentBattleUiMouseClick = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentBattleUiMouseClick;
export const InputFragmentBattleUiMouseDragEnd = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentBattleUiMouseDragEnd;
export type InputFragmentBattleUiMouseDragEnd = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentBattleUiMouseDragEnd;
export const InputFragmentBattleUiMouseDragStart = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentBattleUiMouseDragStart;
export type InputFragmentBattleUiMouseDragStart = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentBattleUiMouseDragStart;
export const InputFragmentCancel = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentCancel;
export type InputFragmentCancel = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentCancel;
export const InputFragmentChangeAutomaticCommandMode = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentChangeAutomaticCommandMode;
export type InputFragmentChangeAutomaticCommandMode = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentChangeAutomaticCommandMode;
export const InputFragmentKeyRelease = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentKeyRelease;
export type InputFragmentKeyRelease = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentKeyRelease;
export const InputFragmentModifier = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentModifier;
export type InputFragmentModifier = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentModifier;
export const InputFragmentMouseClick = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentMouseClick;
export type InputFragmentMouseClick = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentMouseClick;
export const InputFragmentMouseClickType = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentMouseClickType;
export type InputFragmentMouseClickType = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentMouseClickType;
export const InputFragmentNumberValueApply = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentNumberValueApply;
export type InputFragmentNumberValueApply = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentNumberValueApply;
export const InputFragmentNumberValueChanging = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentNumberValueChanging;
export type InputFragmentNumberValueChanging = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentNumberValueChanging;
export const InputFragmentSelectFromList = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentSelectFromList;
export type InputFragmentSelectFromList = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentSelectFromList;
export const InputFragmentUnitCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentUnitCommand;
export type InputFragmentUnitCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentUnitCommand;
export const InjectBuilderMode = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InjectBuilderMode;
export type InjectBuilderMode = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InjectBuilderMode;
export const InputFragmentWithBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentWithBuilder;
export type InputFragmentWithBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputFragments.InputFragmentWithBuilder;
export const AVirtualInputItemBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder;
export type AVirtualInputItemBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.AVirtualInputItemBuilder;
export const FactoryVirtualInputItemBuilderByUnitCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.Factory.FactoryVirtualInputItemBuilderByUnitCommand;
export type FactoryVirtualInputItemBuilderByUnitCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.Factory.FactoryVirtualInputItemBuilderByUnitCommand;
export const VirtualSelectUnitsBuilderUtils = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.Factory.VirtualSelectUnitsBuilderUtils;
export type VirtualSelectUnitsBuilderUtils = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.Factory.VirtualSelectUnitsBuilderUtils;
export const VirtualSmartBuilderUtils = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.Factory.VirtualSmartBuilderUtils;
export type VirtualSmartBuilderUtils = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.Factory.VirtualSmartBuilderUtils;
export const VirtualChangeAutomaticModeCommandBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualChangeAutomaticModeCommandBuilder;
export type VirtualChangeAutomaticModeCommandBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualChangeAutomaticModeCommandBuilder;
export const VirtualCheatBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualCheatBuilder;
export type VirtualCheatBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualCheatBuilder;
export const VirtualOneClickCommandBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualOneClickCommandBuilder;
export type VirtualOneClickCommandBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualOneClickCommandBuilder;
export const VirtualPointBasedCommandBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualPointBasedCommandBuilder;
export type VirtualPointBasedCommandBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualPointBasedCommandBuilder;
export const VirtualProduceCommandBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualProduceCommandBuilder;
export type VirtualProduceCommandBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualProduceCommandBuilder;
export const VirtualSelectUnitsBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualSelectUnitsBuilder;
export type VirtualSelectUnitsBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualSelectUnitsBuilder;
export const VirtualSmartMouseClickBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualSmartMouseClickBuilder;
export type VirtualSmartMouseClickBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualSmartMouseClickBuilder;
export const VirtualSquadMemorizeBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualSquadMemorizeBuilder;
export type VirtualSquadMemorizeBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualSquadMemorizeBuilder;
export const VirtualSquadSelectBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualSquadSelectBuilder;
export type VirtualSquadSelectBuilder = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItemBuilders.VirtualSquadSelectBuilder;
export const AVirtualInputItem = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem;
export type AVirtualInputItem = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.AVirtualInputItem;
export const VirtualProduceCommandTemplates = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.ByAction.VirtualProduceCommandTemplates;
export type VirtualProduceCommandTemplates = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.ByAction.VirtualProduceCommandTemplates;
export const VirtualChangeAutomaticModeCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualChangeAutomaticModeCommand;
export type VirtualChangeAutomaticModeCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualChangeAutomaticModeCommand;
export const VirtualCheat = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualCheat;
export type VirtualCheat = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualCheat;
export const VirtualInputItemType = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualInputItemType;
export type VirtualInputItemType = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualInputItemType;
export const VirtualMoveOutCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualMoveOutCommand;
export type VirtualMoveOutCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualMoveOutCommand;
export const VirtualMoveOutExtCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualMoveOutExtCommand;
export type VirtualMoveOutExtCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualMoveOutExtCommand;
export const VirtualOneClickCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualOneClickCommand;
export type VirtualOneClickCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualOneClickCommand;
export const VirtualPointBasedCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualPointBasedCommand;
export type VirtualPointBasedCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualPointBasedCommand;
export const VirtualProduceBuildingCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualProduceBuildingCommand;
export type VirtualProduceBuildingCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualProduceBuildingCommand;
export const VirtualProduceUnitCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualProduceUnitCommand;
export type VirtualProduceUnitCommand = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualProduceUnitCommand;
export const VirtualSelectUnits = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualSelectUnits;
export type VirtualSelectUnits = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualSelectUnits;
export const VirtualSelectUnitsById = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualSelectUnitsById;
export type VirtualSelectUnitsById = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualSelectUnitsById;
export const VirtualSmartMouseClick = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualSmartMouseClick;
export type VirtualSmartMouseClick = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualSmartMouseClick;
export const VirtualSquadMemorize = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualSquadMemorize;
export type VirtualSquadMemorize = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualSquadMemorize;
export const VirtualSquadSelect = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualSquadSelect;
export type VirtualSquadSelect = HordeResurrection.Engine.Logic.Battle.InputSystem.InputItems.VirtualSquadSelect;
export const InputModule = HordeResurrection.Engine.Logic.Battle.InputSystem.InputModule;
export type InputModule = HordeResurrection.Engine.Logic.Battle.InputSystem.InputModule;
export const RecordChecksumItem = HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordChecksumItem;
export type RecordChecksumItem = HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordChecksumItem;
export const RecordInfo = HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordInfo;
export type RecordInfo = HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordInfo;
export const RecordInputItem = HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordInputItem;
export type RecordInputItem = HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordInputItem;
export const RecordItemBase = HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordItemBase;
export type RecordItemBase = HordeResurrection.Engine.Logic.Battle.ReplaySystem.RecordItemBase;
export const ReplayBuffer = HordeResurrection.Engine.Logic.Battle.ReplaySystem.ReplayBuffer;
export type ReplayBuffer = HordeResurrection.Engine.Logic.Battle.ReplaySystem.ReplayBuffer;
export const ReplayWorkMode = HordeResurrection.Engine.Logic.Battle.ReplaySystem.ReplayWorkMode;
export type ReplayWorkMode = HordeResurrection.Engine.Logic.Battle.ReplaySystem.ReplayWorkMode;
export const BattlePause = HordeResurrection.Engine.Logic.Battle.Stuff.BattlePause;
export type BattlePause = HordeResurrection.Engine.Logic.Battle.Stuff.BattlePause;
export const PauseChangedEventArgs = HordeResurrection.Engine.Logic.Battle.Stuff.BattlePause.PauseChangedEventArgs;
export type PauseChangedEventArgs = HordeResurrection.Engine.Logic.Battle.Stuff.BattlePause.PauseChangedEventArgs;
export const ChatTargets = HordeResurrection.Engine.Logic.Battle.Stuff.ChatTargets;
export type ChatTargets = HordeResurrection.Engine.Logic.Battle.Stuff.ChatTargets;
export const GameTimer = HordeResurrection.Engine.Logic.Battle.Stuff.GameTimer;
export type GameTimer = HordeResurrection.Engine.Logic.Battle.Stuff.GameTimer;
export const FpsEventArgs = HordeResurrection.Engine.Logic.Battle.Stuff.GameTimer.FpsEventArgs;
export type FpsEventArgs = HordeResurrection.Engine.Logic.Battle.Stuff.GameTimer.FpsEventArgs;
export const LobbyPlayerSettings = HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings;
export type LobbyPlayerSettings = HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings;
export const LocalChangedParamEventArgs = HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings.LocalChangedParamEventArgs;
export type LocalChangedParamEventArgs = HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings.LocalChangedParamEventArgs;
export const RemoteChangedParamEventArgs = HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings.RemoteChangedParamEventArgs;
export type RemoteChangedParamEventArgs = HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings.RemoteChangedParamEventArgs;
export const ParamChangedEventArgs = HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings.ParamChangedEventArgs;
export type ParamChangedEventArgs = HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerSettings.ParamChangedEventArgs;
export const LobbyPlayerState = HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerState;
export type LobbyPlayerState = HordeResurrection.Engine.Logic.Lobby.Stuff.LobbyPlayerState;
export const GameStateChangedEventArgs = HordeResurrection.Engine.Logic.Main.Events.GameStateChangedEventArgs;
export type GameStateChangedEventArgs = HordeResurrection.Engine.Logic.Main.Events.GameStateChangedEventArgs;
export const MainController = HordeResurrection.Engine.Logic.Main.MainController;
export type MainController = HordeResurrection.Engine.Logic.Main.MainController;
export const PlayersController = HordeResurrection.Engine.Logic.Main.PlayersController;
export type PlayersController = HordeResurrection.Engine.Logic.Main.PlayersController;
export const PlayerInputBuilder = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerInputBuilder;
export type PlayerInputBuilder = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerInputBuilder;
export const PlayerInputFuzzer = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerInputFuzzer;
export type PlayerInputFuzzer = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerInputFuzzer;
export const PlayerInputFuzzerConfiguration = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerInputFuzzerConfiguration;
export type PlayerInputFuzzerConfiguration = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerInputFuzzerConfiguration;
export const PlayerSquadSelector = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector;
export type PlayerSquadSelector = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector;
export const SelectionPattern = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector.SelectionPattern;
export type SelectionPattern = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector.SelectionPattern;
export const SquadChangedEventArgs = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector.SquadChangedEventArgs;
export type SquadChangedEventArgs = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerSquadSelector.SquadChangedEventArgs;
export const PlayerVirtualInput = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerVirtualInput;
export type PlayerVirtualInput = HordeResurrection.Engine.Logic.Main.Players.Input.PlayerVirtualInput;
export const BasePlayerUnitsSelector = HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.BasePlayerUnitsSelector;
export type BasePlayerUnitsSelector = HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.BasePlayerUnitsSelector;
export const PlayerCyclicUnitsSelector = HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerCyclicUnitsSelector;
export type PlayerCyclicUnitsSelector = HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerCyclicUnitsSelector;
export const PlayerRegionUnitsSelector = HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
export type PlayerRegionUnitsSelector = HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerRegionUnitsSelector;
export const PlayerUnitSelectors = HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerUnitSelectors;
export type PlayerUnitSelectors = HordeResurrection.Engine.Logic.Main.Players.Input.QuickUnitSelectors.PlayerUnitSelectors;
export const PlayerOrigin = HordeResurrection.Engine.Logic.Main.Players.Origin.PlayerOrigin;
export type PlayerOrigin = HordeResurrection.Engine.Logic.Main.Players.Origin.PlayerOrigin;
export const PlayerOriginControl = HordeResurrection.Engine.Logic.Main.Players.Origin.PlayerOriginControl;
export type PlayerOriginControl = HordeResurrection.Engine.Logic.Main.Players.Origin.PlayerOriginControl;
export const PlayerOriginInput = HordeResurrection.Engine.Logic.Main.Players.Origin.PlayerOriginInput;
export type PlayerOriginInput = HordeResurrection.Engine.Logic.Main.Players.Origin.PlayerOriginInput;
export const Player = HordeResurrection.Engine.Logic.Main.Players.Player;
export type Player = HordeResurrection.Engine.Logic.Main.Players.Player;
export const PlayerInterfaceSounds = HordeResurrection.Engine.Logic.Main.Players.PlayerInterfaceSounds;
export type PlayerInterfaceSounds = HordeResurrection.Engine.Logic.Main.Players.PlayerInterfaceSounds;
export const PlayerReplayModel = HordeResurrection.Engine.Logic.Main.Players.PlayerReplayModel;
export type PlayerReplayModel = HordeResurrection.Engine.Logic.Main.Players.PlayerReplayModel;
export const PlayerState = HordeResurrection.Engine.Logic.Main.Players.PlayerState;
export type PlayerState = HordeResurrection.Engine.Logic.Main.Players.PlayerState;
export const CommandLineArgs = HordeResurrection.Engine.Logic.Main.Stuff.CommandLineArgs;
export type CommandLineArgs = HordeResurrection.Engine.Logic.Main.Stuff.CommandLineArgs;
export const GameState = HordeResurrection.Engine.Logic.Main.Stuff.GameState;
export type GameState = HordeResurrection.Engine.Logic.Main.Stuff.GameState;
export const AudioSettings = HordeResurrection.Engine.Settings.AudioSettings;
export type AudioSettings = HordeResurrection.Engine.Settings.AudioSettings;
export const VolumeChangedEventArgs = HordeResurrection.Engine.Settings.AudioSettings.VolumeChangedEventArgs;
export type VolumeChangedEventArgs = HordeResurrection.Engine.Settings.AudioSettings.VolumeChangedEventArgs;
export const DebugSettings = HordeResurrection.Engine.Settings.DebugSettings;
export type DebugSettings = HordeResurrection.Engine.Settings.DebugSettings;
export const GameSettings = HordeResurrection.Engine.Settings.GameSettings;
export type GameSettings = HordeResurrection.Engine.Settings.GameSettings;
export const FramesPerSecondChangedEventArgs = HordeResurrection.Engine.Settings.GameSettings.FramesPerSecondChangedEventArgs;
export type FramesPerSecondChangedEventArgs = HordeResurrection.Engine.Settings.GameSettings.FramesPerSecondChangedEventArgs;
export const GameWindowSettings = HordeResurrection.Engine.Settings.GameWindowSettings;
export type GameWindowSettings = HordeResurrection.Engine.Settings.GameWindowSettings;
export const GraphicsSettings = HordeResurrection.Engine.Settings.GraphicsSettings;
export type GraphicsSettings = HordeResurrection.Engine.Settings.GraphicsSettings;
export const HordeSettings = HordeResurrection.Engine.Settings.HordeSettings;
export type HordeSettings = HordeResurrection.Engine.Settings.HordeSettings;
export const InputSettings = HordeResurrection.Engine.Settings.InputSettings;
export type InputSettings = HordeResurrection.Engine.Settings.InputSettings;
export const InternetSettings = HordeResurrection.Engine.Settings.InternetSettings;
export type InternetSettings = HordeResurrection.Engine.Settings.InternetSettings;
export const LanSettings = HordeResurrection.Engine.Settings.LanSettings;
export type LanSettings = HordeResurrection.Engine.Settings.LanSettings;
export const LocalSettings = HordeResurrection.Engine.Settings.LocalSettings;
export type LocalSettings = HordeResurrection.Engine.Settings.LocalSettings;
export const PlayerSettings = HordeResurrection.Engine.Settings.PlayerSettings;
export type PlayerSettings = HordeResurrection.Engine.Settings.PlayerSettings;
export const ReplaySettings = HordeResurrection.Engine.Settings.ReplaySettings;
export type ReplaySettings = HordeResurrection.Engine.Settings.ReplaySettings;
export const ReportsState = HordeResurrection.Engine.Settings.ReportsState;
export type ReportsState = HordeResurrection.Engine.Settings.ReportsState;
export const ScriptSettings = HordeResurrection.Engine.Settings.ScriptSettings;
export type ScriptSettings = HordeResurrection.Engine.Settings.ScriptSettings;
export const ScriptsMode = HordeResurrection.Engine.Settings.ScriptsMode;
export type ScriptsMode = HordeResurrection.Engine.Settings.ScriptsMode;
export const SettingsMerger = HordeResurrection.Engine.Settings.SettingsMerger;
export type SettingsMerger<TSettings> = HordeResurrection.Engine.Settings.SettingsMerger<TSettings>;
export const FullscreenLetterboxMode = HordeResurrection.Engine.Settings.Stuff.FullscreenLetterboxMode;
export type FullscreenLetterboxMode = HordeResurrection.Engine.Settings.Stuff.FullscreenLetterboxMode;
export const WindowMode = HordeResurrection.Engine.Settings.Stuff.WindowMode;
export type WindowMode = HordeResurrection.Engine.Settings.Stuff.WindowMode;
export const TerritoryVisualizatorSettings = HordeResurrection.Engine.Settings.TerritoryVisualizatorSettings;
export type TerritoryVisualizatorSettings = HordeResurrection.Engine.Settings.TerritoryVisualizatorSettings;
export const FillMode = HordeResurrection.Engine.Settings.FillMode;
export type FillMode = HordeResurrection.Engine.Settings.FillMode;
export const NetworkState = HordeResurrection.Engine.StateMachines.Network.Main.NetworkState;
export type NetworkState = HordeResurrection.Engine.StateMachines.Network.Main.NetworkState;
export const NetworkStateCommand = HordeResurrection.Engine.StateMachines.Network.Main.NetworkStateCommand;
export type NetworkStateCommand = HordeResurrection.Engine.StateMachines.Network.Main.NetworkStateCommand;
export const UiState = HordeResurrection.Engine.StateMachines.UI.UiState;
export type UiState = HordeResurrection.Engine.StateMachines.UI.UiState;
export const UiStateCommand = HordeResurrection.Engine.StateMachines.UI.UiStateCommand;
export type UiStateCommand = HordeResurrection.Engine.StateMachines.UI.UiStateCommand;
export const ReceivedRoomState = HordeResurrection.Engine.UiControllers.Lobby.InternetLobby.Stuff.ServerRoomsScanner.ReceivedRoomState;
export type ReceivedRoomState = HordeResurrection.Engine.UiControllers.Lobby.InternetLobby.Stuff.ServerRoomsScanner.ReceivedRoomState;
export const ReceivedServerState = HordeResurrection.Engine.UiControllers.Lobby.InternetLobby.Stuff.ServersScanner.ReceivedServerState;
export type ReceivedServerState = HordeResurrection.Engine.UiControllers.Lobby.InternetLobby.Stuff.ServersScanner.ReceivedServerState;
*/
//#endregion
